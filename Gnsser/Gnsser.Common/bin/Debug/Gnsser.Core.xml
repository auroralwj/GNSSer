<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gnsser.Core</name>
    </assembly>
    <members>
        <member name="T:Gnsser.LongPaser">
            <summary>
            对整型数据分解，避免出错
            </summary>
        </member>
        <member name="P:Gnsser.LongPaser.Value">
            <summary>
            长整型
            </summary>
        </member>
        <member name="P:Gnsser.LongPaser.IsPositive">
            <summary>
            是否为正
            </summary>
        </member>
        <member name="P:Gnsser.LongPaser.ValueString">
            <summary>
            字符串
            </summary>
        </member>
        <member name="P:Gnsser.LongPaser.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Gnsser.LongPaser.GetDouble(System.Int32)">
            <summary>
            获取双精度浮点数。
            </summary>
            <param name="fractionPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LongPaser.GetTail(System.Int32)">
            <summary>
            获取末尾
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LongPaser.GetHeader(System.Int32)">
            <summary>
            获取末尾
            </summary>
            <param name="tailCount"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LongPaser.GetSub(System.Int32,System.Int32)">
            <summary>
            截断
            </summary>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AndroidGnssTimeConverter">
            单位默认为秒，若非，则以单位尾注，如Nanos，以GPS时间作为转换基准。
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.GnssPeriod">
            <summary>
             GNSS时间系统周期，单位秒，GPS为周秒，Glonass为日秒
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.OffsetOfSatSysTimeToGpsT">
            <summary>
            卫星系统起始时间与GPST偏差，单位秒，采用加号改正不同GNSS系统时间
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.CurrentFullBias">
            <summary>
            当前时间(UTC)与GPS起始时间之差（StartOfGPST - CurrentUTC），为负数,单位，纳秒
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.TimeNanos">
            <summary>
            当前时间,递增的时间标签
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.BiasNanos">
            <summary>
            时间偏差,时间偏差的次纳秒部分
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.TimeOffsetNanos">
            <summary>
            时间偏离,测量时间偏差
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.IsEpochValid">
            <summary>
            历元是否有效。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.FirstFullBias">
            <summary>
            第一次输入。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.GpsWeekNumber">
            <summary>
            当前时间GPS周数量
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.GpsWeekNumberNanos">
            <summary>
            纳秒表示的GPS周数量
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.FirstEpochOfUtc">
            <summary>
            第一次记录时间,UTC。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.FirstEpochOfGpst">
            <summary>
            第一次记录时间,GPST。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.GpsWeekStartTimeUtc">
            <summary>
            本GPS周起始时间。由第一次输入的时间偏差决定。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidGnssTimeConverter.IsFromFirstEpoch">
            <summary>
            是否从第一个历元开始记录时间。
            </summary>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.#ctor(System.Int64,System.Boolean)">
            <summary>
              GNSS时间计算构造函数，
            </summary>
            <param name="fullBiasBetweenUtcToStartOfGpstNanos">当前时间(UTC)与GPS起始时间之差（StartOfGPST - CurrentUTC），为负数,单位纳秒，第一次观测记录时间。</param>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.SetSatelliteType(Gnsser.SatelliteType)">
            <summary>
            置卫星系统类型，决定时间起始，周期和偏移量。
            </summary>
            <param name="mSatType"></param>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetDifferDistance">
            <summary>
            获取与起算时间偏差的距离偏差。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetTransmissionTime(System.Double)">
            <summary>
             计算信号传输时间，时间差  
            </summary>
            <param name="TimeNanos">接收机当前时间标签</param>
            <param name="biasNanos">时间偏差，FullBiasToGpstOfFirstEpochNanos的小数部分</param>
            <param name="timeOffsetNanos"> 当前卫星的测量时刻相相对于历元时刻的偏差</param>
            <param name="receivedSvTimeNanos">测量时刻卫星的时间，为改卫星系统时间，对于GPS，是周内秒，俄罗斯是天内秒，接下来需要转换为GPS时间 </param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetTransmissionTime(System.Double,System.Double)">
            <summary>
            计算信号传输时间
            </summary>
            <param name="receivedSvTimeNanos"></param>
            <param name="receiverGpsTimeNanos"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetSatGpsTimeNanos(System.Double)">
            <summary>
            获取卫星测量的GPS时间。
            </summary>
            <param name="receivedSvTimeNanos">卫星测量时间（来自于卫星，不同系统不同时间？？？）</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverGpsTimeNanos(System.Int64,System.Double,System.Double)">
            <summary>
            获取接收机记录的本地GPS时间（周内秒部分），是一个近似，以构造函数设置的 FullBiasBetweenUtcToStartOfGpstNanos 为基准计算。
            </summary>
            <param name="TimeNanos">递增的时间标签</param>
            <param name="biasNanos">时间偏差的次纳秒部分</param>
            <param name="timeOffsetNanos">测量时间偏差</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverGpsWeekSecondNanos">
            <summary>
            获取接收机记录的本地GPS时间（周内秒部分），是一个近似，以构造函数设置的 FullBiasBetweenUtcToStartOfGpstNanos 为基准计算。
            </summary>
            <param name="TimeNanos">递增的时间标签</param>
            <param name="BiasNanos">时间偏差的次纳秒部分</param>
            <param name="TimeOffsetNanos">测量时间偏差</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverUtcTime(System.Int64,System.Double,System.Double)">
            <summary>
            获取接收机的UTC时间。
            </summary>
            <param name="TimeNanos"></param>
            <param name="biasNanos"></param>
            <param name="timeOffsetNanos"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverUtcTime">
            <summary>
            获取接收机的UTC时间。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverGpsTime(System.Int64,System.Double,System.Double,System.Int64)">
            <summary>
            获取接收机的UTC时间。
            </summary>
            <param name="TimeNanos"></param>
            <param name="biasNanos"></param>
            <param name="timeOffsetNanos"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverUtcTime(System.Int64,System.Double,System.Double,System.Int64)">
            <summary>
            获取接收机的UTC时间。
            </summary>
            <param name="TimeNanos"></param>
            <param name="biasNanos"></param>
            <param name="timeOffsetNanos"></param>
            <param name="FullBiasBetweenUtcToStartOfGpstNanos">当前UTC时间到GPST起始偏差，纳秒</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidGnssTimeConverter.GetReceiverUtcTimeFromGpst(System.Int64,System.Double,System.Double,System.Int64)">
            <summary>
            获取接收机的UTC时间。
            </summary>
            <param name="TimeNanos"></param>
            <param name="biasNanos"></param>
            <param name="timeOffsetNanos"></param>
            <param name="FullBiasToStartOfGpstNanos">当前GPS时间到GPST起始的偏差，纳秒</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AndroidMeasureDecoderOption">
            <summary>
            Android 测量数据解码器。参数选项
            </summary>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoderOption.#ctor">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoderOption.IsFromFirstEpoch">
            <summary>
            是否从从第一历元开始计算,与常规不同，伪距将逐历元增加。否则为逐历元计算，后者载波可能无法拼接成功！！
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoderOption.IsToCylePhase">
            <summary>
            是否转换相位值为周
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoderOption.IsSkipZeroPseudorange">
            <summary>
            是否移除 0 值伪距。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoderOption.IsSkipZeroPhase">
            <summary>
            是否移除 0 值载波。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoderOption.IsAligningPhase">
            <summary>
            是否对齐初始相位
            </summary>
        </member>
        <member name="T:Gnsser.AndroidMeasureDecoder">
            <summary>
            Android 测量数据解码器。
            注意：此处解码后的RINEX文件与常规文件不同，伪距范围增量，载波单位为米。
            </summary>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.#ctor(Geo.ObjectTableStorage,Gnsser.AndroidMeasureDecoderOption)">
            <summary>
            Android 测量数据解码器
            </summary>
            <param name="gnssLogerRawTable"></param>
            <param name="Option">参数选项</param> 
        </member>
        <member name="E:Gnsser.AndroidMeasureDecoder.RecordProcessed">
            <summary>
            记录处理了一个。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.IsCancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.RawTable">
            <summary>
            输入数据表
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.NumericalAlignerManager">
            <summary>
            载波对齐器
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.CurrentEpochInfo">
            <summary>
            当前历元观测信息
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.RinexOFile">
            <summary>
            当前文件
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder.TimeConverter">
            <summary>
            时间解算器
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder._currentTimeNanos">
            <summary>
            当前时间标识。
            </summary>
        </member>
        <member name="P:Gnsser.AndroidMeasureDecoder._prevHardwareClockDisCount">
            <summary>
            上一个硬件钟。
            </summary>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.Run(System.String)">
            <summary>
            转换输出为RINEX文件。
            </summary>
            <param name="outOPath"></param>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.Convert">
            <summary>
            转换
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.ParseOneRecord(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            解析一行数据。
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.ParseDouble(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Double)">
            <summary>
            解析 double
            </summary>
            <param name="dic">字典，行</param>
            <param name="key">关键字</param>
            <param name="defaultVal">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.ParseInt(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Int32)">
            <summary>
            解析 int
            </summary>
            <param name="dic">字典，行</param>
            <param name="key">关键字</param>
            <param name="defaultVal">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.ParseLong(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Int64)">
            <summary>
            解析 long
            </summary>
            <param name="dic">字典，行</param>
            <param name="key">关键字</param>
            <param name="defaultVal">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.ParsePrn(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            解析PRN
            </summary>
            <param name="dic"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.BuildRinexSatObsData(Gnsser.SatelliteNumber,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            创建RINEX观测数据
            </summary>
            <param name="prn"></param>
            <param name="C1"></param>
            <param name="D1"></param>
            <param name="L1"></param>
            <param name="S1"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.CreateRinexObsFile">
            <summary>
            创建RINEX观测文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.IsNewEpoch(Gnsser.Data.Rinex.RinexEpochObservation,System.Int64,System.Int64)">
            <summary>
            判断是否是新历元
            </summary>
            <param name="currentEpochInfo"></param>
            <param name="currentTimeNanos"></param>
            <param name="timeNanos"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.GetL1(System.Double,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            载波计算
            </summary>
            <param name="accumulatedDeltaRangeMeters"></param>
            <param name="prn"></param>
            <param name="IsToCylePhase"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.CheckPsuedorange(Gnsser.SatelliteNumber@,System.Double)">
            <summary>
            检查伪距范围
            </summary>
            <param name="prn"></param>
            <param name="pseudorange"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AndroidMeasureDecoder.OutputRinexFile(System.String,Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            输出
            </summary>
            <param name="outOPath"></param>
            <param name="oFile"></param>
        </member>
        <member name="T:Gnsser.Cmd.CmdProgram">
            <summary>
            为了满足控制台程序需求，特建立此项目
            </summary>
        </member>
        <member name="M:Gnsser.Cmd.CmdProgram.Main(System.String[])">
            <summary>
            命令行参数是以空格符分开的。
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Gnsser.Cmd.CmdProgram.GetConfigFilePath(System.String[])">
            <summary>
            根据后缀名称，自动提取配置文件
            </summary> 
            <param name="files">待寻找的路径</param>
        </member>
        <member name="M:Gnsser.Cmd.CmdProgram.ReadFiles(Gnsser.GnsserConfig)">
            <summary>
            数据源读取
            </summary>
        </member>
        <member name="M:Gnsser.Cmd.CmdProgram.ShowInfo(System.String)">
            <summary>
            输出信息到控制台。
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Gnsser.Cmd.Program">
            <summary>
            为了满足控制台程序需求，特建立此项目
            </summary>
        </member>
        <member name="M:Gnsser.Cmd.Program.Main(System.String[])">
            <summary>
            命令行参数是以空格符分开的。
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Gnsser.Cmd.Program.GetConfigFilePath(System.String[])">
            <summary>
            根据后缀名称，自动提取配置文件
            </summary> 
            <param name="files">待寻找的路径</param>
        </member>
        <member name="M:Gnsser.Cmd.Program.ShowInfo(System.String)">
            <summary>
            输出信息到控制台。
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Gnsser.Api.AppendStringToLine">
            <summary>
            追加参数到Gnsser参数文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLine.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.AppendStringToLineParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.AppendStringToLineParam.Content">
            <summary>
            目标目录或者文件
            </summary>
        </member>
        <member name="P:Gnsser.Api.AppendStringToLineParam.FileToAppdend">
            <summary>
            源目录或者文件
            </summary>
        </member>
        <member name="T:Gnsser.Api.AppendStringToLineParamReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.AppendStringToLineParamWriter">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.AppendStringToLineParamWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Copy">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.Copy.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Copy.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.CreateTxt">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxt.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.CreateTxtParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.CreateTxtParam.Content">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="T:Gnsser.Api.CreateTxtParamReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.CreateTxtParamWriter">
             <summary>
            创建文档参数写入器
             </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.CreateTxtParamWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DecompressD">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressD.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressD.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DecompressZ">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressZ.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressZ.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DecompressParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.DecompressParam.IsDeleteSource">
            <summary>
            是否覆盖 overwrite。默认否
            </summary>
        </member>
        <member name="T:Gnsser.Api.DecompressParamReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.DecompressParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.DecompressParamReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.DecompressParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DecompressParamWriter">
             <summary>
            解压的参数文件写入
             </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DecompressParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.DecompressParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.DecompressParamWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:Gnsser.Api.Delete.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Delete.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.FtpParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.FtpParam.Extension">
            <summary>
            文件类型，只有下载时起作用
            </summary>
        </member>
        <member name="P:Gnsser.Api.FtpParam.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Gnsser.Api.FtpParam.Password">
            <summary>
            密码
            </summary>       
        </member>
        <member name="T:Gnsser.Api.FtpUpload">
            <summary>
             FTP 文件上传
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpUpload.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpUpload.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.FtpDownload">
            <summary>
            FTP 文件下载器
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpDownload.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpDownload.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.FtpParamReader">
             <summary>
            FTP 下载
             </summary>
        </member>
        <member name="M:Gnsser.Api.FtpParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.FtpParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.FtpParamReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.FtpParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.FtpParamWriter">
             <summary>
            FTP 下载参数
             </summary>
        </member>
        <member name="M:Gnsser.Api.FtpParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.FtpParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.FtpParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.FtpParamWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Move">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.Move.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Move.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Sp3UrlGeneratorParam">
            <summary>
            时间段字符串生成器
            </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.Sp3UrlGeneratorParam.SourceName">
            <summary>
            数据源名称
            </summary>
        </member>
        <member name="P:Gnsser.Api.Sp3UrlGeneratorParam.LocalDirectory">
            <summary>
            下载后的文件夹
            </summary>
        </member>
        <member name="T:Gnsser.Api.Sp3UrlGeneratorReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Sp3UrlGeneratorWriter">
             <summary>
            URL生成器
             </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGeneratorWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.Sp3UrlGenerator">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGenerator.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGenerator.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.Sp3UrlGenerator.ReplaceSourceName(System.String,System.String)">
            <summary>
            建立时间属性的字符串
            </summary>
            <param name="sourceName">数据源名称</param>
            <param name="pattern">模板</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.TimeScopeStringGeneratorParam">
            <summary>
            时间段字符串生成器
            </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.TimeScopeStringGeneratorParam.Pattern">
            <summary>
            地址模板
            </summary>
        </member>
        <member name="P:Gnsser.Api.TimeScopeStringGeneratorParam.StartTime">
            <summary>
            起始时间，默认值 DateTime.MinValue
            </summary>
        </member>
        <member name="P:Gnsser.Api.TimeScopeStringGeneratorParam.EndTime">
            <summary>
            结束时间，默认值 DateTime.MinValue
            </summary>
        </member>
        <member name="P:Gnsser.Api.TimeScopeStringGeneratorParam.Interval">
            <summary>
            时间间隔，默认为1天,即86400秒。最高分辨率秒。
            </summary>
        </member>
        <member name="T:Gnsser.Api.TimeScopeStringGeneratorReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.TimeScopeStringGeneratorWriter">
             <summary>
            具有时段的字符串参数
             </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGeneratorWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.TimeScopeStringGenerator">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGenerator.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGenerator.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.TimeScopeStringGenerator.BuildTimedString(System.String,System.DateTime)">
            <summary>
            建立时间属性的字符串
            </summary>
            <param name="dateTime"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DoubleDiffer">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.BaseLineSelector">
            <summary>
            基线选择器，如果没有提供基线文件，则自动选择基线
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.InputFileExtension">
            <summary>
            输入文件后缀名
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.FileExtension">
            <summary>
            计算文件后缀名
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.ProcessCount">
            <summary>
            处理器数量
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.IsParallel">
            <summary>
            是否并行
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.EphemerisDataSource">
            <summary>
            手动指定的星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.ClockFile">
            <summary>
            外部指定的钟差文件，非系统配置
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.GnsserConfig">
            <summary>
            定位全局设置
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.OupputDirecory">
            <summary>
            工程输出目录
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="F:Gnsser.Api.DoubleDiffer.InputObsFiles">
            <summary>
            输入路径
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.ObsFiles">
            <summary>
            观测文件
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDiffer.ParallelOptions">
            <summary>
             并行配置
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.BuildOutputFilePath(System.String,Gnsser.Baseline)">
            <summary>
            建立输出文件路径
            </summary>
            <param name="outPath"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.CheckOrExecute(Gnsser.Baseline,System.String,System.Boolean)">
            <summary>
            转换
            </summary>
            <param name="fileInPath">输入文件路径</param>
            <param name="fileOutPath">输出文件路径</param>
            <param name="isOverwrite"></param>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.Execute(Gnsser.Baseline,System.String)">
            <summary>
            具体的执行
            </summary>
            <param name="baseline"></param>
            <param name="outPath"></param>
        </member>
        <member name="M:Gnsser.Api.DoubleDiffer.SaveLastResult(Gnsser.Service.SimpleGnssResult)">
            <summary>
            打印出执行结果
            </summary>
            <param name="last"></param>
        </member>
        <member name="T:Gnsser.Api.DoubleDifferParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.DoubleDifferParam.BaselinePath">
            <summary>
            输入路径
            </summary> 
        </member>
        <member name="P:Gnsser.Api.DoubleDifferParam.SiteInfoPath">
            <summary>
            输入路径
            </summary> 
        </member>
        <member name="T:Gnsser.Api.DoubleDifferParamReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.DoubleDifferParamWriter">
             <summary>
            解压的参数文件写入
             </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.DoubleDifferParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.Api.PointPositionParam">
            <summary>
            通用表格文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.PointPositionParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.PointPositionParam.SatTypeString">
            <summary>
            输入路径
            </summary> 
        </member>
        <member name="P:Gnsser.Api.PointPositionParam.EphemerisPath">
            <summary>
            输入路径
            </summary> 
        </member>
        <member name="P:Gnsser.Api.PointPositionParam.ClockPath">
            <summary>
            输入路径
            </summary> 
        </member>
        <member name="P:Gnsser.Api.PointPositionParam.IsParallel">
            <summary>
            是否并行计算
            </summary> 
        </member>
        <member name="P:Gnsser.Api.PointPositionParam.ParallelProcessCount">
            <summary>
            并行线程数量
            </summary>       
        </member>
        <member name="T:Gnsser.Api.PointPositionParamReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.PointPositionParamWriter">
             <summary>
            解压的参数文件写入
             </summary>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.PointPositionParamWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.Api.PositionType">
            <summary>
            单点定位方式
            </summary>
        </member>
        <member name="F:Gnsser.Api.PositionType.SimpleRangePositioner">
            <summary>
            简单伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.Api.PositionType.IonoFreePpp">
            <summary>
            精密单点定位
            </summary>
        </member>
        <member name="F:Gnsser.Api.PositionType.PppPartAmbiResolution">
            <summary>
            模糊度固定
            </summary>
        </member>
        <member name="T:Gnsser.Api.PointPosition">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Api.PointPosition.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Gnsser.Api.PointPosition.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="P:Gnsser.Api.PointPosition.EphemerisDataSource">
            <summary>
            手动指定的星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.Api.PointPosition.ClockFile">
            <summary>
            外部指定的钟差文件，非系统配置
            </summary>
        </member>
        <member name="P:Gnsser.Api.PointPosition.GnsserConfig">
            <summary>
            定位全局设置
            </summary>
        </member>
        <member name="P:Gnsser.Api.PointPosition.Option">
            <summary>
            计算选项
            </summary>
        </member>
        <member name="M:Gnsser.Api.PointPosition.GetParamFileReader">
            <summary>
            获取参数文件读取器
            </summary>
            <returns></returns> 
        </member>
        <member name="M:Gnsser.Api.PointPosition.BuildOutputFilePath(System.String,System.String)">
            <summary>
            建立输出文件路径
            </summary>
            <param name="outPath"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.PointPosition.Execute(System.String,System.String)">
            <summary>
            具体的执行
            </summary>
            <param name="inPath"></param>
            <param name="outPath"></param>
        </member>
        <member name="T:Gnsser.Api.BaselineSelect">
            <summary>
            基线选择
            </summary>
        </member>
        <member name="M:Gnsser.Api.BaselineSelect.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Api.BaselineSelect.EpochSatData">
            <summary>
            历元卫星数据
            </summary>
        </member>
        <member name="T:Gnsser.Api.BreakingDetect">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.BreakingDetect.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Api.CycleSlipDetect">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.CycleSlipDetect.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Api.CycleSlipMark">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.CycleSlipMark.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.CycleSlipMark.BuildOutputFilePath(System.String,System.String)">
            <summary>
            建立输出文件路径
            </summary>
            <param name="outPath"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.CycleSlipMark.Execute(System.String,System.String)">
            <summary>
            具体的执行.
            </summary>
            <param name="fileInPath"></param>
            <param name="fileOutPath"></param>
        </member>
        <member name="T:Gnsser.Api.EpochInfoExtract">
            <summary>
            历元信息提取
            </summary>
        </member>
        <member name="M:Gnsser.Api.EpochInfoExtract.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.EpochInfoExtract.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.PositionPreprocess">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.ProcessCount">
            <summary>
            处理器数量
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.IsParallel">
            <summary>
            是否并行
            </summary>
        </member>
        <member name="F:Gnsser.Api.PositionPreprocess.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.EphemerisDataSource">
            <summary>
            手动指定的星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.ClockFile">
            <summary>
            外部指定的钟差文件，非系统配置
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.GnsserConfig">
            <summary>
            定位全局设置
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.OupputDirecory">
            <summary>
            工程输出目录
            </summary>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.CurrentParam">
            <summary>
            当前参数
            </summary>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.ParallelCompute(Gnsser.Api.PointPositionParam,System.String,System.String)">
            <summary>
            并行计算
            </summary>
            <param name="key"></param>
            <param name="inPath"></param>
            <param name="outPath"></param>
        </member>
        <member name="P:Gnsser.Api.PositionPreprocess.ParallelOptions">
            <summary>
             并行配置
            </summary>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.SerialProcess(Gnsser.Api.PointPositionParam,System.String,System.String)">
            <summary>
            串行计算
            </summary>
            <param name="key"></param>
            <param name="inPath"></param>
            <param name="outPath"></param>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.BuildOutputFilePath(System.String,System.String)">
            <summary>
            建立输出文件路径
            </summary>
            <param name="outPath"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.PositionPreprocess.Execute(System.String,System.String)">
            <summary>
            具体的执行
            </summary>
            <param name="inPath"></param>
            <param name="outPath"></param>
        </member>
        <member name="T:Gnsser.Api.SatConsecutiveAnalysis">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.SatConsecutiveAnalysis.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Api.SmallPartsRemove">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.SmallPartsRemove.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Api.RinexConvert">
            <summary>
             Rinex 格式转换
            </summary>
        </member>
        <member name="M:Gnsser.Api.RinexConvert.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.RinexConvert.Execute(System.String,System.String)">
            <summary>
            转换
            </summary>
            <param name="inPath">输入文件路径</param>
            <param name="outPath">输出文件路径</param> 
        </member>
        <member name="T:Gnsser.Api.ToRinex">
            <summary>
            复制文件
            </summary>
        </member>
        <member name="M:Gnsser.Api.ToRinex.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.ToRinex.Execute(System.String,System.String)">
            <summary>
            转换
            </summary>
            <param name="inPath">输入文件路径</param>
            <param name="outPath">输出文件路径</param> 
        </member>
        <member name="T:Gnsser.Api.CreateProject">
            <summary>
            创建工程,注意，此处参数借用IoParam，输入为工作流序列，输出为工程目录地址。
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateProject.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.CreateProject.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.GeoCoordToXyz">
            <summary>
            坐标转换
            </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyz.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyz.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyz.AppendToFile(System.String,System.Collections.Generic.List{Geo.Coordinates.XYZ}@)">
            <summary>
            追加到文件。
            </summary>
            <param name="path"></param>
            <param name="coords"></param>
        </member>
        <member name="T:Gnsser.Api.GeoCoordToXyzParam">
            <summary>
            时间段字符串生成器
            </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.GeoCoordToXyzParam.GeoCoord">
            <summary>
             大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.Api.GeoCoordToXyzParam.Ellipsoid">
            <summary>
            参考椭球
            </summary>
        </member>
        <member name="P:Gnsser.Api.GeoCoordToXyzParam.AngleUnit">
            <summary>
            角度单位。
            </summary>
        </member>
        <member name="T:Gnsser.Api.GeoCoordToXyzReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.GeoCoordToXyzWriter">
             <summary>
            坐标转换
             </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.GeoCoordToXyzWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.XyzToGeoCoordParam">
            <summary>
            时间段字符串生成器
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordParam.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Api.XyzToGeoCoordParam.Xyz">
            <summary>
            空间直角坐标
            </summary>
        </member>
        <member name="P:Gnsser.Api.XyzToGeoCoordParam.Ellipsoid">
            <summary>
            参考椭球
            </summary>
        </member>
        <member name="P:Gnsser.Api.XyzToGeoCoordParam.AngleUnit">
            <summary>
            角度单位。
            </summary>
        </member>
        <member name="T:Gnsser.Api.XyzToGeoCoordReader">
             <summary>
            复制的参数文件读取
             </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordReader.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.XyzToGeoCoordWriter">
            <summary>
            坐标转换
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoordWriter.GetDefaultMetadata">
            <summary>
            默认的元数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Api.XyzToGeoCoord">
            <summary>
            坐标转换
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoord.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoord.Do">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Api.XyzToGeoCoord.AppendToFile(System.String,System.Collections.Generic.List{Geo.Coordinates.GeoCoord}@)">
            <summary>
            追加到文件。
            </summary>
            <param name="path"></param>
            <param name="coords"></param>
        </member>
        <member name="T:Gnsser.GnsserOperationManager">
            <summary>
            操作注册管理中心。操作首先在此注册后，才可以使用。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserOperationManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserOperationManager.Default">
            <summary>
            Gnsser 默认操作管理器，基本包括了所有的API
            </summary>
        </member>
        <member name="T:Gnsser.ParamIoerManager">
            <summary>
            参数读写管理器.同 GnsserOperationManager 类似，是操作参数文件的注册机构。
            </summary>
        </member>
        <member name="M:Gnsser.ParamIoerManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.ParamIoerManager.Add(System.Type,Geo.IO.IEntityFileReader,Geo.IO.IEntityWriter)">
            <summary>
            注册。
            </summary>
            <param name="type"></param>
            <param name="Reader"></param>
            <param name="Writer"></param>
        </member>
        <member name="P:Gnsser.ParamIoerManager.Default">
            <summary>
            默认的注册结果
            </summary>
        </member>
        <member name="T:Gnsser.ParamIoer">
            <summary>
            参数读写器
            </summary>
        </member>
        <member name="P:Gnsser.ParamIoer.Reader">
            <summary>
            读取
            </summary>
        </member>
        <member name="P:Gnsser.ParamIoer.Writer">
            <summary>
            写
            </summary>
        </member>
        <member name="T:Gnsser.ParamManager">
            <summary>
            操作参数管理器
            </summary>
        </member>
        <member name="M:Gnsser.ParamManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="T:Gnsser.ParamNameManager">
            <summary>
            参数读写管理器.同 GnsserOperationManager 类似，是操作参数文件的注册机构。
            </summary>
        </member>
        <member name="M:Gnsser.ParamNameManager.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.ParamNameManager.Add(System.Type)">
            <summary>
            注册。
            </summary>
            <param name="type"></param>
            <param name="Reader"></param>
            <param name="Writer"></param>
        </member>
        <member name="P:Gnsser.ParamNameManager.Default">
            <summary>
            默认的注册结果
            </summary>
        </member>
        <member name="T:Gnsser.ParamName">
            <summary>
            参数读写器
            </summary>
        </member>
        <member name="M:Gnsser.ParamName.#ctor(System.Type)">
            <summary>
            参数名称
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Gnsser.ParamName.Name">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.ParamName.FullName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.ParamName.AssemblyName">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="T:Gnsser.RepeatErrorOfBaseLineManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gnsser.RepeatErrorOfBaseLineManager.#ctor(Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            构造函数
            </summary>
            <param name="GnssReveiverNominalAccuracy"></param>
        </member>
        <member name="P:Gnsser.RepeatErrorOfBaseLineManager.GnssReveiverNominalAccuracy">
            <summary>
            接收机标称禁精度
            </summary>
        </member>
        <member name="M:Gnsser.RepeatErrorOfBaseLineManager.GetAlTrimNetPeriodInOrder">
            <summary>
            获取所有的时段，并从前到后排序。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RepeatErrorOfBaseLineManager.GetAllPeriodWithOrderNumber">
            <summary>
            编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RepeatErrorOfBaseLineManager.GetObjectTable">
            <summary>
            对象表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.PeriodRepeatErrorOfBaseLine">
            <summary>
            复测基线较差
            </summary>
        </member>
        <member name="M:Gnsser.PeriodRepeatErrorOfBaseLine.#ctor(Gnsser.SiteObsBaseline,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            构造函数
            </summary>
            <param name="LineName"></param>
            <param name="GnssReveiverNominalAccuracy"></param> 
        </member>
        <member name="P:Gnsser.PeriodRepeatErrorOfBaseLine.GnssReveiverNominalAccuracy">
            <summary>
            接收机标称禁精度
            </summary>
        </member>
        <member name="P:Gnsser.PeriodRepeatErrorOfBaseLine.DifferPeriodSameNameLines">
            <summary>
            基线
            </summary>
        </member>
        <member name="P:Gnsser.PeriodRepeatErrorOfBaseLine.BaseLine">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.PeriodRepeatErrorOfBaseLine.LineLength">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Gnsser.PeriodRepeatErrorOfBaseLine.Init(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            初始化
            </summary>
            <param name="DifferPeriodSameNameLines"></param>
        </member>
        <member name="M:Gnsser.PeriodRepeatErrorOfBaseLine.GetObjectTable">
            <summary>
            对象表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MutliPeriodBaseLineManager">
            <summary>
            多时段基线管理器
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.#ctor(System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="MinEpochTimeSpan"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.#ctor(System.Collections.Generic.List{Gnsser.SiteObsBaseline},System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="MinEpochTimeSpan"></param>
            <param name="lines"></param>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.MinEpochTimeSpan">
            <summary>
            最小的同步时段,少于则忽略
            </summary>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.LineNames">
            <summary>
            不重复的基线名称
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetLineNamesWithEstValue">
            <summary>
            获取具有平差值的名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.AllLineObjs">
            <summary>
            所有基线
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetAllBaseLines">
            <summary>
            所有基线
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.RemovedLines">
            <summary>
            已经移除的集合
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetAllEstLines">
            <summary>
            获取所有具有平差结果的基线
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.CountOfDifferLineName">
            <summary>
            名称不同的基线数量
            </summary>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.TotalLineCount">
            <summary>
            所有基线数量。
            </summary>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.TimePeriods">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.BaseLineNets">
            <summary>
            当前基线网，通过 GetOrBuildPeriodBaseLineNet 获取
            </summary>
        </member>
        <member name="P:Gnsser.MutliPeriodBaseLineManager.PeriodTriguilarNetQualitiyManager">
            <summary>
            时段三角闭合差检核，通过 GetOrCreatePeriodSyncTriguilarNetQualitiyManager  获取
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Create(Geo.Times.TimePeriod)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetLines(Gnsser.GnssBaseLineName)">
            <summary>
            获取所有时段的同名基线对象
            </summary>
            <param name="lineName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Add(System.Collections.Generic.Dictionary{Geo.Times.TimePeriod,System.Collections.Generic.List{Gnsser.SiteObsBaseline}})">
            <summary>
            重新添加。覆盖添加。
            </summary>
            <param name="dic"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.ExtractPeriodLines(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            提取时段
            </summary>
            <param name="sitebaseLines"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetPeriodKey(Geo.Times.TimePeriod)">
            <summary>
            最大匹配的时段键.没则返回null
            </summary>
            <param name="linePeriod"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Contains(Gnsser.SiteObsBaseline)">
            <summary>
            是否包含
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Add(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            返回成功的
            </summary>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Add(Gnsser.SiteObsBaseline)">
            <summary>
            增加一个,如果已经添加则返回 false。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.RemoveEmptyPeriods">
            <summary>
            移除空时段，返回移除后的列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Remove(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            移除基线
            </summary>
            <param name="lines"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Remove(Gnsser.SiteObsBaseline)">
            <summary>
            移除基线
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Remove(Gnsser.GnssBaseLineName)">
            <summary>
            移除基线
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="siteName"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Remove(Gnsser.ObsSiteInfo)">
            <summary>
            移除
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetBaselineTable">
            <summary>
            所有的表格
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetOrBuildPeriodBaseLineNet(System.Boolean)">
            <summary>
            时段基线网
            </summary>
            <param name="isRebuit"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetOrCreatePeriodSyncTriguilarNetQualitiyManager(Gnsser.GnssReveiverNominalAccuracy,System.Boolean)">
            <summary>
            获取各时段同步三角闭合差。
            </summary>
            <param name="GnssReveiverNominalAccuracy"></param>
            <param name="isRebuit"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetTriguilarNetQualitiyManager(Geo.Times.TimePeriod,Gnsser.GnssReveiverNominalAccuracy,System.Boolean)">
            <summary>
            获取当前时段三角形闭合差
            </summary>
            <param name="timePeriodKey"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
            <param name="isRebuit"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.GetOrCreateRepeatErrorOfBaseLineManager(Gnsser.GnssReveiverNominalAccuracy,System.Boolean)">
            <summary>
            获取或创建复测基线较差
            </summary>
            <param name="GnssReveiverNominalAccuracy"></param>
            <param name="isRebuit"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.CreateRepeatErrorOfBaseLineManager(Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            获取复测基线较差
            </summary>
            <param name="GnssReveiverNominalAccuracy"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.MutliPeriodBaseLineManager.BuidIndependentNets(Gnsser.IndependentLineSelectType)">
            <summary>
            构建独立基线
            </summary>
            <param name="IndependentLineSelectType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiPeriodSiteLineManager">
            <summary>
            多时段基线管理器
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.#ctor(System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="TimeSpan"></param>
        </member>
        <member name="P:Gnsser.MultiPeriodSiteLineManager.SiteManager">
            <summary>
            测站管理器
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodSiteLineManager.BaseLineManager">
            <summary>
            基线与基线网管理器
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Remove(Gnsser.GnssBaseLineName)">
            <summary>
            移除
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Remove(Gnsser.SiteObsBaseline)">
            <summary>
            移除
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Remove(Gnsser.ObsSiteInfo)">
            <summary>
            移除
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Remove(Geo.Times.TimePeriod)">
            <summary>
            移除
            </summary>
            <param name="timePeiod"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="siteName"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Add(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{Gnsser.SiteObsBaseline}@)">
            <summary>
            添加，返回成功的对象
            </summary>
            <param name="filePathes"></param>
            <param name="newAddedBaseLines"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Add(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加，返回成功的对象
            </summary>
            <param name="filePathes"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.AddAndBuildLines(Gnsser.ObsSiteInfo,System.Collections.Generic.List{Gnsser.SiteObsBaseline}@)">
            <summary>
            添加测站
            </summary>
            <param name="site"></param>
            <param name="newBaseLines"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.RebuildBaseLineManager(Gnsser.BaseLineSelectionType,System.String,System.String)">
            <summary>
            重新构建基线
            </summary>
            <param name="BaseLineSelectionType">基线选择类型</param>
            <param name="centerSiteName">中心站名称</param>
            <param name="outerLineFilePath">外部基线文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.GenerateObsBaseLines(Gnsser.BaseLineSelectionType,System.String,System.String)">
            <summary>
            构建基线
            </summary>
            <param name="BaseLineSelectionType">基线选择类型</param>
            <param name="centerSiteName">中心站名称</param>
            <param name="outerLineFilePath">外部基线文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.BuildAsyncTriangularClosureQualies(Gnsser.GnssReveiverNominalAccuracy,System.Int32)">
            <summary>
            生成所有可能的三角形，然后根据不同时段提取网络，计算闭合差 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.GetAsyncTriguilarNet(Gnsser.TriangularNetName,System.Collections.Generic.List{System.Collections.Generic.List{Geo.Times.TimePeriod}})">
            <summary>
            异步环闭合差
            </summary>
            <param name="triNetName"></param>
            <param name="differs">算法量很大，因此用参数表示</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodSiteLineManager.GetAsyncTriguilarNet(Gnsser.TriangularNetName,System.Collections.Generic.List{Geo.Times.TimePeriod})">
            <summary>
            获取所有可能的异步环网络
            </summary>
            <param name="timePeriods">不超过3时段</param>
            <param name="triNetName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiPeriodObsFileManager">
            <summary>
            多时段测站管理器。
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.#ctor(System.String[],System.TimeSpan)">
             <summary>
            构造函数
             </summary>
             <param name="obsFilePaths"></param>
             <param name="MinEpochTimeSpan"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.#ctor(System.Collections.Generic.List{Gnsser.ObsSiteInfo},System.TimeSpan)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.#ctor(System.TimeSpan)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.MinEpochTimeSpan">
            <summary>
            最小的同步时段,少于则忽略
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.FileCount">
            <summary>
            文件数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.PeriodCount">
            <summary>
            时段数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.SiteNames">
            <summary>
            所有测站的名称
            </summary>
        </member>
        <member name="P:Gnsser.MultiPeriodObsFileManager.TimePeriods">
            <summary>
            所有时段的名称
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.GetTimePeriodKeys(Geo.Times.TimePeriod)">
            <summary>
            获取相交，有效的时段关键字。
            </summary>
            <param name="timePeriod"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.Add(System.String)">
            <summary>
            增加一个,如果已经添加则返回 false。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.Add(Gnsser.ObsSiteInfo)">
            <summary>
            增加一个,如果已经添加则返回 false。
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.Remove(Gnsser.ObsSiteInfo)">
            <summary>
            移除
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.Contains(Gnsser.ObsSiteInfo)">
            <summary>
            是否包含
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.GetSites(System.String)">
            <summary>
            测站时段信息
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.GetAllSites">
            <summary>
            所有的测站
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.ExtractPeriodSites(System.Collections.Generic.List{Gnsser.ObsSiteInfo})">
            <summary>
            提取时段
            </summary>
            <param name="sites"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodObsFileManager.RemoveEmptyPeriods">
            <summary>
            移除空时段，返回移除后的列表。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreeAmbiguitySolverManager">
            <summary>
            多系统无电离层模糊度计算器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreeAmbiguitySolverManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonoFreeAmbiguitySolver">
            <summary>
            单系统的无电离层模糊度计算器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreeAmbiguitySolver.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.IsInited">
            <summary>
            是否初始化，减少计算量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.Time">
            <summary>
            用于提取卫星频率的时间（GLO需要），一般不用改变
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.FreqA">
            <summary>
            第一频率，单位 10^6
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.FreqB">
            <summary>
            第二频率，单位 10^6
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.WaveLengthOfL1">
            <summary>
            第一频率波长
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.WaveLenOfWideLane">
            <summary>
            宽巷波长
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.WaveLenOfNarrowLane">
            <summary>
            窄巷波长
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreeAmbiguitySolver.IsCycleOrMeterOfAmbiUnit">
            <summary>
            模糊度是否以距离为单位
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreeAmbiguitySolver.CheckOrInit(Gnsser.SatelliteNumber,Geo.Times.Time,System.Boolean,System.Boolean)">
            <summary>
            检查并初始化
            </summary>
            <param name="prn"></param>
            <param name="time">用于计算频率，非GLO可以忽略</param>
            <param name="isCycleAmbi">模糊度单位是否为周</param>
            <param name="forceToInit">强制初始化，GLO系统适用,也可以手动指定</param>
        </member>
        <member name="M:Gnsser.Service.IonoFreeAmbiguitySolver.GetNarrowFloatValue(Geo.NameRmsedNumeralVector,Geo.NameRmsedNumeralVector)">
            <summary>
            计算窄巷模糊度，单位周
            </summary>
            <param name="wideIntCyle">以周为单位的宽巷整数</param>
            <param name="floatIfAmbiValue">以距离为单位模糊度浮点解</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreeAmbiguitySolver.GetIonoFreeAmbiValue(Geo.NameRmsedNumeralVector,Geo.NameRmsedNumeralVector)">
            <summary>
            计算无电离层组合模糊度,返回单位按照 指定的相位单位
            </summary>
            <param name="wideIntCyle">以周为单位的宽巷整数</param>
            <param name="narrowIntCyle">以周为单位的窄巷整数</param> 
            <returns>返回以距离或周为单位的模糊度（波长默认L1）</returns>
        </member>
        <member name="T:Gnsser.Service.IonFreeDoubleDifferPositionerOld">
            <summary>
             无电离层双差，单历元解算。
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionerOld.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionerOld.DoubleIonFreeAmReslution">
            <summary>
            双差模糊度固定
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionerOld.ResidualsAnalysis">
            <summary>
            残差分析,判断是否有未发现的周跳或粗差
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionerOld.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionerOld.BuildAdjustMatrix">
            <summary>
            构建矩阵
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionerOld.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            </summary>
            <param name="mSiteEpochInfo">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="F:Gnsser.Service.IonFreeDoubleDifferPositionerOld.posfit">
            <summary>
            验后残差
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionerOld.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoublePhaseDifferParamNameBuilder">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
            <param name="Option"></param> 
            <param name="baseParamCount"></param> 
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferParamNameBuilder.IsDueFrequence">
            <summary>
            是否双频
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            卫星参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder">
            <summary>
            单历元纯相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
            <param name="BaseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.BaseParamCount">
            <summary>
            不变参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.EpochInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.EpochInfoOfRov">
            <summary>
            流动站
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.IsDueFrequence">
            <summary>
            是否双频
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.CreateInitAprioriParam">
            <summary>
            第一次参数先验值。 创建初始先验参数值和协方差阵。只会执行一次。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.BuildObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.EpochDoublePhaseDifferPositioner">
            <summary>
             简易近距离单历元载波相位双差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferPositioner.BuildResult">
             <summary>
            结果
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoublePhaseDifferPositionResult">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber)">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
            <param name="material"></param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferPositionResult.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoublePhaseDifferPositionResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDoublePhaseDifferPositionResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppOld2">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld2.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld2.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld2.FixPppResult(Gnsser.Service.PppResult,System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Double})">
            <summary>
            模糊度固定解，条件平差。
            </summary>
            <param name="result"></param>
            <param name="fixedPppAmbi"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld2.SetPppFloatAmbiguityLen(Gnsser.Service.PppResult,Gnsser.Service.SatWideNarrowValueManager)">
            <summary>
            提取浮点解星间单差
            </summary>
            <param name="result"></param>
            <param name="wideNarrowValues"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld2.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SinexBlockAdjust">
            <summary>
            基于 Sinex 文件的分区平差。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexBlockAdjust.#ctor(Gnsser.Data.Sinex.SinexFile[])">
            <summary>
            基于 Sinex 文件的分区平差。
            </summary>
            <param name="files">具有公共参数的分区</param>
        </member>
        <member name="M:Gnsser.Service.SinexBlockAdjust.GetVarianceFactor(Gnsser.Data.Sinex.SinexFile[])">
            <summary>
            计算所有的单位权方差。
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexBlockAdjust.GetVarianceFactor(Gnsser.Data.Sinex.SinexStatistic[])">
            <summary>
            计算所有的单位权方差。
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SinexBlockAdjust.TimeSpan">
            <summary>
            时间间隔
            </summary>
        </member>
        <member name="P:Gnsser.Service.SinexBlockAdjust.ResultSinexFile">
            <summary>
            结果SINEX文件，只包含公共参数的内容。
            </summary>
        </member>
        <member name="T:Gnsser.Service.SinexNetWorkAdjustmentLLY">
            <summary>
            平差,包括最小二乘平差和抗差估计，以及抗差贝叶斯估计
            观测值是基于sinex文件报讯的基线向量文件,类似于近代平差课程中的基线向量文件
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.BaseLineList">
            <summary>
            基线观测向量
            存储所有的观测向量,每个基线向量三个分量构成一个XYZ
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.PointsAppXYZ">
            <summary>
            点坐标近似值
            坐标数组，三个坐标构成一个XYZ，顺序与点号一一对应
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.PointsEstimateXYZ">
            <summary>
            点坐标真值
            坐标数组，三个坐标构成一个XYZ，顺序与点号一一对应
            </summary>
        </member>
        <member name="P:Gnsser.Service.SinexNetWorkAdjustmentLLY.IsKnownPoint">
            <summary>
            是否是已知点
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.BaseLineBlockList">
            <summary>
            基线向量，3m*1一维的矩阵块列，m=总点数减1，即为独立的基线向量数
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.BaseLineCovBlockList">
            <summary>
            基线向量协方差矩阵,3m*3m
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.BaseLineNameBlockList">
            <summary>
            基线向量点号，m*2维的矩阵列块，两列矩阵，首列是起点点号的序列，第二列是终点点号的序列
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetWorkAdjustmentLLY.SinexFiles">
            <summary>
            ?????????不知道
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.#ctor(System.String[],System.String[],System.String[])">
            <summary>
            最小二乘平差
            </summary>
            <param name="WS_FilePath">周解文件,数量:一个</param>
            <param name="DS_FilePath">日解文件</param>
            <param name="KnownPoint">已知点</param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.#ctor(System.String[],System.String[],System.String[],System.String[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            抗差贝叶斯估计
            </summary>
            <param name="WS_FilePath"></param>
            <param name="DS_FilePath"></param>
            <param name="KnownPoint"></param>
            <param name="k0"></param>
            <param name="k1"></param>
            <param name="eps"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.#ctor(System.String[],System.String[],System.String[],System.String[],System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            抗差估计
            </summary>
            <param name="sFilePath"></param>
            <param name="strKnownPoint"></param>
            <param name="sk0"></param>
            <param name="sk1"></param>
            <param name="eps"></param>
            <param name="rate">粗差率</param>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.#ctor(System.String[],System.String[],System.String[],System.String[])">
            <summary>
            贝叶斯估计,要读取先验信息
            </summary>
            <param name="WS_FilePath">周解文件</param>
            <param name="DS_FilePath">日解文件</param>
            <param name="Priori_WS_FilePath">先验信息,即上周的周解文件</param>
            <param name="KnownPoint"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.ConFirmPointBasicInformation(System.Collections.Generic.List{Gnsser.Data.Sinex.SinexFile})">
            <summary>
            获取sinex的基本信息
            公共的总点数：TotalPointNumber
            基线向量总数：TotalBaselineNumber
            未知点数：UnknowPointnumber
            所有点的编号：TotalPointName
            点坐标：PointsAppXYZ已加入了随机误差
            </summary>
            <param name="SinexFiles"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.BuildPriorInformation(System.Double[]@,System.Double[]@)">
            <summary>
            读取先验信息的坐标值和协方差矩阵
            </summary>
            <param name="Priori_CovX">先验协方差矩阵</param>
            <param name="Priori_X">先验坐标值</param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.BuildCleanBaselineInformation(System.Collections.Generic.List{System.Int32[]}@,System.Collections.Generic.List{System.Int32[]}@,System.Double[][]@,System.Double[][]@)">
            <summary>
            建立基线信息,输出：基线起点的索引（数量：总点数-1）、基线终点的索引（数量：总点数-1）、建立的基线向量（（数量：总点数-1）*3）、基线向量的协方差矩阵（基线向量数*（基线向量数-1）/2）
            不引入粗差
            </summary>
            <param name="TotalBeginOfBaselineList"></param>
            <param name="TotalEndOfBaselineList"></param>
            <param name="bList"></param>
            <param name="pList"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.BuildBaselineInformation(System.Collections.Generic.List{System.Int32[]}@,System.Collections.Generic.List{System.Int32[]}@,System.Double[][]@,System.Double[][]@)">
            <summary>
            抗差估计里面建立带有观测误差的基线
            </summary>
            <param name="TotalBeginOfBaselineList"></param>
            <param name="TotalEndOfBaselineList"></param>
            <param name="bList"></param>
            <param name="pList"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.GetCleanedMatrix(Gnsser.Data.Sinex.SinexFile)">
            <summary>
            返回多个文件干净的协方差矩阵
            </summary>
            <param name="snx"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.GetPubPointEstXYZ(System.String)">
            <summary>
            获得周解文件的坐标,当作坐标真值
            </summary>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexNetWorkAdjustmentLLY.AddGrossError(System.Double[][]@,System.Double,System.Double)">
            <summary>
            添加粗差
            </summary>
            <param name="bList"></param>
            <param name="rate">观测数据中计入粗差的比例</param>
            <param name="sigma">观测值中误差</param>
        </member>
        <member name="T:Gnsser.Service.SinexNetworksAdjust">
            <summary>
            GNSS网平差类，涉及最小二乘平差、自由网平差、抗差估计等。
            观测值是基于Sinex文件保存的基线向量，多个同步网（SINEX文件）的联合网平差
            Cui Yang
            2013.12.03
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.BaselinesList">
            <summary>
            基线观测向量
            存储所有的观测向量,每个基线向量三个分量构成一个XYZ
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.PointsXYZ">
            <summary>
            点坐标近似值
            坐标数组，三个坐标构成一个XYZ，顺序与点号一一对应
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.PointsTrueXYZ">
            <summary>
            点坐标真值
            坐标数组，三个坐标构成一个XYZ，顺序与点号一一对应
            </summary>
        </member>
        <member name="P:Gnsser.Service.SinexNetworksAdjust.IsKnownPoint">
            <summary>
            是否是已知点
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.BaselineBlockList">
            <summary>
            基线向量，3m*1一维的矩阵块列，m=点号
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.BaselineCovBlockList">
            <summary>
            基线向量协方差矩阵列，3m*3m的方阵
            </summary>
        </member>
        <member name="F:Gnsser.Service.SinexNetworksAdjust.BaselineNameBlcokList">
            <summary>
            基线向量点号，m*2维的矩阵列块，两列矩阵，首列是起点点号的序列，第二列是终点点号的序列
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.#ctor(System.String[],System.String[],System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <param name="strKnowPoint"></param>
            <param name="sk0"></param>
            <param name="sk1"></param>
            <param name="seps"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.#ctor(System.String[],System.String[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            测试
            </summary>
            <param name="filePath"></param>
            <param name="strKnowPoint"></param>
            <param name="sk0"></param>
            <param name="sk1"></param>
            <param name="seps"></param>
            <param name="rate"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.SinexNetworksAdjustTest(System.String,System.String[],System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            不同粗差率的抗差估计
            </summary>
            <param name="filePath"></param>
            <param name="strKnowPoint"></param>
            <param name="sk0"></param>
            <param name="sk1"></param>
            <param name="seps"></param>
            <param name="rate">粗差率,换算为小数</param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.SinexNetworksAdjustTest(System.String[],System.String[],System.Double,System.Double,System.Double,System.Double)">
            <summary>
            不同粗差率的抗差估计
            </summary>
            <param name="filePath"></param>
            <param name="strKnowPoint"></param>
            <param name="sk0"></param>
            <param name="sk1"></param>
            <param name="seps"></param>
            <param name="rate">粗差率,换算为小数</param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.ConfirmPointsBasicInformation(System.Collections.Generic.List{Gnsser.Data.Sinex.SinexFile})">
            <summary>
            获取基本的信息：所有点编号、点总数、点（近似）坐标、未知点数、向量个数等。
            </summary>
            <param name="sinexFiles"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.bulitBaselineInfomation(System.Collections.Generic.List{System.Int32[]}@,System.Collections.Generic.List{System.Int32[]}@,System.Double[][]@,System.Double[][]@)">
            <summary>
            基本信息
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.AddGrossError(System.Double[][]@,System.Double,System.Double)">
            <summary>
            添加粗差
            </summary>
            <param name="bList"></param>
            <param name="rate"></param>
            <param name="sigma"></param>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.bulitCleanBaselineInfomation(System.Collections.Generic.List{System.Int32[]}@,System.Collections.Generic.List{System.Int32[]}@,System.Double[][]@,System.Double[][]@)">
            <summary>
            基本信息
            不引入粗差
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexNetworksAdjust.GetCleanedMatrix(Gnsser.Data.Sinex.SinexFile)">
            <summary>
            上次参数的协方差阵
            </summary>
            <param name="recInfo"></param>
            <param name="lastPppResult"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SinexSubNetsUnion">
            <summary>
            两个具有公共点的子网进行联合整体平差。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.Adjust(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            构建参数平差观测方程，并进行平差计算。
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.BuildResultSinex(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile,System.Double[][])">
            <summary>
            依据输入和平差信息，构建平差结果Sinex文件
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <param name="apriori"></param>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.GetXyzs(System.Double[][])">
            <summary>
            从矩阵向量中提取坐标值，要求矩阵的首行列必须是XYZ顺序排序。
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.GetApriori(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            未知参数的先验值。是一个列向量.
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.GetObsMinusApriori(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            获取矩阵l，为观测值减去先验值，是一个列向量。
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.GetCovaMatrixOfObs(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            提取观测量的权逆阵。是否只提取对角阵？？
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SinexSubNetsUnion.GetCoeffMatrixOfParams(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            根据两个Sinex文件，提取系数阵。就是参数平差的参数系数阵。
            Get coe Of Params Matrix Of Params
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.BaseAbstractGnssSolver`2">
            <summary>
            GNSS 计算器，实质应该为服务，将生产分为赋值，矫正和计算。
            </summary>
            <typeparam name="TProduct"></typeparam>
            <typeparam name="TMaterial"></typeparam>
        </member>
        <member name="F:Gnsser.Service.BaseAbstractGnssSolver`2.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.IsBaseSatelliteRequried">
            <summary>
            是否需要基准卫星类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.IsBaseSiteRequried">
            <summary>
            是否需要基准测站类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.IsFixingAmbiguity">
            <summary>
            是否固定模糊度
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.CurrentBasePrn">
            <summary>
            当前的基准卫星
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.BaseSiteName">
            <summary>
            基准测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.BaseSatType">
            <summary>
            基准卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.ObsDataAnalyst">
            <summary>
            数据分析专家。对数据预先进行分析。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.BaseParamCount">
            <summary>
            基础的，不变的参数数量，如伪距定位通常为 4.如果PPP则为5，其它为可变的卫星模糊度参数。 
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.DataSourceContext">
            <summary>
            数据源上下文
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.Option">
            <summary>
            定位计算选项
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.Adjustment">
            <summary>
            平差计算器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.MatrixAdjuster">
            <summary>
            平差计算器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.AdjustChecker">
            <summary>
            平差结果检核管理器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.MatrixBuilder">
            <summary>
            矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.OnProducing(`1)">
            <summary>
            即将生产前产生。
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.HandleBuffer(Geo.IBuffer{`1}@)">
             <summary>
            如果具有缓存，则可以在此根据缓存进行预处理
             </summary>
             <param name="epochInfo"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.Produce(`1)">
            <summary>
            生成产品，包括矩阵生成，计算和结果输出。
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.BaseAbstractGnssSolver`2.ElementResidualCheckers">
            <summary>
            残差分量检查
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.BuildAdjustMatrix">
            <summary>
            更新矩阵构建器
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.CaculateIndependent(`1)">
            <summary>
            独立计算，默认为无先验信息的卡尔曼滤波
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.CaculateKalmanFilter(`1,`0)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="material">接收信息</param> 
            <param name="last">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.RunAdjuster(Geo.Algorithm.Adjust.AdjustObsMatrix)">
            <summary>
            运行计算器
            </summary>
            <param name="obsMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.BuildAdjustObsMatrix(`1)">
            <summary>
            构建平差观测矩阵 
            </summary>
            <param name="material">接收信息</param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.CheckProduct(`0)">
            <summary>
            算后结果处理，主要检查方差是否过大，剔除陡峭数据
            </summary> 
            <param name="product">本次历元计算结果</param>
            <returns>如果为null，则表示计算失败，或结果被剔除</returns>
        </member>
        <member name="M:Gnsser.Service.BaseAbstractGnssSolver`2.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSiteSinglePeriodSatGnssMatrixBuilder">
            <summary>
            基础的单站单星多历元GNSS矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteSinglePeriodSatGnssMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingleSiteSingleSatGnssMatrixBuilder">
            <summary>
            基础的单站单星单历元GNSS矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteSingleSatGnssMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Service.PostResidualCheckerManager">
            <summary>
            参数检查
            </summary>
        </member>
        <member name="M:Gnsser.Service.PostResidualCheckerManager.#ctor(System.Double)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.PostResidualCheckerManager.MaxErrorTimes">
            <summary>
            最大误差倍数
            </summary>
        </member>
        <member name="P:Gnsser.Service.PostResidualCheckerManager.ElementResidualCheckers">
            <summary>
            残差分量检查
            </summary>
        </member>
        <member name="M:Gnsser.Service.PostResidualCheckerManager.GetBadPrns(Gnsser.Service.BaseGnssResult)">
            <summary>
            获取失败的卫星,具有周跳的，已经进行了降权，因此不返回。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PostResidualCheckerManager.GetBadElementResidual(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            残差分量检查
            </summary>
            <param name="postResiduals"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodSolver">
            <summary>
            多站多时段解算器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="option"></param> 
        </member>
        <member name="T:Gnsser.Service.DualSiteEpochDoubleDifferResult">
            <summary>
            单历元双站双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.DualSiteEpochDoubleDifferResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            单历元双站双差
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="P:Gnsser.Service.DualSiteEpochDoubleDifferResult.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.DualSiteEpochDoubleDifferResult.GetTabTitles">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DualSiteEpochDoubleDifferResult.GetTabValues">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DualSiteEpochDoubleDifferResult.GetEstimatedBaseline">
            <summary>
            基线估值
            </summary>
        </member>
        <member name="T:Gnsser.Service.EpochDualFreqDoubleDifferParamNameBuilder">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
            <param name="Option"></param> 
            <param name="baseParamCount"></param> 
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            卫星参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder">
            <summary>
            简易近距离单基线单历元载波相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
            <param name="BaseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.BaseParamCount">
            <summary>
            不变参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.EpochInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.EpochInfoOfRov">
            <summary>
            流动站
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.EpochDualFreqDoubleDifferPositioner">
            <summary>
             简易近距离单历元载波相位双差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferPositioner.ResidualsAnalysis">
            <summary>
            残差分析
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferPositioner.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="epochInfos">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferPositioner.BuildResult">
             <summary>
            结果
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDualFreqDoubleDifferPositionResult">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber)">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
            <param name="material"></param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferPositionResult.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDualFreqDoubleDifferPositionResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDualFreqDoubleDifferPositionResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.CommonSingeSatGnssSolver">
            <summary>
            通用单站单星单历元GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeSatGnssSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.Service.SingleSiteSingleSatGnssMatrixBuilder)">
            <summary>
            通用单站单星单历元GNSS计算
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
            <param name="gnssMatrixBuilder"></param>
        </member>
        <member name="M:Gnsser.Service.CommonSingeSatGnssSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingePeriodSatGnssSolver">
            <summary>
            通用单站单星多历元GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingePeriodSatGnssSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.Service.SingleSiteSinglePeriodSatGnssMatrixBuilder)">
            <summary>
            通用单站单星多历元GNSS计算
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
            <param name="gnssMatrixBuilder"></param>
        </member>
        <member name="M:Gnsser.Service.CommonSingePeriodSatGnssSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSiteGnssExtentParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSiteGnssExtentParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiSiteGnssExtentParamNameBuilder.EpochInfos">
            <summary>
            列表
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSiteGnssExtentParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DifferCoeffBuilder">
            <summary>
            差分系数左乘线性变换矩阵构建器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.#ctor(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="CurrentMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn"></param>
        </member>
        <member name="P:Gnsser.Service.DifferCoeffBuilder.CurrentMaterial">
            <summary>
            原料
            </summary>
        </member>
        <member name="P:Gnsser.Service.DifferCoeffBuilder.BaseSiteName">
            <summary>
            基准站名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.DifferCoeffBuilder.CurrentBasePrn">
            <summary>
            当前基准星
            </summary>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefBetweenSites">
            <summary>
            站间差分左乘系数阵.
            基准站将被差分掉。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefOfBetweenSats">
            <summary>
             在原始数据上构建星间差分左乘系数阵。参考星放在各站第一位置，参考站放在第一区块，各站卫星与该站的基准卫星作差分。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefBetweenSitesSingleObs(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            站间差分左乘系数阵.
            基准站将被差分掉。
            </summary>
            <param name="CurrentMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn">基准星， 非必需，若是在单差基础上做双差，则需要指定</param>
            <param name="isIgnoreBasPrn">若是在单差基础上做双差，则需要指定true</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefOfBetweenSatsSingleObs(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber)">
            <summary>
            在原始数据上构建星间差分左乘系数阵。参考星放在各站第一位置，参考站放在第一区块，各站卫星与该站的基准卫星作差分。
            </summary>
            <param name="CurrentMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefBetweenSites(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            站间差分左乘系数阵.
            基准站将被差分掉。
            </summary>
            <param name="CurrentMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn">基准星， 非必需，若是在单差基础上做双差，则需要指定</param>
            <param name="isIgnoreBasPrn">若是在单差基础上做双差，则需要指定true</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DifferCoeffBuilder.BuildDifferCoeefOfBetweenSats(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber)">
            <summary>
            在原始数据上构建星间差分左乘系数阵。参考星放在各站第一位置，参考站放在第一区块，各站卫星与该站的基准卫星作差分。
            </summary>
            <param name="CurrentMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveNetDoubleDifferPositionMatrixBuilder">
            <summary>
            双差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            无电离层双差矩阵构造器
            </summary>
            <param name="option"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionMatrixBuilder.SecondCoefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder">
            <summary>
            双差网解定位参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder.Obj">
            <summary>
            原料对象
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionSecondParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveNetDoubleDifferPositionResult">
            <summary>
            双差网解定位。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差网解定位。具有模糊度。
            </summary>
            <param name="mInfo">历元观测信息</param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="T:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder">
            <summary>
            双差网解定位参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder.Obj">
            <summary>
            原料对象
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveNetDoubleDifferPositionSolver">
            <summary>
             双差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.RecursiveNetDoubleDifferPositionSolver.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetSingleDifferPositionMatrixBuilder">
            <summary>
            单差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            无电离层双差矩阵构造器
            </summary>
            <param name="option"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.IsDualIonoFreeComObservation">
            <summary>
            是否采用双频无电离层组合观测值
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.ObsCount">
            <summary>
            观测值数量,伪距加载波，除去一个测站，卫星保持完整。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.ObservationVector">
            <summary>
            观测值。定位采用站间单差。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对称阵。
            双差对角线应该加倍？？？？？？此处先忽略/。。。。。。。。。。。
            </summary>  
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.NetSingleDifferPositionResult">
            <summary>
            单差网解定位。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差网解定位。具有模糊度。
            </summary>
            <param name="mInfo">历元观测信息</param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="T:Gnsser.Service.NetSingleDifferPositionParamNameBuilder">
            <summary>
            单差网解定位参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetSingleDifferPositionParamNameBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetSingleDifferPositionSolver">
            <summary>
             单差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.NetSingleDifferPositionSolver.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder">
            <summary>
            双差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            无电离层双差矩阵构造器
            </summary>
            <param name="option"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.IsDualIonoFreeComObservation">
            <summary>
            是否采用双频无电离层组合观测值
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.ObsCount">
            <summary>
            观测值数量,伪距加载波，除去一个测站，一个卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.BuildObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder">
            <summary>
            双差网解定位参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder.Obj">
            <summary>
            原料对象
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetDoubleDifferName">
            <summary>
            双差名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferName.RefPrn">
            <summary>
            基准星
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferName.RovPrn">
            <summary>
            流动星
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDoubleDifferName.IsValid">
            <summary>
            是否有效，都有值。
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferName.ToString">
            <summary>
            字符串显示, Rov-Ref_G02-G01
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferName.ToString(System.String)">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferName.IsDifferParam(System.String)">
            <summary>
            简单判断是否差分参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferName.Parse(System.String)">
            <summary>
            字符串解析
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetDifferName">
            <summary>
            差分名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDifferName.RefName">
            <summary>
            参考站名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDifferName.RovName">
            <summary>
            流动站名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.NetDifferName.IsValid">
            <summary>
            是否有效，都有值。
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDifferName.ToString">
            <summary>
            字符串显示, Rov-Ref_G02-G01
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDifferName.ToString(System.String)">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDifferName.IsDifferParam(System.String)">
            <summary>
            简单判断是否差分参数
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDifferName.Parse(System.String)">
            <summary>
            字符串解析
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetDoubleDifferPositionResult">
            <summary>
            双差网解定位。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差网解定位。具有模糊度。
            </summary>
            <param name="mInfo">历元观测信息</param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.GetEstimatedBaselines">
            <summary>
            提取基线结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.ExtractCovaMatrix(Gnsser.Service.NetDoubleDifferPositionParamNameBuilder,System.String)">
            <summary>
            提取基线协方差
            </summary>
            <param name="nameBuider"></param>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.ExtractBaseline(Gnsser.Service.NetDoubleDifferPositionParamNameBuilder,System.String)">
            <summary>
            提取基线
            </summary>
            <param name="nameBuider"></param>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.GetTabTitles">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionResult.GetTabValues">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.NetDoubleDifferPositionSolver">
            <summary>
             双差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionSolver.DoFixAmbiguity(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            默认采用Lambda算法直接固定。
            如果是无电离层组合，则需要分别对待，不能直接固定，需要子类进行实现，//2018.11.06，czs， hmx
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.NetDoubleDifferPositionSolver.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferParamNameBuilder">
            <summary>
            模糊度固定的纯载波双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
            <param name="Option"></param> 
            <param name="baseParamCount"></param> 
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            卫星参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder">
            <summary>
            模糊度固定的纯载波双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
            <param name="BaseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.BaseParamCount">
            <summary>
            不变参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.EpochInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.EpochInfoOfRov">
            <summary>
            流动站
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.AmbiguityManager">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.AmbiguityStoarge">
            <summary>
            模糊度存储
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.BuildEpochDoubleQ">
            <summary>
            每个历元的权逆阵，第一颗卫星多出现了一次，不再独立。
            此处令对角线为2，其余为1。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            单频载波观测值的双差协方差矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.GetSatIndexExceptBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星在卫星参数中的编号。自动跳过基准星。
            </summary>
            <param name="prn"></param> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner">
            <summary>
             模糊度固定的纯载波双差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner.ResidualsAnalysis">
            <summary>
            残差分析
            </summary>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="epochInfos">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferPositioner.BuildResult">
             <summary>
            结果
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferResult">
            <summary>
            模糊度固定的纯载波双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber)">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
            <param name="material"></param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
        </member>
        <member name="M:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.AmbiFixedEpochDoublePhaseOnlytDifferResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.DoubleDifferOrbitMatrixBuilder">
            <summary>
            无电离层组合双差定轨矩阵构造器
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            无电离层双差矩阵构造器
            </summary>
            <param name="option"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.IsDualIonoFreeComObservation">
            <summary>
            是否采用双频无电离层组合观测值
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.ObsCount">
            <summary>
            观测值数量,伪距加载波，除去一个测站，一个卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.BuildEpochDoubleQ">
            <summary>
            每个历元的权逆阵，第一颗卫星多出现了一次，要对其降权。
            此处令对角线为2，其余为1。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对称阵。
            双差对角线应该加倍？？？？？？此处先忽略/。。。。。。。。。。。
            </summary>  
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.DoubleDifferOrbitSolver">
            <summary>
             无电离层组合双差定轨
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitSolver.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DoubleDifferOrbitResult">
            <summary>
            无电离层组合双差定轨。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差差分定位结果。具有模糊度。
            </summary>
            <param name="mInfo">历元观测信息</param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="T:Gnsser.Service.DoubleDifferOrbitParamNameBuilder">
            <summary>
            无电离层组合双差定轨参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleDifferOrbitParamNameBuilder.IsEstimateTropWetZpd">
            <summary>
            是否估计对流层湿延迟参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleDifferOrbitParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RangeOrbitParamNameBuilder">
            <summary>
            简易伪距轨道确定参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangeOrbitParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.RangeOrbitParamNameBuilder.MultiSiteEpochInfo">
            <summary>
            对象
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangeOrbitParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveZeroDifferOrbitConstParamNameBuilder">
            <summary>
            固定参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitConstParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitConstParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitConstParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder">
            <summary>
            矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder.FixedParamCount">
            <summary>
            固定参数数量,模糊度与对流层湿延迟天顶距。
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder.ParamCount">
            <summary>
            易变参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveZeroDifferOrbitMatrixBuilder.SecondCoefficient">
            <summary>
            固定参数（如模糊度）平差系数阵 B 。模糊度参数。
            随着卫星数量的改变，参数将改变。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveZeroDifferOrbitMutabletParamNameBuilder">
            <summary>
            易变参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitMutabletParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitMutabletParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveZeroDifferOrbitMutabletParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.ZeroDifferOrbitParamNameBuilder">
            <summary>
            非差轨道确定参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.ZeroDifferOrbitParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.ZeroDifferOrbitParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IFixableParamResult">
            <summary>
            模糊度/固定参数结果的接口
            </summary>
        </member>
        <member name="P:Gnsser.Service.IFixableParamResult.FixedParams">
             <summary>
            已固定的模糊度，固定参数等
             </summary>
        </member>
        <member name="M:Gnsser.Service.IFixableParamResult.GetFixableVectorInUnit">
            <summary>
            提取可用于固定的参数加权向量，且转换为用于固定的单位，如原始载波以周为单位的模糊度，用于载波计算，如果是xyz，则不必转换。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoubleDifferParamNameBuilder">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            简易近距离单历元载波相位双差参数命名器
            </summary>
            <param name="Option"></param> 
            <param name="baseParamCount"></param> 
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            卫星参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoubleDifferMatrixBuilder">
            <summary>
            近距离单基线单历元载波相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
            <param name="BaseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.BaseParamCount">
            <summary>
            不变参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.EpochInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.EpochInfoOfRov">
            <summary>
            流动站
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferMatrixBuilder.BuildObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.EpochDoubleDifferPositioner">
            <summary>
             简易近距离单历元载波相位双差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferPositioner.ResidualsAnalysis">
            <summary>
            残差分析
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferPositioner.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="epochInfos">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferPositioner.BuildResult">
             <summary>
            结果
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDoubleDifferPositionResult">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber)">
            <summary>
            简易近距离单历元载波相位双差
            </summary>
            <param name="material"></param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferPositionResult.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDoubleDifferPositionResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDoubleDifferPositionResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder">
             <summary>
            双频电离层延迟改正，单频PPP
             </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            通用单站单频计算，高度可配置 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.DoubleFreqIonoSingleFreqPppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DoubleFreqIonoSingleFreqPppNameBuilder">
            <summary>
             双频电离层延迟改正，单频PPP
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DoubleFreqIonoSingleFreqPppGnssResult">
            <summary>
             双频电离层延迟改正，单频PPP
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppGnssResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            精 通用单站单频计算，高度可配置构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="positioner">定位器</param>
        </member>
        <member name="T:Gnsser.Service.DoubleFreqIonoSingleFreqPppSolver">
            <summary>
            双频电离层延迟改正，单频PPP
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
             通用单站单频计算，高度可配置 
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.DoubleFreqIonoSingleFreqPppSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppMatrixBuilderOld">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppMatrixBuilderOld.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoFreePppMatrixBuilderOld.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppMatrixBuilderOld.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.IonoFreePppMatrixBuilderOld.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppMatrixBuilderOld.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppMatrixBuilderOld.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppOld">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOld.IntValueTableOfWL">
            <summary>
            宽巷整数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOld.IntValueTableOfNL">
            <summary>
            窄巷的整数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOld.FractionValueTableOfNL">
            <summary>
            窄巷的小数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOld.SUM_MWs">
            <summary>
            逐历元更新的，每颗卫星的MW值
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            独立计算
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld.GetFixedPppAmbi(System.Double,System.Double,System.Double)">
            <summary>
            模糊度长度固定部分。单位周
            </summary>
            <param name="intOfWL"></param>
            <param name="intOfNL"></param>
            <param name="fractionOfNL"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOld.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveSingleFreqPppConstParamNameBuilder">
            <summary>
            固定参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppConstParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppConstParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppConstParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppConstParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveSingleFreqPppMatrixBuilder">
            <summary>
            非组合精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.RecursiveSingleFreqPppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.RecursiveSingleFreqPppMatrixBuilder.SecondCoefficient">
            <summary>
            固定参数（如模糊度）平差系数阵 B 。模糊度参数。
            随着卫星数量的改变，参数将改变。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveSingleFreqPppMutabletParamNameBuilder">
            <summary>
            易变参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppMutabletParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppMutabletParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppMutabletParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveSingleFreqPppMutabletParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.UncombinedPppMatrixBuilderOld">
            <summary>
            非组合精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppMatrixBuilderOld.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilderOld.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilderOld.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilderOld.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppMatrixBuilderOld.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilderOld.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary>
            <param name="epochInfo">观测信息</param>
            <param name="aprioriXyz">先验坐标</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.UncombinedPppParamNameBuilderOld">
            <summary>
            非差非组合参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilderOld.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilderOld.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilderOld.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiFreqRangeMatrixBuilder">
            <summary>
            多系统伪距单点定位，顾及系统时间偏差。
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangeMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            多系统伪距单点定位，顾及系统时间偏差，构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.Service.MultiFreqRangeMatrixBuilder.IsEstIonoParamOfL1">
            <summary>
            是否估计 L1 的电离层参数
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiFreqRangeMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiFreqRangeMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            有多少颗卫星就有多少个观测量，只有4个参数，X,Y,Z和接收机钟差等效距离偏差。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.MultiFreqRangeMatrixBuilder.Observation">
            <summary>
            残差
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangeMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.MultiFreqRangeMatrixBuilder.FreeVector">
            <summary>
             自由项D，B0等等。则参数平差中，满足满足 l = L - (AX0 + D).
             此处，FreeVector = (AX0 + D)。
            </summary>
        </member>
        <member name="T:Gnsser.Service.MultiFreqRangeParamNameBuilder">
            <summary>
            多频率伪距定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangeParamNameBuilder.#ctor(Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            多系统伪距定位参数命名器 构造函数
            </summary>
            <param name="option"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Service.MultiFreqRangeParamNameBuilder.Build" -->
        <member name="M:Gnsser.Service.MultiFreqRangeParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiFreqRangePositioner">
            <summary>
            多频率伪距定位 
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangePositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            多频率伪距定位
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangePositioner.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
             迭代求解      
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangePositioner.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            由于滤波收敛较慢，通常初始坐标不准的情况下适合采用历元独立计算。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiFreqRangePositioner.BuildResult">
            <summary>
            结果生成
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoDeltaSolveMatrixBuilder">
            <summary>
            电离层延迟变化量的计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoDeltaSolveMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.Prn">
            <summary>
            选定的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.ParamNames">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoDeltaSolveMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.IsParamsChanged">
            <summary>
            只有四个参数且不变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoDeltaSolveMatrixBuilder.Transfer">
            <summary>
            状态转移矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonoDeltaSolveParamNameBuilder">
            <summary>
            电离层硬件延迟计算参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoDeltaSolveParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.IonoDeltaSolveParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoDeltaSolveParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder">
            <summary>
            电离层硬件延迟计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.Prn">
            <summary>
            选定的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.ParamNames">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.IsParamsChanged">
            <summary>
            只有四个参数且不变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoHardwareDelaySolveMatrixBuilder.Transfer">
            <summary>
            状态转移矩阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonoHardwareDelaySolveParamNameBuilder">
            <summary>
            电离层硬件延迟计算参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoHardwareDelaySolveParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.IonoHardwareDelaySolveParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoHardwareDelaySolveParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingeSiteGnssExtentParamNameBuilder">
            <summary>
            单站单历元GNSS计算预留测试类参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingeSiteGnssSolver">
            <summary>
            通用单站单历元GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeSiteGnssSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.Service.BaseGnssMatrixBuilder{Gnsser.Service.SingleSiteGnssResult,Gnsser.Domain.EpochInformation})">
            <summary>
            单站单历元GNSS计算预留测试类
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
            <param name="gnssMatrixBuilder"></param>
        </member>
        <member name="M:Gnsser.Service.CommonSingeSiteGnssSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.HalfSumSingeFreqMatrixBuilder">
            <summary>
            单频半和模型
            </summary>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单频半和模型构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.HalfSumSingeFreqMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.HalfSumSingeFreqNameBuilder">
            <summary>
             单频半和模型
            </summary>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.HalfSumSingeFreqSolver">
            <summary>
            单频半和模型
            </summary>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
             单频半和模型 
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.HalfSumSingeFreqSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveIonoFreePppSecondParamNameBuilder">
            <summary>
            递归最小二乘法固定参数命名器，模糊度参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppSecondParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppSecondParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppSecondParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveIonoFreePppResult">
            <summary>
            递归最小二乘精密单点定位结果。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,System.Int32)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="positioner">名称</param>
            <param name="baseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.RecursiveIonoFreePppResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveIonoFreePpp">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePpp.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            独立计算
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePpp.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveIonoFreePppMatrixBuilder">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.RecursiveIonoFreePppMatrixBuilder.SecondParamCount">
            <summary>
            固定参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.RecursiveIonoFreePppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A n*m, m为可变参数个数，此处为 5 个，xyz, dt, zpd。
            前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.RecursiveIonoFreePppMatrixBuilder.SecondCoefficient">
            <summary>
            固定参数（如模糊度）平差系数阵 B 。模糊度参数。
            随着卫星数量的改变，参数将改变。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RecursiveIonoFreePppParamNameBuilder">
            <summary>
            无电离层参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RecursiveIonoFreePppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder">
            <summary>
            单站单频多历元电离层参数化定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
             <summary>
            单站单频多历元电离层参数化定位
             </summary>  
             <param name="model">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary>  
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodParamedIonoMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodParamedIonoParamNameBuilder">
            <summary>
            单站多历元GNSS计算参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单站多历元GNSS计算参数命名器
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodParamedIonoSolver">
            <summary>
             单站单频多历元电离层参数化定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            单站多历元GNSS计算预留测试类
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodParamedIonoSolver.BuildResult">
            <summary>
            结果,固定解
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.TropAugIonoFreePpp">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePpp.IntValueTableOfWL">
            <summary>
            宽巷整数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePpp.IntValueTableOfNL">
            <summary>
            窄巷的整数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePpp.FractionValueTableOfNL">
            <summary>
            窄巷的小数部分
            </summary>
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePpp.SUM_MWs">
            <summary>
            逐历元更新的，每颗卫星的MW值
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePpp.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePpp.GetFixedPppAmbi(System.Double,System.Double,System.Double)">
            <summary>
            模糊度长度固定部分。单位周
            </summary>
            <param name="intOfWL"></param>
            <param name="intOfNL"></param>
            <param name="fractionOfNL"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.TropAugIonoFreePppMatrixBuilder">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建先验信息
            </summary> 
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.BulidInverseWeightOfObs(System.Double)">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.TropAugIonoFreePppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.TropAugIonoFreePppParamNameBuilder">
            <summary>
            无电离层参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TropAugIonoFreePppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RangePositionWithTropParamSolver">
            <summary>
            精密单点定位。电离层模型改正单频PPP
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            参数化对流层伪距定位
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="T:Gnsser.Service.RangePositionWithTropParamMatrixBuilder">
            <summary>
            对流层模型改正伪距定位矩阵生成类。基础变量数量，此处为5个 dx,dy,dz,dClk, wetTrop
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            对流层模型改正伪距定位 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.BaseType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.Observation">
            <summary>
            残差
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。 
            </summary>  
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.FreeVector">
            <summary>
             自由项D，B0等等。则参数平差中，满足满足 l = L - (AX0 + D).
             此处，FreeVector = (AX0 + D)。
            </summary>
        </member>
        <member name="P:Gnsser.Service.RangePositionWithTropParamMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.RangePositionWithTropParamNameBuilder">
            <summary>
            对流层模型改正伪距定位参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.RangePositionWithTropParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoModeledSingleFreqPpp">
            <summary>
            精密单点定位。电离层模型改正单频PPP
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            电离层模型改正单频PPP，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder">
            <summary>
            电离层模型改正单频矩阵生成类。
            和双频无电离层的参数相同，不过电离层采用模型改正，具有误差。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.BasicParamCount">
            <summary>
            基础变量数量，此处为4个 dx,dy,dz,dClk
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.BaseType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.ParamCount">
            <summary>
            参数数量，前几个固定，后几个为模糊度
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoModeledSingleFreqPppParamNameBuilder">
            <summary>
            非差非组合参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoModeledSingleFreqPppResult">
            <summary>
            精密单点定位结果。与普通单点定位区别在于精密单点定位结果增加了模糊度参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="nameBuilder">参数名称生成器</param>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppResult.BasePrn">
            <summary>
            基准卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppResult.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoModeledSingleFreqPppResult.GetAmbiguityDistace(Gnsser.SatelliteNumber)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoModeledSingleFreqPppResult.AmbiguityDic">
            <summary>
            模糊度字典.L1，L2组合整周模糊度等效的距离长度。每颗卫星按频率排列的模糊度，如L1、L2的模糊度
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder">
            <summary>
            单站多历元GNSS计算预留测试类。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            载波相位双差定位矩阵生成器，构造函数。
            </summary>  
            <param name="model">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary>  
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodIonoFreePppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodIonoFreePppParamNameBuilder">
            <summary>
            单站多历元单频GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单站多历元单频GNSS计算命名器
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodIonoFreePppSolver">
            <summary>
             单站多历元单频GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
             <summary>
            单站多历元单频GNSS计算
             </summary>
             <param name="DataSourceContext"></param>
             <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppSolver.BuildResult">
            <summary>
            结果,固定解
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodIonoFreePppResult">
             <summary>
            单站多历元单频GNSS计算
             </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodIonoFreePppResult.#ctor(Gnsser.Domain.PeriodInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            单站多历元单频GNSS计算
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder">
            <summary>
            单站多历元GNSS计算预留测试类。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            载波相位双差定位矩阵生成器，构造函数。
            </summary>  
            <param name="model">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary>  
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleSitePeriodGnssExtentMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodGnssExtentParamNameBuilder">
            <summary>
            单站多历元GNSS计算参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单站多历元GNSS计算参数命名器
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodGnssExtentSolver">
            <summary>
             单站多历元GNSS计算预留测试类
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            单站多历元GNSS计算预留测试类
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodGnssExtentSolver.BuildResult">
            <summary>
            结果,固定解
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AbstracSingleSitePeriodPositioner">
            <summary>
            单站多历元GNSS计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstracSingleSitePeriodPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            单站多历元GNSS计算
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.AbstracSingleSitePeriodPositioner.CaculateKalmanFilter(Gnsser.Domain.PeriodInformation,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="MultiSitePeriodInfo">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstracSingleSitePeriodPositioner.BuildResult">
            <summary>
            结果生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingeFreqGnssSolver">
            <summary>
            通用单站单频计算，高度可配置
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
             通用单站单频计算，高度可配置 
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder">
            <summary>
            通用单站单频计算，高度可配置。
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            通用单站单频计算，高度可配置 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.CommonSingeFreqGnssMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingeFreqGnssNameBuilder">
            <summary>
             通用单站单频计算，高度可配置
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.CommonSingeFreqGnssResult">
            <summary>
             通用单站单频计算，高度可配置结果。 
            </summary>
        </member>
        <member name="M:Gnsser.Service.CommonSingeFreqGnssResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            精 通用单站单频计算，高度可配置构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="paramNames">参数名称</param>
        </member>
        <member name="T:Gnsser.Service.InitAprioriParamBuilder">
            <summary>
            基于参数名称的初始先验信息构造器
            </summary>
        </member>
        <member name="M:Gnsser.Service.InitAprioriParamBuilder.#ctor(System.Collections.Generic.List{System.String},Gnsser.GnssProcessOption)">
            <summary>
            基于参数名称的初始先验信息构造器
            </summary>
            <param name="ParamNames"></param>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.Service.InitAprioriParamBuilder.paramNames">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.InitAprioriParamBuilder.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.Service.InitAprioriParamBuilder.InitData">
            <summary>
            初始值
            </summary>
        </member>
        <member name="M:Gnsser.Service.InitAprioriParamBuilder.Build">
            <summary>
            构造
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.InitAprioriParamBuilder.Create(System.String)">
            <summary>
            默认的状态转移模型生成
            </summary>
            <param name="key">参数名称</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder">
            <summary>
            单频消电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
             <summary>
            单频消电离层组合 构造函数。
             </summary> 
             <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.BaseType">
            <summary>
            基础类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.ObsCount">
            <summary>
            观测量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary>  
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqIonoFreePppNameBuilder">
            <summary>
             单频消电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqIonoFreePppResult">
            <summary>
             单频消电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            单频消电离层组合 构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="positioner"> </param>
        </member>
        <member name="T:Gnsser.Service.SingleFreqIonoFreePppSolver">
            <summary>
            单频消电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
             单频消电离层组合 
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppSolver.PrevResults">
            <summary>
            成功的结果。
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqIonoFreePppSolver.CurrentIndex">
            <summary>
            当前执行编号
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppSolver.CheckOrRecaculate(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            如果有效，则直接返回，如果无效则重置先验值重新计算。
            </summary>
            <param name="epochInfo"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleFreqIonoFreePppSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.DicWindowData`2.WindowSize">
            <summary>
            窗口大小
            </summary>
        </member>
        <member name="T:Gnsser.Service.AbstractGnssSolver`2">
            <summary>
            GNSS 计算器，实质应该为服务，将生产分为赋值，矫正和计算。
            </summary>
            <typeparam name="TProduct"></typeparam>
            <typeparam name="TMaterial"></typeparam>
        </member>
        <member name="F:Gnsser.Service.AbstractGnssSolver`2.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.PeriodPrnManager">
            <summary>
            基准卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.IonoFreeAmbiguitySolverManager">
            <summary>
            无电离层模糊度系数计算
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.EpochEphemerisSetter">
            <summary>
            星历赋值器，以备不时之需
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.RangePositioner">
            <summary>
            简单伪距定位
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.IsUpdateEstimatePostition">
            <summary>
            是否更新测站估计坐标
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.MatrixBuilder">
            <summary>
            矩阵生成器
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.Gnsser#IGnssSolver#MatrixBuilder">
            <summary>
            Override
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.AmbiguityManager">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.IsUsingOutComeAmbituity">
            <summary>
            是否使用外部模糊度
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.IsOutputAmbiguity">
            <summary>
            是否输出模糊度
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.AmbiguityStoarge">
            <summary>
            模糊度存储
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.OnProducing(`1)">
            <summary>
            即将生产前产生。
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.HandleBuffer(Geo.IBuffer{`1}@)">
             <summary>
            如果具有缓存，则可以在此根据缓存进行预处理
             </summary>
             <param name="epochInfo"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.Produce(`1)">
            <summary>
            生成产品，包括矩阵生成，计算和结果输出。
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.BuildAdjustMatrix">
            <summary>
            更新矩阵构建器
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CaculateIndependent(`1)">
            <summary>
            独立计算，默认为无先验信息的卡尔曼滤波
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CaculateKalmanFilter(`1,`0)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="material">接收信息</param> 
            <param name="last">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.BuildAdjustObsMatrix(`1)">
            <summary>
            生成平差观测矩阵
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.BuildMatrixAndAdjust">
            <summary>
            构建矩阵并进行平差计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CheckOrUpdateNextPrevEstCoordWithRangePositioning(`1,`0)">
            <summary>
            检查，如果采用动态定位，则采用伪距预先定位进行更新
            </summary>
            <param name="material"></param>
            <param name="lastResult">上一次定位结果</param>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CheckOrUpdateEstimatedCoord(`1,`0)">
            <summary>
            检查更新估值坐标
            </summary>
            <param name="material"></param>
            <param name="currentResult"></param>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.ElementResidualCheck(`0)">
            <summary>
            残差分量检查
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CheckProduct(`0)">
            <summary>
            算后结果处理，主要检查方差是否过大，剔除陡峭数据
            </summary> 
            <param name="product">本次历元计算结果</param>
            <returns>如果为null，则表示计算失败，或结果被剔除</returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.IsRequreReselectBaseSat">
            <summary>
            判断是否需要重新选基准星。选星考虑存在否和周跳因素
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.SelectBaseSiteName">
            <summary>
            选择基准测站
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.SelectBaseSatellite">
            <summary>
            根据历史和预处理统计信息，选择基准卫星。 
            还应该加入周跳判断！！ czs , 2016.10.26,
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.CheckOrTryToGetAmbiguityFixedResult(`0)">
            <summary>
            检查是否可以固定模糊度，如果可以，则尝试固定，并返回结果
            </summary>
            <param name="theResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.TryFixeAmbiguites(Gnsser.Service.IFixableParamResult,Geo.Algorithm.Adjust.WeightedVector@)">
            <summary>
            尝试固定模糊度，成功返回ture，并传递成功后的赋值。
            </summary>
            <param name="result"></param>
            <param name="fixedParams"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.RemoveBiasedIntSolution(Geo.Algorithm.Adjust.WeightedVector,Geo.Algorithm.Adjust.WeightedVector,System.Double)">
            <summary>
            移除固定时变的。
            允许整数与浮点数的最大偏差，如 浮点数为 0.1 而整数为 1，则认为失败。
            </summary>
            <param name="floatSolCyle"></param>
            <param name="fixedIntAmbiCycles"></param>
            <param name="maxDifferOfIntAndFloatAmbi"></param>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.TryFixeAmbiguites(Gnsser.Service.EpochDouFreDoubleDifferPositionResult,Geo.Algorithm.Adjust.WeightedVector@)">
            <summary>
            尝试固定模糊度，成功返回ture，和成功后的赋值。
            </summary>
            <param name="result"></param>
            <param name="fixedIntAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.ConvertCycleAmbiguityToMeter(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            将周转换为为米，并调整好顺序。
            </summary>
            <param name="fixedIntAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.AbstractGnssSolver`2.IsOuterAmbiguityFileAvailable">
            <summary>
            是否采用外部文件
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.FixePhaseAmbiguity(Gnsser.Service.IFixableParamResult)">
            <summary>
            固定相位模糊度
            </summary>
            <param name="ambiableResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.DoFixAmbiguity(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            默认采用Lambda算法直接固定。
            如果是无电离层组合，则需要分别对待，不能直接固定，需要子类进行实现，//2018.11.06，czs， hmx
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.AbstractGnssSolver`2.FixePhaseAmbiguity(Gnsser.Service.EpochDouFreDoubleDifferPositionResult)">
            <summary>
            固定模糊度
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Gnsser.Service.SimpleBaseGnssMatrixBuilder" -->
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.IsFixingCoord">
            <summary>
            是否固定坐标
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.SatTypeCount">
            <summary>
            指定的系统类型的数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.SatelliteTypes">
            <summary>
            系统类型。
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.IsSameTimeSystemInMultiGnss">
            <summary>
            多系统是否采用相同的时间基准。
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.PhaseCovaProportionToRange">
            <summary>
            相位比伪距方差的比值，通常为0.01
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder.SetMaterial(System.Object)">
            <summary>
            设置原材料
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder.SetPreviousProduct(System.Object)">
            <summary>
            设置原结果
            </summary>
            <param name="obj"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2" -->
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.SatWeightProvider">
            <summary>
            卫星定权
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.CurrentMaterial">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.PreviousProduct">
            <summary>
            上一次计算结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.SetMaterial(System.Object)">
            <summary>
            设置原材料
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.SetPreviousProduct(System.Object)">
            <summary>
            设置原结果
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.IsInitAprioriAvailable">
            <summary>
            初始先验值是否可用。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.IsEnableInitApriori">
            <summary>
            手动指定是否启用先验信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.InitApriori">
            <summary>
            手动提供初始的先验信息
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.SetInitApriori(Geo.Algorithm.Adjust.WeightedVector,System.Boolean)">
            <summary>
            设置初始
            </summary>
            <param name="InitApriori"></param>
            <param name="IsEnableInitApriori"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.AprioriParam">
            <summary>
            创建先验信息.
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SimpleBaseGnssMatrixBuilder`2.CreateInitAprioriParam">
            <summary>
            第一次参数先验值。 创建初始先验参数值和协方差阵。只会执行一次。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.BaseGnssMatrixBuilder`2">
            <summary>
            基于泛型的GNSS矩阵生成器
            </summary>
            <typeparam name="TMaterial"></typeparam>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.ParamStateTransferModelManager">
            <summary>
            参数 随机模型管理器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.PrevMaterial">
            <summary>
            上一个原料，存在于上一个计算结果中，若是第一个，则为NULL
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.IsParamsChanged">
            <summary>
            参数是否改变，默认通过可用卫星进行判断。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.EnabledSatCount">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.EnabledPrns">
            <summary>
            启用的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.GnssParamNameBuilder">
            <summary>
            直接获取 GnssParamNameBuilder
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.SecondParamNameBuilder">
            <summary>
            第二参数名称生成器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.ParamPipleManager">
            <summary>
            用于管理数据发生跳变的参数，加大他们的状态转移噪声。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.BaseSatType">
            <summary>
            基准卫星类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.CurrentBasePrn">
            <summary>
            常常需要基准卫星。
            基础卫星编号。都以此卫星做差分。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.BaseSiteName">
            <summary>
            基准测站，用于网解
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.IsBaseSatUnstable">
            <summary>
            相对上一历元，基准卫星是否稳定，以确定状态转移模型和观测噪声。
            当发生周跳时，也可以设置true，采用它来重新定权。
            </summary>
        </member>
        <member name="E:Gnsser.Service.BaseGnssMatrixBuilder`2.BaseSatChangedEnventHandler">
            <summary>
            基准卫星变化了
            </summary>
        </member>
        <member name="E:Gnsser.Service.BaseGnssMatrixBuilder`2.BaseSiteChangedEnventHandler">
            <summary>
            基准测站变化处理事件
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.OnBaseSiteChanged(System.String,System.String)">
            <summary>
            测站改变了
            </summary>
            <param name="newSiteName"></param>
            <param name="oldSiteName"></param>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.OnBaseSatChanged(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            基准卫星变化了
            </summary>
            <param name="newPrn"></param>
            <param name="oldPrn"></param>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.CheckAndGetCoeefOfPhase">
            <summary>
            相位模糊度系数，可以为米和周，按照设置文件决定。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.CheckAndGetCoeefOfPhaseL2">
             <summary>
            第二频率 相位模糊度系数 ，可以为米和周，按照设置文件决定。
             </summary>
             <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.SetBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            设置基础卫星
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.SetBaseSiteName(System.String)">
            <summary>
            设置基础测站
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.SetBaseSatType(Gnsser.SatelliteType)">
            <summary>
            设置基础卫星类型
            </summary>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.SetMaterial(`1)">
            <summary>
            设置历元信息
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.SetPreviousProduct(`0)">
            <summary>
            设置上一个定位结果
            </summary>
            <param name="previousResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.Build">
            <summary>
            显示调用构建器
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.Check">
            <summary>
            简单的检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.BuildParamNames">
            <summary>
            创建参数名称
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.BuildParamNames(Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            生存参数名称
            </summary>
            <param name="nameBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.UpdateStateTransferModels">
            <summary>
            检查并更新参数状态转移模型
            </summary> 
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.Transfer">
            <summary>
             创建状态转移矩阵和噪声,注意：大多数状态转移模型为两个对角线矩阵
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssMatrixBuilder`2.SecondTransfer">
            <summary>
             创建状态转移矩阵和噪声,注意：大多数状态转移模型为两个对角线矩阵
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssMatrixBuilder`2.GetIonoCoeOfP2(Gnsser.SatelliteType)">
            <summary>
            P2 的电离层系数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IStreamGnssService">
            <summary>
            单点定位
            </summary>
        </member>
        <member name="P:Gnsser.Service.IStreamGnssService.PositionOption">
            <summary>
            定位计算选项
            </summary>
        </member>
        <member name="P:Gnsser.Service.IStreamGnssService.DataSourceContext">
            <summary>
            数据源上下文。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IStreamGnssService.MatrixBuilder">
            <summary>
            矩阵生成器
            </summary>
        </member>
        <member name="T:Gnsser.Service.MultiSiteEpochSolver">
            <summary>
            多站同历元解算器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSiteEpochSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="option"></param> 
        </member>
        <member name="P:Gnsser.Service.MultiSiteEpochSolver.IsDualIonoFreeComObservation">
            <summary>
            是否双频电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSiteEpochSolver.DoFixIonoFreeDoubleDifferAmbiguity(Geo.Algorithm.Adjust.WeightedVector,System.Boolean)">
            <summary>
            执行无电离层双差模糊度固定
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <param name="isNetSolve">是否网解</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiSiteEpochSolver.GetIntMwDoubleDiffers(System.Boolean)">
            <summary>
            获取双差MW整数
            </summary>
            <param name="isNetSolve"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSitePeriodSolver">
            <summary>
            多站多时段解算器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSitePeriodSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="option"></param> 
        </member>
        <member name="T:Gnsser.Service.MultiSysParamNameBuilder">
            <summary>
            多系统参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:Gnsser.Service.GnssParamNameBuilder">
            <summary>
            参数名称生成器
            </summary>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数。
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.IsSiteNameIncluded">
            <summary>
            是否包含测站名称
            </summary>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            设置基准星
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetBaseSiteName(System.String)">
            <summary>
            设置基准星
            </summary>
            <param name="BaseSiteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetEpoches(System.Collections.Generic.List{Geo.Times.Time})">
            <summary>
            设置历元
            </summary>
            <param name="Epoches"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetPrns(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            设置卫星名称。
            </summary>
            <param name="enabledPrns"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetMaterial``1(``0)">
            <summary>
            设置原材料
            </summary>
            <typeparam name="TMaterial"></typeparam>
            <param name="currentMaterial"></param>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.SetSatelliteTypes(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            设置卫星类型
            </summary>
            <param name="enabledPrns"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.IsSameTimeSystemInMultiGnss">
            <summary>
            多系统是否采用相同的时间基准。
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.SystemCount">
            <summary>
            系统数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.Material">
             <summary>
            原材料对象
             </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.BaseSatType">
            <summary>
            基准卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.SatelliteTypes">
            <summary>
            卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.Epoches">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.BaseSiteName">
            <summary>
            基准测站名称，用于网解。
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.BasePrn">
            <summary>
            基准卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="P:Gnsser.Service.GnssParamNameBuilder.EnabledPrns">
            <summary>
            可用卫星
            </summary>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsPCodeName(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            双差 P 码名称
            </summary> 
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsPCodeName(System.String,System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            双差 P 码名称
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName">基准测站</param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsLCodeName(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            双差 L 码名称
            </summary> 
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsLCodeName(System.String,System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            双差 L 码名称
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName">基准测站</param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsPCodeName(System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            差分 P 码名称，星间单差
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="basePrn">基准星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsLCodeName(System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            差分 L 码名称,星间单差
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="basePrn">基准星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsPCodeName(System.String,System.String,Gnsser.SatelliteNumber)">
            <summary>
            差分 P 码名称，站间单差
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="baseSiteName">基准站</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsLCodeName(System.String,System.String,Gnsser.SatelliteNumber)">
            <summary>
            差分 L 码名称,站间单差
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="baseSiteName">基准站</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetObsPCodeName(System.String,Gnsser.SatelliteNumber)">
            <summary>
            P 码名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetObsLCodeName(Gnsser.SatelliteNumber)">
            <summary>
            L 码名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetObsPCodeName(Gnsser.SatelliteNumber)">
            <summary>
            P 码名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetObsLCodeName(System.String,Gnsser.SatelliteNumber)">
            <summary>
            L 码名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsCodeNameOf(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.String)">
            <summary>
            双差名称
            </summary> 
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsCodeNameOfPhase(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            载波名称
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="epochIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsCodeNameOf(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.String,System.Int32)">
            <summary>
            双差名称
            </summary> 
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="code"></param>
            <param name="epochIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferObsCodeNameOf(System.String,System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.String)">
            <summary>
            双差名称
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsCodeName(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.String)">
            <summary>
            星间差分名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsCodeName(System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,System.String)">
            <summary>
            星间差分名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDifferObsCodeName(System.String,System.String,Gnsser.SatelliteNumber,System.String)">
            <summary>
            站间差分名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="baseSiteName"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteWetTropZpdName(Gnsser.Domain.EpochInformation)">
            <summary>
            获取测站对流层湿延迟天顶距参数（Zpd，zenith path delay）名称
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteWetTropZpdName(System.String)">
            <summary>
            获取测站对流层湿延迟天顶距参数（Zpd，zenith path delay）名称
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.BuildSysTimeDifferParams">
            <summary>
            构建系统间钟差参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSatDxyz(Gnsser.SatelliteNumber)">
            <summary>
            卫星坐标偏差，G01_Dx，G01_Dy, G01_Dz
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteDxyz(System.String)">
            <summary>
            测站坐标偏差，HERT_Dx，HERT_Dy, HERT_Dz
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteDx(System.String)">
            <summary>
            测站坐标偏差，HERT_Dx 
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSingleDifferAmbiParamName(System.String,Gnsser.SatelliteNumber)">
            <summary>
            构建单差参数名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferAmbiParamName(System.String,Gnsser.SatelliteNumber)">
            <summary>
            构建双差参数名称
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetDoubleDifferAmbiParamName(Gnsser.SatelliteNumber)">
            <summary>
            构建双差参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSingleDifferSatAmbiParamName(Gnsser.SatelliteNumber)">
            <summary>
            构建单差模糊度参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteSatAmbiguityParamName(Gnsser.Domain.EpochSatellite)">
            <summary>
            获取测站卫星模糊度参数名称
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteSatAmbiguityParamName(System.String,Gnsser.SatelliteNumber)">
            <summary>
            测站-卫星 模糊度
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSiteClockDiffer(System.String,System.String)">
            <summary>
            建立接收机钟差参数名称
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetReceiverClockParamName(System.String)">
            <summary>
            建立接收机钟差参数名称
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSingleDifferTimedClockParamName(Geo.Times.Time)">
            <summary>
            构建单差钟差参数名称
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetSatClockParamName(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星钟参数名称, G01_cDt_s
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetReceiverClockParamName(Gnsser.Domain.EpochInformation)">
            <summary>
            建立接收机钟差参数名称
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.GetParamName(System.Object)">
            <summary>
            获取名称
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GnssParamNameBuilder.TryGetPrn(System.String)">
            <summary>
            尝试获取卫星编号。
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSiteGnssMatrixBuilder">
            <summary>
            基础的单站单历元GNSS矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingleSiteGnssSolver">
            <summary>
            GNSS 单站计算器
            </summary>
        </member>
        <member name="F:Gnsser.Service.SingleSiteGnssSolver.log">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数。
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssSolver.BuildResult">
            <summary>
            创建定位结果对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AbstracMultiSitePeriodPositioner">
            <summary>
            双站多历元GNSS计算器。
            基线载波相位差分，单基线差分定位顶层类
             方法：以一个站作为参考站，另一个作为流动站（待算站) 
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstracMultiSitePeriodPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            差分
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.AbstracMultiSitePeriodPositioner.BuildResult">
            <summary>
            结果生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.AbstractMultiSitePeriodMatrixBuilder">
            <summary>
            差分定位的矩阵生成器。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.AbstractMultiSitePeriodMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            差分定位的矩阵生成器，构造函数。
            </summary>  
            <param name="model">解算选项</param> 
        </member>
        <member name="M:Gnsser.Service.AbstractMultiSitePeriodMatrixBuilder.BuildParamNames">
            <summary>
            构建名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.AbstractMultiSitePeriodMatrixBuilder.AprioriParam">
            <summary>
            先验信息。滤波需要的
            </summary>
        </member>
        <member name="T:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder">
            <summary>
            单历元相位双差
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.BaseParamCount">
            <summary>
            基础（不变）参数个数
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.RefInfo">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建先验信息
            </summary> 
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。观测值顺序调整了，基准星的数据放在第一个位置。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.BuildEpochDoubleQ">
            <summary>
            每个历元的权逆阵，第一颗卫星多出现了一次，要对其降权。
            此处令对角线为2，其余为1。
            </summary>
            <param name="rowCol">行列数</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            双频载波观测值的双差协方差矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.GetSatIndexExceptBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星在卫星参数中的编号。自动跳过基准星。
            </summary>
            <param name="prn"></param> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="T:Gnsser.Service.EpochDouFreDoubleDifferPositioner">
            <summary>
             单历元相位双差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositioner.DoubleIonFreeAmReslution">
            <summary>
            双差模糊度固定
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositioner.ResidualsAnalysis">
            <summary>
            残差分析
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositioner.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositioner.AmbiguityManager">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="epochInfos">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDouFreDoubleDifferPositionResult">
            <summary>
            单历元载波相位双差差分定位结果。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差差分定位结果。具有模糊度。
            </summary>
            <param name="epochInfo">历元观测信息</param>
            <param name="PointPositionType">单点定位类型</param>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.SatNumberAndFrequence.SatNumber">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.SatNumberAndFrequence.Frequence">
            <summary>
            频率
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.GetAmbiguityDistace(Gnsser.Service.EpochDouFreDoubleDifferPositionResult.SatNumberAndFrequence)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.AmbiguityDic">
            <summary>
            模糊度字典.L1，L2组合整周模糊度等效的距离长度。
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.GetWeightedAmbiguityVectorInCycle">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。权逆阵单位改为周，edited by CuiYang.
            注意：这里是针对双频的L1和L2。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.EpochDouFreDoubleDifferPositionResult.FixedIntAmbiguities">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.DoubleIonFreeAmbiguityReslution">
            <summary>
            模糊度固定，仅对GPS系统
            </summary>
        </member>
        <member name="F:Gnsser.Service.DoubleIonFreeAmbiguityReslution.MinArcGap">
            <summary>
            min arc gap(s)
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.LastBasePrn">
            <summary>
            记忆中的基准星，即每次把基准星存起，备新历元计算时核查
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.FixIonFreeAmbiCyclesInfo">
            <summary>
            存储之前（上一个历元）已经固定成功的模糊度
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.minFixedAmbiCount">
            <summary>
            如果固定的模糊度子集维数小于4，则该历元所有模糊度采用实数解
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.Process(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.SatelliteNumber)">
            <summary>
            逐历元进行双差模糊度固定和更新
            目前只考虑算GPS的
            </summary>
            <param name="rovReceiverInfo"></param>
            <param name="refReceeiverInfo"></param>
            <param name="adjustment"></param>
            <param name="currentBasePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.tryFixWideLaneAmbguity(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Geo.Algorithm.Vector@)">
            <summary>
            固定宽巷模糊度（fix wide-lane ambiguity）,以周为单位,波长是86cm
            通过原始观测值构建宽巷观测值，取整固定
            </summary>
            <param name="rovReceiverInfo"></param>
            <param name="refReceiverInfo"></param>
            <param name="fixedIntWideLineAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DataInfo">
            <summary>
            数据组的若干信息（均值、方差等）
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DataInfo.obsDataCount">
            <summary>
            数组的大小
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DataInfo.obsDataAverage">
            <summary>
            数组的均值
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DataInfo.obsDataAverageVariance">
            <summary>
            数组的均值的方差
            </summary>
        </member>
        <member name="P:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DataInfo.obsDataVariance">
            <summary>
            数组的方差
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.cleanMwData(Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles)">
            <summary>
            清除粗差
            </summary>
            <param name="satMwAmbiguityBaseInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.tryFixNarrowLaneAmbiguityByLAMBDA(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Geo.Algorithm.Vector,Geo.Algorithm.Adjust.WeightedVector@)">
            <summary>
             LAMBDA算法固定窄巷模糊度
            当然，还有其他固定方法，比如取整固定
            </summary>
            <param name="rovReceiverInfo"></param>
            <param name="refReceeiverInfo"></param>
            <param name="adjustment"></param>
            <param name="fixedWindLaneAmbiCycles"></param>
            <param name="fixedIonFreeAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.conffunc(System.Int32,System.Double,System.Double)">
            <summary>
            confidence function of integer ambiguity
            </summary>
            <param name="N"></param>
            <param name="B"></param>
            <param name="sig"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles">
            <summary>
            某个双差站星的连续宽巷模糊度序列 Winde Line Ambiguitys
            存储一颗卫星在有效时段内的宽巷模糊度信息
            有效时段：没有发生周跳，高度角满足要求，连续观测。
            </summary>
        </member>
        <member name="F:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles.lastEpoch">
            <summary>
            最后存储的观测时刻
            </summary>
        </member>
        <member name="F:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles.MwDic">
            <summary>
            存储该卫星在有效时段内所有历元的数据, double[0]表示卫星高度角，double[1]表示MW值
            </summary>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles.GetDataAverage">
            <summary>
            返回数组的均值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles.GetDataVariance">
            <summary>
            返回数组均值的方差
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DDWideLineAmbiCycles.GetDataAverageVariance">
            <summary>
            返回数组均值的方差
            </summary>
            <returns></returns>
        </member>
        <member name="F:Gnsser.Service.DoubleIonFreeAmbiguityReslution.DoubleDifferWideLaneAmbiCyclesDic">
            <summary>
            所有双差卫星的MW模糊度信息
            </summary>
        </member>
        <member name="T:Gnsser.Service.EnableObsCount">
            <summary>
             统计两个测站同步观测时段内的共视卫星数目
            </summary>
        </member>
        <member name="M:Gnsser.Service.EnableObsCount.#ctor(Gnsser.Data.Rinex.RinexFileObsDataSource,Gnsser.Data.Rinex.RinexFileObsDataSource)">
            <summary>
            统计两个测站同步观测时段内的共视卫星数
            </summary>
            <param name="referObsDataSource">观测站数据源</param>
            <param name="rovpath">流动站测站信息</param>
        </member>
        <member name="M:Gnsser.Service.EnableObsCount.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="lines">文件路径</param>
        </member>
        <member name="P:Gnsser.Service.EnableObsCount.ObsDataSourceA">
            <summary>
            测站数据源
            </summary>
        </member>
        <member name="P:Gnsser.Service.EnableObsCount.ObsDataSourceB">
            <summary>
            测站数据源
            </summary>
        </member>
        <member name="M:Gnsser.Service.EnableObsCount.Process(System.Double)">
            <summary>
            逐历元计算共视卫星的数目
            思路：找到同步历元，累加共视卫星数目
            </summary>
            <param name="obsSection"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IndepentBaselineChoose.#ctor(System.String[])">
            <summary>
            选择独立基线
            </summary>
            <param name="obsPaths"></param>
        </member>
        <member name="P:Gnsser.Service.IndepentBaselineChoose.files">
            <summary>
            观测文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Service.IndepentBaselineChoose.Init">
            <summary>
            更改简洁版
            </summary>
        </member>
        <member name="T:Gnsser.Service.IndepentBaselineChoose.SiteEpochSatData">
            <summary>
            每个测站文件的观测数据集合
            </summary>
        </member>
        <member name="M:Gnsser.Service.IndepentBaselineChoose.GetRoot(System.Int32)">
            <summary>
            取得顶点的根节点，从而得到连通分支
            
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IndepentBaselineChoose.VertexType">
            <summary>
            结点类型定义
            </summary>
        </member>
        <member name="T:Gnsser.Service.IndepentBaselineChoose.MGraph">
            <summary>
            图的存储结构
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder">
            <summary>
            无电离层双差矩阵构造器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption,System.Int32)">
            <summary>
            无电离层双差矩阵构造器
            </summary>
            <param name="option"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.IsParamsChanged">
            <summary>
            参数是否改变。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.RefInfo">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.RovInfo">
            <summary>
            流动站
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.BaseParamCount">
            <summary>
            基础参数的总数，即除了模糊度的剩余参数的个数
            长基线时是5，即三个坐标参数+两个对流层参数
            短基线时是3，即三个坐标参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.Build">
            <summary>
            构建
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            观测值数量。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建先验信息
            </summary>  
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            双差-参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonFreeDoubleDifferPositioner">
            <summary>
             无电离层双差，单历元解算。
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositioner.DoubleIonFreeAmReslution">
            <summary>
            双差模糊度固定
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositioner.ResidualsAnalysis">
            <summary>
            残差分析,判断是否有未发现的周跳或粗差
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositioner.DualBandCycleSlipDetector">
            <summary>
            双频周跳探测
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositioner.BuildAdjustMatrix">
            <summary>
            构建矩阵
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            </summary>
            <param name="mSiteEpochInfo">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositioner.DoFixAmbiguity(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            默认采用Lambda算法直接固定。
            如果是无电离层组合，则需要分别对待，不能直接固定，需要子类进行实现，//2018.11.06，czs， hmx
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositioner.BuildResult">
            <summary>
            结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonFreeDoubleDifferPositionResult">
            <summary>
            双差差分定位结果。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            双差差分定位结果。具有模糊度。
            </summary>
            <param name="mInfo">历元观测信息</param>
            <param name="Adjustment"></param>
            <param name="positioner"></param>
            <param name="baseSatPrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionResult.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionResult.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionResult.GetAmbiguityDistace(Gnsser.SatelliteNumber)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionResult.AmbiguityDic">
            <summary>
            模糊度字典.L1，L2组合整周模糊度等效的距离长度。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonFreeDoubleDifferPositionResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonFreeDoubleDifferPositionResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreeDoubleDifferParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreeDoubleDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreeDoubleDifferParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreeDoubleDifferParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodDoubleDifferMatrixBuilder">
            <summary>
            双差矩阵生成器。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            载波相位双差定位矩阵生成器，构造函数。
            </summary>  
            <param name="model">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.EpochObsCount">
            <summary>
            每个历元的方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.Observation">
            <summary>
            平差的常数项，通常是观测值减去近似值
            </summary> 
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，双差的第一颗卫星相关，需要降权
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.BuildEpochDoubleQ(System.Int32)">
            <summary>
            每个历元的权逆阵，第一颗卫星多出现了一次，要对其降权。
            此处令对角线为2，其余为1。
            </summary>
            <param name="rowCol">行列数</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferMatrixBuilder.GetSatIndexExceptBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星在卫星参数中的编号。自动跳过基准星。
            </summary>
            <param name="prn"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodDoubleDifferParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            双差参数命名器
            </summary>
            <param name="basePrn"></param>
            <param name="baseParamCount"></param>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodDoubleDifferPositionResult">
            <summary>
            双差差分定位结果。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferPositionResult.#ctor(Gnsser.Domain.MultiSitePeriodInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.SatelliteNumber,Gnsser.GnssProcessOption,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            双差差分定位结果。具有模糊度。
            </summary>
            <param name="Adjustment"></param>
            <param name="BasePrn"></param>
            <param name="DifferPositionOption"></param>
            <param name="PeriodDifferInfo"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferPositionResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferPositionResult.GetFixableVectorInUnit00">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoubleDifferPositionResult.GetFixableVectorInUnit22">
            <summary>
            获取模糊度参数估计结果。单位为周，权逆阵单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.PeriodDoubleDifferPositionResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.PeriodDoublePhaseDifferPositioner">
            <summary>
             载波相位差分，双差，包含 2 类参数：流动站坐标改正数（x,y,z）和模糊度差分。
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodDoublePhaseDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            载波相位差分，双差，包含 2 类参数：流动站坐标改正数（x,y,z）和模糊度差分。
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="P:Gnsser.Service.PeriodDoublePhaseDifferPositioner.AmbiguityManager">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodDoublePhaseDifferPositioner.CaculateKalmanFilter(Gnsser.Domain.MultiSitePeriodInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            滤波算法。
            </summary>
            <param name="epochInfos"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoublePhaseDifferPositioner.CaculateKalmanFilter2(Gnsser.Domain.MultiSitePeriodInfo,Gnsser.Service.BaseGnssResult)">
            <summary>
            Kalmam滤波。
            </summary>
            <param name="epochInfos">接收信息</param> 
            <param name="lastResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoublePhaseDifferPositioner.BuildCoeffiientMatrix(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            构建条件方程矩阵
            </summary>
            <param name="obsParamNames"></param>
            <param name="fixedParamNames"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodDoublePhaseDifferPositioner.BuildResult">
            <summary>
            结果,固定解
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleDifferMatrixBuilder">
            <summary>
            载波相位单差定位的矩阵生成器。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            载波相位单差定位的矩阵生成器，构造函数。
            </summary> 
            <param name="model">解算选项</param>
        </member>
        <member name="P:Gnsser.Service.SingleDifferMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleDifferMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleDifferMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            有多少颗卫星就有多少个观测量，只有4个参数，X,Y,Z和接收机钟差等效距离偏差。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SingleDifferMatrixBuilder.SetCoeffRowValue(Geo.Algorithm.IMatrix,System.Int32,System.Int32,Geo.Coordinates.XYZ)">
            <summary>
            设置系数阵数值
            </summary>
            <param name="A"></param>
            <param name="epochIndex"></param>
            <param name="satIndex"></param>
            <param name="satToRev"></param>
        </member>
        <member name="P:Gnsser.Service.SingleDifferMatrixBuilder.Observation">
            <summary>
            平差的常数项，通常是观测值减去近似值
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SingleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleDifferParamNameBuilder">
            <summary>
            单差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleDifferPositioner">
            <summary>
             短基线载波相位差分，单差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            短基线载波相位差分。
            </summary> 
            <param name="DataSourceContext">数据源</param>
            <param name="Option">解算模型，数据输入模型</param> 
        </member>
        <member name="T:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder">
            <summary>
            载波相位单差定位的矩阵生成器。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.#ctor(Gnsser.GnssProcessOption)" -->
        <member name="P:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.GetRowIndex(System.Int32,System.Int32)">
            <summary>
            获取行编号
            </summary>
            <param name="epochIndex"></param>
            <param name="satIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.Observation">
            <summary>
            平差的常数项，通常是观测值减去近似值
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SingleDifferNoRelevantMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleDifferNoRelevantParamNameBuilder">
            <summary>
            单差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferNoRelevantParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            单差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferNoRelevantParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleDifferNoRelevantPositioner">
            <summary>
             短基线载波相位差分，单差
             方法：以一个站作为参考站，另一个作为流动站（待算站)
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleDifferNoRelevantPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="T:Gnsser.Service.SourcePrnStatistics">
             <summary>
            统计卫星出勤率
             </summary>
        </member>
        <member name="M:Gnsser.Service.SourcePrnStatistics.#ctor(Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Data.Rinex.ISingleSiteObsStream,System.Collections.Generic.List{Gnsser.SatelliteType},System.Int32)">
            <summary>
            统计卫星出勤率 构造函数。
            </summary>
            <param name="obsFileA"></param>
            <param name="obsFileB"></param>
        </member>
        <member name="P:Gnsser.Service.SourcePrnStatistics.CommonPRNs">
            <summary>
            共有的卫星，该值可能与接收机能观测到的卫星不一致。应该采用本值。
            该列表还保存了卫星对应的顺序。
            </summary>
        </member>
        <member name="P:Gnsser.Service.SourcePrnStatistics.SatCount">
            <summary>
            指定卫星的数量
            </summary>
        </member>
        <member name="M:Gnsser.Service.SourcePrnStatistics.GetComonSatPRNs(Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Data.Rinex.ISingleSiteObsStream,System.Int32,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            卫星总出勤率，选择前五个利用。
            </summary>
            <param name="obsFileA"></param>
            <param name="obsFileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SourcePrnStatistics.SatAppearRatios(Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Data.Rinex.ISingleSiteObsStream,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
             数据预处理，卫星的选择条件：两个站观测历元中出现次数最多的卫星，卫星数量大于4.
             以卫星的出勤率为参考。 
            </summary>
            <param name="obsFileA"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.TwoSitePeriodDifferPositionResult">
            <summary>
            差分定位结果。
            </summary>
        </member>
        <member name="M:Gnsser.Service.TwoSitePeriodDifferPositionResult.#ctor(Gnsser.Domain.MultiSitePeriodInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.SatelliteNumber,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            以观测信息进行初始化
            </summary>
            <param name="Adjustment">平差</param>
            <param name="BasePrn">基准星</param>
            <param name="PeriodDifferInfo">区间差分信息</param>
            <param name="lastPppResult">最后结果</param>
        </member>
        <member name="P:Gnsser.Service.TwoSitePeriodDifferPositionResult.SatIntAmbiguities">
            <summary>
            卫星模糊度字典
            </summary>
        </member>
        <member name="P:Gnsser.Service.TwoSitePeriodDifferPositionResult.FloatAmbiguities">
            <summary>
            模糊度浮点解
            </summary>
        </member>
        <member name="M:Gnsser.Service.TwoSitePeriodDifferPositionResult.GetEstimatedBaseline">
            <summary>
            基线估值
            </summary>
        </member>
        <member name="M:Gnsser.Service.TwoSitePeriodDifferPositionResult.GetTabTitles">
            <summary>
            参数名称字符串 ParamNames
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TwoSitePeriodDifferPositionResult.GetTabValues">
            <summary>
            以制表符分开的值为 Adjustment.Corrected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TwoSitePeriodDifferPositionResult.ToString">
            <summary>
            差分定位结果。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder">
            <summary>
            多站多历元GNSS计算预留测试类。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            载波相位双差定位矩阵生成器，构造函数。
            </summary>  
            <param name="model">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.EpochObsCount">
            <summary>
            每个历元的方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.ObsCount">
            <summary>
            方程数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.Observation">
            <summary>
            平差的常数项，通常是观测值减去近似值
            </summary> 
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，双差的第一颗卫星相关，需要降权
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.BuildEpochDoubleQ(System.Int32)">
            <summary>
            每个历元的权逆阵，第一颗卫星多出现了一次，要对其降权。
            此处令对角线为2，其余为1。
            </summary>
            <param name="rowCol">行列数</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentMatrixBuilder.GetSatIndexExceptBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星在卫星参数中的编号。自动跳过基准星。
            </summary>
            <param name="prn"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodMultiSiteGnssExtentParamNameBuilder">
            <summary>
            多站多历元GNSS计算预留测试类参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            多站多历元GNSS计算预留测试类参数命名器
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentParamNameBuilder.Build">
            <summary>
            生成。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PeriodMultiSiteGnssExtentPositionResult">
            <summary>
            双差差分定位结果。具有模糊度。。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentPositionResult.#ctor(Gnsser.Domain.MultiSitePeriodInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.SatelliteNumber,Gnsser.GnssProcessOption,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            双差差分定位结果。具有模糊度。
            </summary>
            <param name="Adjustment"></param>
            <param name="BasePrn"></param>
            <param name="DifferPositionOption"></param>
            <param name="PeriodDifferInfo"></param>
            <param name="PositionResult"></param>
        </member>
        <member name="P:Gnsser.Service.PeriodMultiSiteGnssExtentPositionResult.FixedIntAmbiguities">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="T:Gnsser.Service.PeriodMultiSiteGnssExtentSolver">
            <summary>
             多站多历元GNSS计算预留测试类
            </summary>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            多站多历元GNSS计算预留测试类
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
        </member>
        <member name="M:Gnsser.Service.PeriodMultiSiteGnssExtentSolver.BuildResult">
            <summary>
            结果,固定解
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MotionMatrixBuilder">
            <summary>
            运动状态方程卡尔曼滤波
            ??状态体现在预测值？？？
            </summary>
        </member>
        <member name="P:Gnsser.Service.MotionMatrixBuilder.interval">
            <summary>
            时间间隔，单位：秒
            </summary>
        </member>
        <member name="P:Gnsser.Service.MotionMatrixBuilder.Coefficient">
            <summary>
            状态方程噪声向量Ω(k-1)的系数阵
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder">
            <summary>
            单站单历元GNSS计算预留测试类矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingeSiteGnssExtentMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingeSiteGnssExtentResult">
            <summary>
            单站单历元GNSS计算预留测试类
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,System.Int32)">
            <summary>
            单站单历元GNSS计算预留测试类
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="positioner">定位器</param>
            <param name="baseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.PppAR.SatelliteTypes">
            <summary>
            支持系统的类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.PppAR.dataSource">
            <summary>
            观测量数据源
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.Interval">
            <summary>
            将采样间隔读进来，以便于删除独立的数据
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.refsatellite">
            <summary>
            参考星
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.cleanEpochInformation">
            <summary>
            干净的EpochInformation
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.WL">
            <summary>
            每个历元的卫星宽巷
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.SDWL">
            <summary>
            相对于参考星的每个历元的单差UPD
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.sat_wl">
            <summary>
            每颗卫星的宽巷
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.sat_swdl">
            <summary>
            相对于参考星的每颗卫星的单差UPD
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.SDWLFCB">
            <summary>
            相对于参考星的UPD均值
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppAR.sat_sigma">
            <summary>
            每颗卫星的精度
            </summary>
        </member>
        <member name="P:Gnsser.Service.PppAR.Checkers">
            <summary>
            周跳探测
            </summary> 
        </member>
        <member name="M:Gnsser.Service.PppAR.CalculateSDWLFCBs">
            <summary>
            计算星间单差FCBs
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppAR.LoadNextOne">
            <summary>
            往后加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.viewSDWL">
            <summary>
            查看SDWL和UPD
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.getEpochNumber(System.Collections.Generic.Dictionary{Geo.Times.Time,System.Double})">
            <summary>
            获取每颗卫星的观测历元总数
            </summary>
            <param name="sat_swdl"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.getmax(System.Double[])">
            <summary>
            
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.getmax_order(System.Double[])">
            <summary>
            返回一个数组的最大值及其序号
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.getmin_order(System.Double[])">
            <summary>
            返回一个数组的最小值及其序号
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.getmin(System.Double[])">
            <summary>
            
            </summary>
            <returns></returns> 
        </member>
        <member name="M:Gnsser.Service.PppAR.clean">
            <summary>
            清除不连续的观测值，小于30min的观测弧度删除
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppAR.erfc(System.Double)">
            <summary>
            余误差函数
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppAR.fixrate">
            <summary>
            求解宽巷固定率
            </summary>
        </member>
        <member name="T:Gnsser.Service.BasePppPositionMatrixBuilder">
            <summary>
            基础的精密单点定位平差矩阵构建器
            </summary>
        </member>
        <member name="M:Gnsser.Service.BasePppPositionMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.BasePppPositionMatrixBuilder.ObsCount">
            <summary>
            卫星数量，观测值数量。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BasePppPositionMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.BasePppPositionMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.BasePppPositionMatrixBuilder.BuildObsNames">
            <summary>
            构建观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BasePppPositionMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingeSiteGnssExtentSolver">
            <summary>
            单站单历元GNSS计算预留测试类
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            单站单历元GNSS计算预留测试类
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingeSiteGnssExtentSolver.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePpp">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.DoFixAmbiguity(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            默认采用Lambda算法直接固定。
            如果是无电离层组合，则需要分别对待，不能直接固定，需要子类进行实现，//2018.11.06，czs， hmx
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.DoFixIonoFreeAmbiguity(Geo.Algorithm.Adjust.WeightedVector,System.Boolean)">
            <summary>
            执行无电离层双差模糊度固定
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <param name="isNetSolve">是否网解</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.GetIntMwDiffersBeweenSat(System.Boolean)">
            <summary>
            获取星间单差MW整数
            </summary>
            <param name="isNetSolve"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.ToStringVector(Geo.NameRmsedNumeralVector{Gnsser.SatelliteNumber})">
            <summary>
            解析名称
            </summary>
            <param name="satVector"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SatWideNarrowValueManager">
            <summary>
            卫星宽巷窄巷数据维护器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatWideNarrowValueManager.#ctor">
            <summary>
            卫星宽巷窄巷数据维护器
            </summary>
        </member>
        <member name="T:Gnsser.Service.WideNarrowValue">
            <summary>
            卫星宽窄项数值。
            </summary>
        </member>
        <member name="M:Gnsser.Service.WideNarrowValue.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.IsValid">
            <summary>
            是否都具有值。
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.FloatAmbiguityLength">
            <summary>
            星间单差浮点解模糊度长度，单位：米
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.FixedAmbiguityLength">
            <summary>
            星间单差固定解模糊度长度，单位：米
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.DifferOfAmbiguityLength">
            <summary>
            固定解与浮点解的偏差
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.NarrowLane">
            <summary>
            星间单差窄巷，单位：周
            </summary>
        </member>
        <member name="P:Gnsser.Service.WideNarrowValue.WideLane">
            <summary>
            星间单差宽巷，单位：周
            </summary>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppMatrixBuilder">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoFreePppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppOfTriFreq">
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是三频数据，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOfTriFreq.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOfTriFreq.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IonoFreePppOfTriFreqMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IonoFreePppParamNameBuilder">
            <summary>
            无电离层参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoFreePppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.ParamStateTransferModelManager">
            <summary>
            参数状态转移模型管理器。
            </summary>
        </member>
        <member name="M:Gnsser.Service.ParamStateTransferModelManager.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.Service.ParamStateTransferModelManager.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="M:Gnsser.Service.ParamStateTransferModelManager.Add(Gnsser.Models.BaseStateTransferModel)">
            <summary>
            添加
            </summary>
            <param name="stochasticModel"></param>
        </member>
        <member name="P:Gnsser.Service.ParamStateTransferModelManager.Item(Gnsser.SatelliteNumber)">
            <summary>
            检索
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.ParamStateTransferModelManager.Update(Gnsser.ISiteSatObsInfo)">
            <summary>
            更新所有的转移模型
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Gnsser.Service.ParamStateTransferModelManager.Create(System.String)">
            <summary>
            默认的状态转移模型生成
            </summary>
            <param name="key">参数名称</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PppPartAmbiResolution">
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppPartAmbiResolution.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位。
            </summary>
            <param name="navFile">星历数据源</param>
            <param name="model">解算模型，数据输入模型</param>
            <param name="clockFile">钟差数据源</param>
        </member>
        <member name="P:Gnsser.Service.PppPartAmbiResolution.IonoFreeAmbiguityMgr">
            <summary>
            无电离层模糊度管理器
            </summary>
        </member>
        <member name="F:Gnsser.Service.PppPartAmbiResolution.MwInfoDic">
            <summary>
            逐历元更新的，每颗卫星的MW平滑值
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppPartAmbiResolution.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            PPP 计算核心方法。 Kalmam滤波。
            观测量的顺序是先伪距观测量，后载波观测量，观测量的总数为卫星数量的两倍。
            参数数量为卫星数量加5,卫星数量对应各个模糊度，5为3个位置量xyz，1个接收机钟差量，1个对流程湿分量。
            </summary>
            <param name="recInfo">接收信息</param>
            <param name="option">解算选项</param> 
            <param name="lastPppResult">上次解算结果（用于 Kalman 滤波）,若为null则使用初始值计算</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PppResult">
            <summary>
            精密单点定位结果。与普通单点定位区别在于精密单点定位结果增加了模糊度参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,System.Int32,System.Boolean)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="positioner">定位器</param>
            <param name="baseParamCount">基础参数数量</param>
        </member>
        <member name="P:Gnsser.Service.PppResult.AmbiguityDic">
            <summary>
            模糊度字典.L1，L2组合整周模糊度等效的距离长度。
            </summary>
        </member>
        <member name="P:Gnsser.Service.PppResult.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppResult.HasAmbituityValue(Gnsser.SatelliteNumber)">
            <summary>
            是否具有指定卫星的模糊度浮点解
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetAmbiguityDistance(Gnsser.SatelliteNumber)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetFloatAmbiguityCycle(Gnsser.SatelliteNumber)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetAmbiguityDistance(System.String,Gnsser.SatelliteNumber)">
            <summary>
            获取指定测站和卫星的模糊度距离。
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetTabTitles">
            <summary>
            标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetTabValues">
            <summary>
            行模式数值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.PppResult.FixedParams">
            <summary>
            固定后的模糊度,单位周，值应该为整数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.PppResult.GetFixableVectorInUnit">
            <summary>
            获取模糊度参数估计结果。单位依然为米。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.Ppp_AR">
            <summary>
            模糊度固定，仅对GPS系统
            </summary>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.Process(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="paramNames">参数名称</param>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.fix_amb_WL(Gnsser.Domain.EpochInformation,System.Int32,System.Int32,System.Int32@)">
            <summary>
            fix wide-lane ambiguity
            </summary>
            <param name="receiverInfo"></param>
            <param name="satN1"></param>
            <param name="satN2"></param>
            <param name="NW"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.filter(System.Double[],System.Double[][],System.Double[][],System.Double[],System.Double[][],System.Double@)">
            <summary>
            update states with constraints
            </summary>
            <param name="x">states vector (n * 1)</param>
            <param name="P">covariance matrix of states (n * n)</param>
            <param name="H">transpose of design matrix (n*m)</param>
            <param name="v">innovation (measurement -model ) (m *1 )</param>
            <param name="R">covariance matrix of measurement error (m * m)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.sel_amb(System.Int32[],System.Int32[],System.Double[],System.Double[],System.Int32)">
            <summary>
            select fixed ambiguities
            </summary>
            <param name="sat1"></param>
            <param name="sat2"></param>
            <param name="N"></param>
            <param name="var"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.ComputeAverage_LC(Gnsser.Domain.EpochInformation)">
            <summary>
            average LC
            </summary>
            <param name="receiverInfo"></param>
        </member>
        <member name="P:Gnsser.Service.Ppp_AR.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.conffunc(System.Int32,System.Double,System.Double)">
            <summary>
            confidence function of integer ambiguity
            </summary>
            <param name="N"></param>
            <param name="B"></param>
            <param name="sig"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.var_LC(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            noise variance of LC(m)
            </summary>
            <param name="time"></param>
            <param name="j"></param>
            <param name="k"></param>
            <param name="sig"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.Ppp_AR.lam_LC(System.Int32,System.Int32,System.Int32)">
            <summary>
            wave length of LC (m)
            </summary>
            <param name="time"></param>
            <param name="j"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.Ppp_AR.ambc_t">
            <summary>
            ambiguity control type
            </summary>
        </member>
        <member name="F:Gnsser.Service.Ppp_AR.ambc">
            <summary>
            ambiguity control
            </summary>
        </member>
        <member name="P:Gnsser.Service.Ppp_AR.nfix">
            <summary>
            number of continuous fixes of ambiguity
            </summary>
        </member>
        <member name="P:Gnsser.Service.Ppp_AR.nx">
            <summary>
            number of float states
            </summary>
        </member>
        <member name="P:Gnsser.Service.Ppp_AR.na">
            <summary>
            number of fixed states
            </summary>
        </member>
        <member name="P:Gnsser.Service.Ppp_AR.tt">
            <summary>
            time difference between current and previous(s)
            </summary>
        </member>
        <member name="T:Gnsser.Service.UncombinedPpp">
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.UncombinedPpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.UncombinedPppParamNameBuilder">
            <summary>
            非差非组合参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.UncombinedPppMatrixBuilder">
            <summary>
            非组合精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.UncombinedPppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppMatrixBuilder.CopySameCell(System.Double[][],System.Int32,System.Int32,System.Int32)">
            <summary>
            设置相同的内容
            </summary>
            <param name="A"></param>
            <param name="sameColCount"></param>
            <param name="oldRow"></param>
            <param name="newRow"></param>
        </member>
        <member name="T:Gnsser.Service.UncombinedPppResult">
            <summary>
            精密单点定位结果。与普通单点定位区别在于精密单点定位结果增加了模糊度参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.UncombinedPppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="paramNames">参数名称</param>
        </member>
        <member name="P:Gnsser.Service.UncombinedPppResult.WetTropoFactor">
            <summary>
            天顶距延迟（zenith path delay，zpd)
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingleFreqPpp">
            <summary>
            精密单点定位。
            此处采用观测值残差向量计算。
            条件：必须是双频观测，且观测卫星数量大于5个。
            参考：Jan Kouba and Pierre Héroux. GPS Precise Point Positioning Using IGS Orbit Products[J].2000,sep
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            最简化的构造函数，可以多个定位器同时使用的参数，而不必多次读取
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPpp.BuildResult">
            <summary>
            生成结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqPppMatrixBuilder">
            <summary>
            非组合精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary> 
            <param name="option">解算选项</param> 
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppMatrixBuilder.BasicParamCount">
            <summary>
            基础变量数量，此处为4个 dx,dy,dz,dClk
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppMatrixBuilder.SysTypeCount">
            <summary>
            系统类型数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。当时多系统是，卫星排序为G E C
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqPppParamNameBuilder">
            <summary>
            非差非组合参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppParamNameBuilder.GetSysTimeRagneDifferName(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            以第一个系统为基准
            </summary>
            <param name="satTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleFreqPppResult">
            <summary>
            精密单点定位结果。与普通单点定位区别在于精密单点定位结果增加了模糊度参数。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            精密单点定位结果构造函数。
            </summary>
            <param name="receiverInfo">接收信息</param>
            <param name="Adjustment">平差</param>
            <param name="paramNameBuilder">参数名称</param>
        </member>
        <member name="M:Gnsser.Service.SingleFreqPppResult.GetAmbiguityDistace(Gnsser.SatelliteNumber)">
            <summary>
            计算的等效模糊度距离。
            如果有则返回，若无返回0。
            </summary>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SingleFreqPppResult.AmbiguityDic">
            <summary>
            模糊度字典.L1，L2组合整周模糊度等效的距离长度。每颗卫星按频率排列的模糊度，如L1、L2的模糊度
            </summary>
        </member>
        <member name="T:Gnsser.Service.DynamicRangeMatrixBuilder">
            <summary>
            伪距单点定位的矩阵生成器。适用于参数平差、卡尔曼滤波等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.DynamicRangeMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            伪距单点定位矩阵生成器，构造函数。
            </summary>
            <param name="model">解算选项</param>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.IonosphereBuilderManager">
            <summary>
            电离层延迟计算
            </summary>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.ParamNames">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="M:Gnsser.Service.DynamicRangeMatrixBuilder.BuildParamNames">
            <summary>
            名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            有多少颗卫星就有多少个观测量，只有4个参数，X,Y,Z和接收机钟差等效距离偏差。
            动态有8个参数,kyc
            </summary> 
        </member>
        <member name="M:Gnsser.Service.DynamicRangeMatrixBuilder.CreateInitAprioriParam">
            <summary>
            先验参数
            </summary> 
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.Observation">
            <summary>
            残差
            </summary>
        </member>
        <member name="M:Gnsser.Service.DynamicRangeMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.FreeVector">
            <summary>
             自由项D，B0等等。则参数平差中，满足满足 l = L - (AX0 + D).
             此处，FreeVector = (AX0 + D)。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DynamicRangeMatrixBuilder.Transfer">
            <summary>
            kyc:为动态定位改转移矩阵及相应权
            </summary>
        </member>
        <member name="T:Gnsser.Service.DynamicRangePositioner">
            <summary>
            动态伪距定位
            </summary>
        </member>
        <member name="M:Gnsser.Service.DynamicRangePositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            动态伪距定位
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.DynamicRangePositioner.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
             迭代求解      
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DynamicRangePositioner.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            由于滤波收敛较慢，通常初始坐标不准的情况下适合采用历元独立计算。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DynamicRangePositioner.BuildResult">
            <summary>
            结果生成
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSysRangeParamNameBuilder">
            <summary>
            多系统伪距定位参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangeParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            多系统伪距定位参数命名器 构造函数
            </summary>
            <param name="option"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Service.MultiSysRangeParamNameBuilder.Build" -->
        <member name="M:Gnsser.Service.MultiSysRangeParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSysRangePositioner">
            <summary>
            多系统伪距定位 
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangePositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            多系统伪距定位
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangePositioner.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
             迭代求解      
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangePositioner.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            由于滤波收敛较慢，通常初始坐标不准的情况下适合采用历元独立计算。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangePositioner.BuildResult">
            <summary>
            结果生成
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSysRangeMatrixBuilder">
            <summary>
            多系统伪距单点定位，顾及系统时间偏差。
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangeMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            多系统伪距单点定位，顾及系统时间偏差，构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.IonosphereBuilderManager">
            <summary>
            电离层延迟计算
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            有多少颗卫星就有多少个观测量，只有4个参数，X,Y,Z和接收机钟差等效距离偏差。
            </summary> 
        </member>
        <member name="M:Gnsser.Service.MultiSysRangeMatrixBuilder.CreateInitAprioriParam">
            <summary>
            先验参数
            </summary> 
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.Observation">
            <summary>
            残差
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysRangeMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.MultiSysRangeMatrixBuilder.FreeVector">
            <summary>
             自由项D，B0等等。则参数平差中，满足满足 l = L - (AX0 + D).
             此处，FreeVector = (AX0 + D)。
            </summary>
        </member>
        <member name="T:Gnsser.Service.SimpleRangeMatrixBuilder">
            <summary>
            最简单的4参数伪距单点定位的矩阵生成器。
            本类主要保证能出一个定位结果（即使数据不是很理想的情况下，如非双频）。
            不考虑伪距平滑，系统时间偏差等。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleRangeMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            伪距单点定位矩阵生成器，构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.ParamNames">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleRangeMatrixBuilder.BuildParamNames">
            <summary>
            名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.Coefficient">
            <summary>
            误差方程系数阵，设计矩阵。
            有多少颗卫星就有多少个观测量，只有4个参数，X,Y,Z和接收机钟差等效距离偏差。
            </summary> 
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.Observation">
            <summary>
            残差
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleRangeMatrixBuilder.FreeVector">
            <summary>
             自由项D，B0等等。则参数平差中，满足满足 l = L - (AX0 + D).
             此处，FreeVector = (AX0 + D)。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleRangeMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SimpleRangePositioner">
            <summary>
            简单伪距单点定位。只需要星历文件和观测文件，不需要测站初始值的快速伪距定位计算。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleRangePositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            简单伪距单点定位
            </summary>
            <param name="DataSourceContext"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.Service.SimpleRangePositioner.Complete">
            <summary>
             迭代求解     
             误差方程：
             V = coeffOfParams\hat X + D - ObsMinusApriori
             令
             freeTerm = coeffOfParams{X_0} + D - ObsMinusApriori
             则
             V = coeffOfParams\delta \hat X + freeTerm
             V = coeffOfParams\delta \hat X + coeffOfParams{X_0} + D - ObsMinusApriori
             
            伪距单点定位误差方程：
            v = ex 站deltaX + ey 站deltaY + ez 站deltaZ - b + 伪距 - F
            F = ex 站星deltaX0 + ey 站星deltaY0 + ez 站星deltaZ0 - 光速 * 卫星钟差
            其中：
            伪距为观测值 ObsMinusApriori
            站星delta 为估计值
             光速 * 卫星钟差 为常量 D
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SimpleRangePositioner.CaculateIndependent(Gnsser.Domain.EpochInformation)">
            <summary>
            由于滤波收敛较慢，通常初始坐标不准的情况下适合采用历元独立计算。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SimpleRangePositioner.BuildResult">
            <summary>
            结果生成
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SimpleRangePositioner.GetApproxPosition(Gnsser.DataSourceContext)">
            <summary>
            快速计算一个坐标。自动重置数据流。
            </summary>
            <param name="DataSourceContext"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SiteFixedIonoFreePpp">
             <summary>
            固定参考站的精密单点定位
             </summary>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            固定参考站的精密单点定位
            </summary>
            <param name="DataSourceContext">观测数据源</param>
            <param name="PositionOption">解算模型</param>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.DoFixAmbiguity(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            默认采用Lambda算法直接固定。
            如果是无电离层组合，则需要分别对待，不能直接固定，需要子类进行实现，//2018.11.06，czs， hmx
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.DoFixIonoFreeAmbiguity(Geo.Algorithm.Adjust.WeightedVector,System.Boolean)">
            <summary>
            执行无电离层双差模糊度固定
            </summary>
            <param name="rawFloatAmbiCycles"></param>
            <param name="isNetSolve">是否网解</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.GetIntMwDiffersBeweenSat(System.Boolean)">
            <summary>
            获取星间单差MW整数
            </summary>
            <param name="isNetSolve"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.ToStringVector(Geo.NameRmsedNumeralVector{Gnsser.SatelliteNumber})">
            <summary>
            解析名称
            </summary>
            <param name="satVector"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.CaculateKalmanFilter(Gnsser.Domain.EpochInformation,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            滤波计算
            </summary>
            <param name="epochInfo"></param>
            <param name="lastResult"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePpp.BuildResult">
            <summary>
            生成结果
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SiteFixedIonoFreePppMatrixBuilder">
            <summary>
            精密单点定位矩阵生成类。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePppMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            先构造，再设置历元值。
            </summary>
            <param name="option">解算选项</param> 
        </member>
        <member name="T:Gnsser.Service.SiteFixedIonoFreePppParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePppParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePppParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteFixedIonoFreePppParamNameBuilder.GetParamName(Gnsser.SatelliteNumber)">
            <summary>
            生成卫星编号相关的参数名称
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.BaseGnssResult`1">
            <summary>
             基于模板的抽象GNSS处理结果。
            </summary>
            <typeparam name="TMaterial"></typeparam>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult`1.#ctor(`0,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,System.Boolean)">
            <summary>
            GNSS结果构造函数
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="NameBuilder">参数生成器</param>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult`1.MaterialObj">
            <summary>
            观测信息,或多站的基准星。
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult`1.HasUnstablePrn(System.String)">
            <summary>
            解析名字中的PRN，并判断是否周跳。
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.BaseGnssResult">
            <summary>
            通用GNSS平差结果。对平差结果进行加工整理。
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.#ctor(Gnsser.ISiteSatObsInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            构造函数
            </summary>
            <param name="Material">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="NameBuilder">参数名称</param>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.Material">
            <summary>
            数据源实体
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.BasePrn">
            <summary>
            基准卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.NameBuilder">
            <summary>
            参数名称生成器
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.EnabledPrns">
            <summary>
            卫星编号 EnabledPrns
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.ReceiverTime">
            <summary>
            GPS 时间
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.HasEstimatedXyz">
            <summary>
            是否具有坐标估值，是否进行过定位计算
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.EstimatedXyz">
            <summary>
            接收机位置,最开始是估值，后逐步精化，即始终是当前最精确位置。此坐标直接绑定历元信息。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.XyzCorrection">
            <summary>
            直接平差估值
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.RcvClkErrDistance">
            <summary>
            接收机钟差等效距离偏差.
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.RcvClkCorrection">
            <summary>
            接收机钟差改正数， //钟差到改正数，需要转换为相反数 // 2018.06.08, czs, HMX
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.RcvClkError">
            <summary>
            接收机钟差
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.GeoCoord">
            <summary>
            BLH,大地坐标系。
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.CovaOfFirstThree">
            <summary>
            前三个参数（坐标）的协方差
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.CovaedEstXyz">
            <summary>
            具有方差的计算值
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.EstimatedXyzRms">
            <summary>
            XYZ 的均方根/中误差。此处有错！
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.DilutionOfPrecision">
            <summary>
            DOP值
            </summary>
        </member>
        <member name="P:Gnsser.Service.BaseGnssResult.EstRmsedXYZ">
            <summary>
            估值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.UpdateGeoCoordWithXyz">
            <summary>
            用空间直角坐标更新大地坐标。
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.TrySetCommonParamValues(Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            设置常见的变量。
            </summary>
            <param name="Adjustment"></param>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetTabTitles">
            <summary>
            显示表题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetTabValues">
            <summary>
            显示内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetParamNameString">
            <summary>
            参数名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetEstimatedVectorString">
            <summary>
            获取参数改正数的字符串。与先验值之差。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetParamStdVectorString">
            <summary>
            参数标准差字符串。包括（X、Y、Z、测站钟差、对流程湿延迟、N个模糊度）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.GetApprioriVectorString">
            <summary>
            获取先验值向量字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.ToShortTabTitles">
            <summary>
            简短表题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.ToShortTabValue">
            <summary>
            简短内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.BaseGnssResult.ToString">
            <summary>
            参数包括（X、Y、Z、测站钟差、对流程湿延迟、N个模糊度）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.BaseSingleSatGnssResult">
            <summary>
            单星计算结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseSingleSatGnssResult.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseSingleSatGnssResult.#ctor(Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数
            </summary>
            <param name="Material">历元信息</param>
            <param name="Adjustment">平差信息</param>
        </member>
        <member name="T:Gnsser.Service.BaseSinglePeriodSatGnssResult">
            <summary>
            单星多历元计算结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseSinglePeriodSatGnssResult.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.BaseSinglePeriodSatGnssResult.#ctor(Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Domain.PeriodSatellite)">
            <summary>
            构造函数
            </summary>
            <param name="Material">历元信息</param>
            <param name="Adjustment">平差信息</param>
        </member>
        <member name="T:Gnsser.Service.SimpleGnssResult`1">
            <summary>
            简单GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleGnssResult`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleGnssResult`1.#ctor(Geo.Algorithm.Adjust.AdjustResultMatrix,`0)">
            <summary>
            构造函数
            </summary>
            <param name="Material">历元信息</param>
            <param name="Adjustment">平差信息</param>
        </member>
        <member name="M:Gnsser.Service.SimpleGnssResult`1.#ctor(`0,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            构造函数
            </summary>
            <param name="Material">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="NameBuilder">参数名称</param>
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult`1.Material">
            <summary>
            数据源实体
            </summary>
        </member>
        <member name="T:Gnsser.Service.SimpleGnssResult">
            <summary>
            简单GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.SimpleGnssResult.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Service.SimpleGnssResult.#ctor(Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            构造函数
            </summary>
            <param name="Adjustment">平差结果</param> 
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult.ParamAccuracyInfos">
            <summary>
            历元参数精度估计
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult.HasParamAccuracyInfos">
            <summary>
            是否具有历元参数精度估计
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult.ReceiverTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Service.SimpleGnssResult.ParamNames">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="T:Gnsser.Service.DopSolver">
            <summary>
            计算DOP值
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopSolver.#ctor(Gnsser.Service.IEphemerisService,System.Double,System.String,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatWeightTable,Geo.TimeLooper,Geo.GeoGridLooper)">
            <summary>
            构造函数
            </summary>
            <param name="EphemerisService"></param>
            <param name="CutOffAngle"></param>
            <param name="EnabledPrns"></param>
            <param name="SatWeights"></param>
            <param name="outDirectory"></param>
            <param name="TimeLooper"></param>
            <param name="GeoGridLooper"></param>
        </member>
        <member name="P:Gnsser.Service.DopSolver.MaxDopThreshold">
            <summary>
            最大阈值限制
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.EphemerisService">
            <summary>
            星历服务
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.EnabledPrns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.SatWeights">
            <summary>
            卫星权值
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.IsSimpleModel">
            <summary>
            是否采用简略模式，即不输出经纬度，空数据采用N替代。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.FileNamePrefix">
            <summary>
            名称前缀。
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.CutOffAngle">
            <summary>
            高度截止角
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.GeoGridLooper">
            <summary>
            地理网格遍历器
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopSolver.TimeLooper">
            <summary>
            时间遍历器
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopSolver.Solve">
            <summary>
            顺序计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopSolver.SolveAsync">
            <summary>
            并行计算
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopSolver.Build(Gnsser.Service.DopCaculator,Geo.ObjectTableStorage,Geo.Times.Time,Geo.Coordinates.GeoCoord,System.Boolean)">
            <summary>
            构建。
            </summary>
            <param name="DopCaculator"></param>
            <param name="table"></param>
            <param name="Time"></param>
            <param name="geoCoord"></param>
        </member>
        <member name="T:Gnsser.Service.DopCaculator">
            <summary>
            计算具体的某次DOP。
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.#ctor(Gnsser.Service.IEphemerisService,System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Double,Gnsser.SatWeightTable)">
            <summary>
            构造函数
            </summary>
            <param name="EphemerisService"></param>
            <param name="Prns"></param>
            <param name="CutOffAngle"></param>
            <param name="SatWeights"></param>
        </member>
        <member name="P:Gnsser.Service.DopCaculator.EphemerisService">
             <summary>
            星历服务器
             </summary>
        </member>
        <member name="P:Gnsser.Service.DopCaculator.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopCaculator.CutOffAngle">
            <summary>
            高度截止角
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopCaculator.SatWeights">
            <summary>
            卫星加权
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopCaculator.Prns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.Calculate(Geo.Coordinates.XYZ,Geo.Times.Time)">
            <summary>
            计算
            </summary>
            <param name="xyz"></param>
            <param name="Time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.Calculate(Geo.Coordinates.GeoCoord,Geo.Times.Time)">
            <summary>
            计算
            </summary>
            <param name="geoCoord"></param>
            <param name="Time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.GetDopValue(Geo.Coordinates.XYZ,System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            计算
            </summary>
            <param name="xyz"></param>
            <param name="sats"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.BiuldA(Geo.Coordinates.XYZ,System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            构建A矩阵
            </summary>
            <param name="stationPos"></param>
            <param name="sats"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.DopCaculator.BiuldWeight(System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            权阵获取，如果无提供器，则采用默认 1.
            </summary>
            <param name="sats"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.DopValue">
            <summary>
            DOP 数值
            </summary>
        </member>
        <member name="M:Gnsser.Service.DopValue.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.StationXYZ">
            <summary>
            测站坐标
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.StationGeoCoord">
            <summary>
            测站大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.SatCount">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.GDop">
            <summary>
            空间精度衰减因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.PDop">
            <summary>
            空间精度衰减因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.HDop">
            <summary>
            水平经度因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.VDop">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gnsser.Service.DopValue.TDop">
            <summary>
            时间精度因子
            </summary>
        </member>
        <member name="T:Gnsser.Service.DilutionOfPrecision">
            <summary>
            衰减因子
            </summary>
        </member>
        <member name="M:Gnsser.Service.DilutionOfPrecision.#ctor(Gnsser.Domain.EpochInformation)">
            <summary>
            计算观测值的DOP值。
            </summary>
            <param name="epochinfo">位置估值</param>
        </member>
        <member name="P:Gnsser.Service.DilutionOfPrecision.GDOP">
            <summary>
            几何精度因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DilutionOfPrecision.PDOP">
            <summary>
            位置精度衰减因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DilutionOfPrecision.HDOP">
            <summary>
            水平精度衰减因子
            </summary>
        </member>
        <member name="P:Gnsser.Service.DilutionOfPrecision.VDOP">
            <summary>
            垂直精度衰减银子
            </summary>
        </member>
        <member name="T:Gnsser.Service.ResultSinexBuillder">
            <summary>
            伪距单点定位结果。
            </summary>
        </member>
        <member name="M:Gnsser.Service.ResultSinexBuillder.Build(Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            单点定位结果转化为Sinex文件
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSiteGnssResult">
            <summary>
            多站单历元GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSiteGnssResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            构造函数
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="T:Gnsser.Service.MultiSitePeriodGnssResult">
            <summary>
            多站多历元GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSitePeriodGnssResult.#ctor(Gnsser.Domain.MultiSitePeriodInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            单站ＧＮＳＳ结果
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="T:Gnsser.Service.RangePointPositionResult">
            <summary>
            伪距单点定位结果。
            </summary>
        </member>
        <member name="M:Gnsser.Service.RangePointPositionResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            以观测信息进行初始化
            </summary>
            <param name="epochInfo">历元观测信息</param>
            <param name="PointPositionType">单点定位类型</param>
        </member>
        <member name="M:Gnsser.Service.RangePointPositionResult.ToString">
            <summary>
            精度衰减因子。
            </summary>
        </member>
        <member name="T:Gnsser.Service.SingleSiteGnssResult">
            <summary>
            单站单历元GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.#ctor(Gnsser.Domain.EpochInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,System.Boolean)">
            <summary>
            单站ＧＮＳＳ结果
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="P:Gnsser.Service.SingleSiteGnssResult.SiteInfo">
            <summary>
            测站固定信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.SingleSiteGnssResult.ApproxXyz">
            <summary>
            初始值
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.TrySetCommonParamValues(Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            设置常见的变量。
            </summary>
            <param name="Adjustment"></param>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.ToString">
            <summary>
            显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.ToShortTabValue">
            <summary>
            以简短字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.ToShortTabTitles">
            <summary>
            以简短标题显示，标准的测站坐标文件！！
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.GetTabTitles">
            <summary>
            参数名称字符串 ParamNames
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSiteGnssResult.GetTabValues">
            <summary>
            以制表符分开的值为 Adjustment.Corrected
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSitePeriodInfoGnssResult">
            <summary>
            单站多历元GNSS结果
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSitePeriodInfoGnssResult.#ctor(Gnsser.Domain.PeriodInformation,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            单站ＧＮＳＳ结果
            </summary>
            <param name="epochInfo"></param>
            <param name="adjust"></param>
            <param name="nameBuilder"></param>
        </member>
        <member name="T:Gnsser.Service.ClockParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.ClockParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.ClockParamNameBuilder.EpochInfos">
            <summary>
            列表
            </summary>
        </member>
        <member name="P:Gnsser.Service.ClockParamNameBuilder.SatelliteNumbers">
            <summary>
            卫星
            </summary>
        </member>
        <member name="M:Gnsser.Service.ClockParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EpochDifferClockParamNameBuilder">
            <summary>
            双差参数命名器
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDifferClockParamNameBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDifferClockParamNameBuilder.PeriodInfos">
            <summary>
            列表
            </summary>
        </member>
        <member name="P:Gnsser.Service.EpochDifferClockParamNameBuilder.SatelliteNumbers">
            <summary>
            卫星
            </summary>
        </member>
        <member name="M:Gnsser.Service.EpochDifferClockParamNameBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.PppMatrixHelper">
            <summary>
            首次方差
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Service.PppMatrixHelper.GetInitTropAugCombinedAprioriParam(System.Int32,System.Int32,Geo.Coordinates.XYZ,System.Boolean)" -->
        <member name="M:Gnsser.Service.PppMatrixHelper.GetInitDoubleAprioriParam(System.Int32,System.Int32,Geo.Coordinates.XYZ)">
            <summary>
            构建一个首次方差参数顺序：xyz 
            </summary>
            <param name="rowCol">行列数量</param>
            <param name="baseParamCount">基础参数数量</param>
            <param name="xyzRms">初始坐标RMS</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SiteSatPeriodDataService">
            <summary>
            测站时段观测数据服务
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.#ctor(System.Double)">
            <summary>
            测站卫星时段服务
            </summary>
            <param name="MaxGapSecond"></param>
        </member>
        <member name="P:Gnsser.Service.SiteSatPeriodDataService.MaxGapSecond">
            <summary>
            允许的最大断裂跨度
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.SetMaxGapSecond(System.Double)">
            <summary>
            设置断裂时间单位秒
            </summary>
            <param name="MaxGapSecond"></param>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.GetMwCycleDifferValueBeweenSat(Gnsser.Domain.EpochInformation,Gnsser.SatelliteNumber)">
            <summary>
            获取 MW 单差值
            </summary> 
            <param name="epochInfo"></param>
            <param name="basePrn"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.GetMwCycleDoubleDifferValue(Gnsser.Domain.MultiSiteEpochInfo,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            获取MW双差值，名称与双差值匹配。
            </summary> 
            <param name="sites"></param>
            <param name="basePrn"></param>
            <param name="isNetSolver">是否为网解</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.GetMwCycleDoubleDifferValue(Geo.Times.Time,System.String,System.String,Gnsser.SatelliteNumber)">
            <summary>
            获取MW双差值
            </summary>
            <param name="time"></param>
            <param name="rovSiteName"></param>
            <param name="refSiteName"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteSatPeriodDataService.BuildTableObjectManager(System.String)">
            <summary>
            构建输出表格，主要用于测试。
            </summary>
            <param name="OutputDirectory"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SatParamPeriodData">
            <summary>
            时段观测数据服务
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatParamPeriodData.LastRegistTime">
            <summary>
            最后注册时间
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatParamPeriodData.MaxGapSecond">
            <summary>
            允许的最大断裂跨度
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatParamPeriodData.Regist(Gnsser.Domain.EpochInformation)">
            <summary>
            注册时段
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.Service.SatParamPeriodData.GetDifferMwCycle(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取时段MW平均值
            </summary>
            <param name="time"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SatParamPeriodData.GetAverageMwCycle(Geo.Times.Time)">
            <summary>
            获取时段MW平均值
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SatParamPeriodData.GetAverageMwCycle(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取时段MW平均值
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SatParamPeriodData.GetWindowData(Gnsser.SatelliteNumber,System.String,Geo.Times.Time)">
            <summary>
            窗口数据
            </summary>
            <param name="prn"></param>
            <param name="paramName"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.ParamPeriodData">
            <summary>
            时段数据
            </summary> 
        </member>
        <member name="M:Gnsser.Service.ParamPeriodData.#ctor(System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="MaxGapSecond"></param>
        </member>
        <member name="P:Gnsser.Service.ParamPeriodData.MaxDiffer">
            <summary>
            允许最大偏差
            </summary>
        </member>
        <member name="M:Gnsser.Service.ParamPeriodData.Regist(System.String,Geo.Times.Time,System.Double,System.Boolean)">
            <summary>
            注册数据
            </summary>
            <param name="paramName"></param>
            <param name="time"></param>
            <param name="val"></param>
            <param name="isBreakTime">是否重新记录，如发生了周跳</param>
        </member>
        <member name="M:Gnsser.Service.ParamPeriodData.GetWindowData(System.String,Geo.Times.Time)">
            <summary>
            窗口数据
            </summary>
            <param name="paramName"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.ParamPeriodData.GetWindowData(Geo.Times.TimePeriod)">
            <summary>
            提取绑定的窗口数据
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SiteSatAppearenceService">
            <summary>
            测站卫星时段服务
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteSatAppearenceService.#ctor(System.Double)">
            <summary>
            测站卫星时段服务
            </summary>
            <param name="MaxGapSecond"></param>
        </member>
        <member name="P:Gnsser.Service.SiteSatAppearenceService.MaxGapSecond">
            <summary>
            允许的最大断裂跨度
            </summary>
        </member>
        <member name="M:Gnsser.Service.SiteSatAppearenceService.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SiteSatAppearenceService.SetMaxGapSecond(System.Double)">
            <summary>
            设置断裂时间单位秒
            </summary>
            <param name="MaxGapSecond"></param>
        </member>
        <member name="T:Gnsser.Service.SatAppearenceService">
            <summary>
            卫星断续性时段服务
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatAppearenceService.LastRegistTime">
            <summary>
            最后注册时间
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatAppearenceService.Regist(Gnsser.Domain.EpochInformation)">
            <summary>
            注册时段
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:Gnsser.Service.FcbOfUpdFile">
            <summary>
            宽窄项FCB文件，相位未校准延迟的小数部分(Fraction Code Bias of Uncalibrated phase delay)
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="F:Gnsser.Service.FcbOfUpdFile.TotalGpsSatCount">
            <summary>
            支持GPS卫星数量
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.ToString">
            <summary>
            显示
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.TimePeriod">
            <summary>
            支持时段
            </summary>
        </member>
        <member name="F:Gnsser.Service.FcbOfUpdFile.NarrowSpanSecond">
            <summary>
            窄巷认为小于此为相同。
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.WideLanes">
            <summary>
            宽巷集合
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.NarrowLanes">
            <summary>
            窄巷集合
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.Count">
            <summary>
            总数。含宽和窄巷。
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.WCount">
            <summary>
            总数。宽巷。
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdFile.NCount">
            <summary>
            总数。窄巷。
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.ToFile(Gnsser.SatelliteNumber)">
            <summary>
            转换基准
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.GetBsdOfWideLane(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            BSD
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.GetBsdOfNarrowLane(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            BSD
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.GetNarrowLane(Geo.Times.Time)">
            <summary>
            窄巷查找最近的一个
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.GetWideLane(Geo.Times.Time)">
            <summary>
            宽巷一日发布一个
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.Add(Gnsser.Service.FcbOfUpd)">
            <summary>
            添加一个。
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdFile.Get(Geo.Times.Time)">
            <summary>
            返回第一个匹配上的。先宽巷，再窄巷。
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="T:Gnsser.Service.IonoHarmonicFileProvider">
            <summary>
            电离层服务提供者
            </summary> 
        </member>
        <member name="M:Gnsser.Service.IonoHarmonicFileProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            电离层服务提供者
            </summary>
        </member>
        <member name="M:Gnsser.Service.IonoHarmonicFileProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IonoHarmonicFileProvider.LoadFile(System.String)">
            <summary>
            加载文件
            </summary>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.FcbOfUpd">
            <summary>
            宽巷窄巷的小数部分，相位未校准延迟的小数部分(Fraction Code Bias of Uncalibrated phase delay)
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time,System.Boolean)">
            <summary>
            默认构造函数
            </summary>
            <param name="basePrn"></param>
            <param name="epoch"></param>
            <param name="isWideOrNarrow"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time,System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,Geo.RmsedNumeral},System.Boolean)">
            <summary>
            字典初始化
            </summary>
            <param name="basePrn"></param>
            <param name="epoch"></param>
            <param name="dic"></param>
            <param name="isWideOrNarrow"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.#ctor(Gnsser.SatelliteNumber,Gnsser.WideLaneBiasItem)">
            <summary>
            以IGS宽巷初始化
            </summary>
            <param name="data"></param>
            <param name="basePrn"></param>
        </member>
        <member name="F:Gnsser.Service.FcbOfUpd.failedValue">
            <summary>
            若失败，则返回此。
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.Epoch">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.BasePrn">
            <summary>
            基准星
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.WnMarker">
            <summary>
            标识，W N 宽巷还是窄巷
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.Count">
            <summary>
            卫星或产品数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.PrnsString">
            <summary>
            以逗号分隔的卫星序列
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.Prns">
            <summary>
            解析自 PrnsString
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.Get(Gnsser.SatelliteNumber)">
            <summary>
            获取，失败则以 FailedValue 表示。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.DataCount">
            <summary>
            数据数量。
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpd.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.GetBsdValue(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            获取当前的BSD值
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.ConvertTo(Gnsser.SatelliteNumber)">
            <summary>
            转换到另一个基准卫星。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpd.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            如果获取失败，则返回 FailedValue 。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.FcbOfUpdWriter">
            <summary>
            宽巷窄巷格式写入，相位未校准延迟的小数部分(Fraction Code Bias of Uncalibrated phase delay)
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdWriter.EntityToLine(Gnsser.Service.FcbOfUpd)">
             <summary>
               "Epoch", "BasePrn", "Count", "WnMarker",
                    "G01", "G02",  "G03", "G04",  "G05", "G06",  "G07", "G08",  "G09",
            "G10",  "G11", "G12",  "G13", "G14",  "G15", "G16",  "G17", "G18",  "G19",
            "G20",  "G21", "G22",  "G23", "G24",  "G25", "G26",  "G27", "G28",  "G29",
            "G30",  "G31", "G32",
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdWriter.WriteEpochProducts(System.Collections.Generic.List{Gnsser.Service.FcbOfUpd},System.String)">
            <summary>
            写入临时目录
            </summary>
            <param name="list"></param>
            <param name="name"></param>
        </member>
        <member name="T:Gnsser.Service.FcbOfUpdReader">
            <summary>
            宽巷窄巷格式读取，相位未校准延迟的小数部分(Fraction Code Bias of Uncalibrated phase delay)
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdReader.ReadToFile">
            <summary>
            读取为文件
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.FcbOfUpdService">
            <summary>
            通用宽巷窄巷服务
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.#ctor(System.String)">
             <summary>
            相位未校准延迟的小数部分(Fraction Code Bias of Uncalibrated phase delay)
             </summary>
             <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdService.FcbFile">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdService.FilePath">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.FcbOfUpdService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.GetBsdOfNarrowLane(System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            BSD
            </summary>
            <param name="prns"></param>
            <param name="basePrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.GetBsdOfWideLane(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            BSD
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.GetBsdOfNarrowLane(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            BSD
            </summary>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.GetWideLane(Geo.Times.Time)">
            <summary>
            宽巷产品
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.FcbOfUpdService.GetNarrowLane(Geo.Times.Time)">
            <summary>
            窄巷产品
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.GridIonoServiceProvider">
            <summary>
            电离层服务提供者
            </summary> 
        </member>
        <member name="M:Gnsser.Service.GridIonoServiceProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            电离层服务提供者
            </summary>
        </member>
        <member name="M:Gnsser.Service.GridIonoServiceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.GridIonoServiceProvider.LoadFile(System.String)">
            <summary>
            加载文件
            </summary>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SatEpochAmbiguity">
            <summary>
            历元模糊度参数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatEpochAmbiguity.#ctor(System.String,System.Int32,Geo.Times.Time)">
            <summary>
            模糊度参数 的构造函数。
            </summary>
            <param name="ParamName">参数名称</param>
            <param name="Ambiguity">模糊度</param>
            <param name="Time">时刻</param>
        </member>
        <member name="P:Gnsser.Service.SatEpochAmbiguity.ParamName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatEpochAmbiguity.Time">
            <summary>
            时刻
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatEpochAmbiguity.Ambiguity">
            <summary>
            模糊度
            </summary>
        </member>
        <member name="T:Gnsser.Service.ISatTypeTimeBasedService`1">
            <summary>
            获取服务。基于卫星和指定时刻的服务，如钟差、星历等。
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.ISatTypeTimeBasedService`1.Get(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            获取服务。
            </summary>
            <param name="satelliteType">钟或其载体的名称，如卫星编号</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.ITimeBasedService`1">
            <summary>
            获取服务。基于卫星和指定时刻的服务，如钟差、星历等。
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.ITimeBasedService`1.Get(Geo.Times.Time)">
            <summary>
            获取服务。
            </summary>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiFileClockService">
            <summary>
            基于多文件的钟差服务类
            </summary> 
        </member>
        <member name="M:Gnsser.Service.MultiFileClockService.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiFileClockService.ClockServices">
            <summary>
            服务列表
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiFileClockService.Get(System.String,Geo.Times.Time)">
            <summary>
            逐个判断读取，失败返回null
            </summary>
            <param name="nameOrPrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiFileClockService.ToString">
            <summary>
            打印输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SatBasedMultiSysDailyService`2">
            <summary>
             基于卫星编号和时间的服务。
            </summary>
            <typeparam name="TService"></typeparam>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.SatBasedMultiSysDailyService`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatBasedMultiSysDailyService`2.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,Gnsser.Service.TimeIntervalService{`0}},System.Boolean,System.Int32)">
            <summary>
            狗战术
            </summary>
            <param name="dic"></param>
            <param name="TimeIntervalSeconds"></param>
        </member>
        <member name="P:Gnsser.Service.SatBasedMultiSysDailyService`2.IsSwitchWhenEphemerisNull">
            <summary>
            获取失败后是否切换当前星历
            </summary>
        </member>
        <member name="P:Gnsser.Service.SatBasedMultiSysDailyService`2.NulledServices">
            <summary>
            试图获取过，但是未成功的服务。不必再次尝试获取了。
            </summary>
        </member>
        <member name="M:Gnsser.Service.SatBasedMultiSysDailyService`2.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取服务。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SatBasedMultiSysDailyService`2.LoopGetAndSetCurrentService(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            如果失败则返回 null。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSysDailyService`1">
            <summary>
            多系统按天服务
            </summary>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:Gnsser.Service.MultiSysDailyService`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysDailyService`1.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,Gnsser.Service.TimeIntervalService{`0}},System.Int32)">
            <summary>
            带数据的构造函数
            </summary>
            <param name="dic"></param>
        </member>
        <member name="P:Gnsser.Service.MultiSysDailyService`1.CurrentService">
            <summary>
            当前的服务。如果当前任务失败，则重新查找服务。
            </summary>
        </member>
        <member name="P:Gnsser.Service.MultiSysDailyService`1.TimeIntervalSeconds">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysDailyService`1.GetService">
            <summary>
            获取服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiSysDailyService`1.GetMayAvailableServices(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            获取可能可用的日服务列表。服务将从中选取。
            </summary>
            <param name="SatelliteType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.TimeIntervalService`1">
            <summary>
            按整型时间组织的GNSS服务，只提供单系统服务。
            </summary>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="TimeIntervalSeconds"></param>
        </member>
        <member name="P:Gnsser.Service.TimeIntervalService`1.TimeIntervalSeconds">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.Service.TimeIntervalService`1.CurrentService">
            <summary>
            当前服务
            </summary>
        </member>
        <member name="P:Gnsser.Service.TimeIntervalService`1.TimePeriod">
            <summary>
            服务时段,计算得来，不保证连续性。
            </summary>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.Add(Geo.Times.Time,System.Collections.Generic.List{`0})">
            <summary>
            添加一个
            </summary>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.GetService(Geo.Times.Time)">
            <summary>
            获取第一个服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.GetServices(Geo.Times.Time)">
            <summary>
            获取备选服务列表
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.IsAvailable(Geo.Times.Time)">
            <summary>
            简单判断是否具有该服务
            </summary>
            <param name="satelliteType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.TimeIntervalService`1.GetMayAvailableServices(Geo.Times.Time)">
            <summary>
            获取可能可用的日服务列表。服务将从中选取。找过一次就不必再找了。
            </summary>
            <param name="SatelliteType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSysClockDailyService">
            <summary>
            多系统钟差服务
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysClockDailyService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSysClockDailyService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            简单判断是否可用
            </summary>
            <param name="satelliteType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.MultiSysClockDailyService.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="T:Gnsser.Service.SinexUtil">
            <summary>
            实用工具
            </summary>
        </member>
        <member name="M:Gnsser.Service.SinexUtil.GetEstXYZ(System.String[],System.String)">
            <summary>
            从 Sinex 文件中提取 XYZ 坐标。
            </summary>
            <param name="Site"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.EphemerisServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="F:Gnsser.Service.EphemerisServiceType.Unknown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="F:Gnsser.Service.EphemerisServiceType.Precise">
            <summary>
            精密星历，精度在厘米级别
            </summary>
        </member>
        <member name="F:Gnsser.Service.EphemerisServiceType.Navigation">
            <summary>
            导航星历，精度在 10米级别
            </summary>
        </member>
        <member name="F:Gnsser.Service.EphemerisServiceType.Composed">
            <summary>
            组合的服务。
            </summary>
        </member>
        <member name="T:Gnsser.Service.IEphemerisService">
            <summary>
            星历服务数据源。一个数据源一般是一个文件。 
            从接口上来看，是支持多系统的。而数据文件中，一般一个文件对应一种卫星系统。
            
            星历服务的类型。有，
            1）导航导航文件
            2）数据库类型
            3）SOA模型的服务，等等。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IEphemerisService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Service.IEphemerisService.SatCount">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Service.IEphemerisService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Service.IEphemerisService.Prns">
            <summary>
            卫星编号列表。不代表每个历元都有。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.GetPrns(Gnsser.SatelliteType)">
            <summary>
            指定类型的卫星编号
            </summary>
            <param name="type">卫星类型</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.IEphemerisService.SatelliteTypes">
            <summary>
            包含的卫星系统类型
            </summary>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time,System.Double)">
            <summary>
            获取星历列表，这些信息是可能是拟合的结果。
            </summary>
            <param name="prn">卫星</param>
            <param name="from">起始时间</param>
            <param name="to">终止时间</param>
            <param name="interval">间隔（秒）</param>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.Gets(Gnsser.SatelliteNumber)">
            <summary>
             获取数据源中存储的离散的星历信息，这些信息是原始存储的。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.Gets">
            <summary>
            获取所有数据源中存储的信息。这个比较占用内存，慎用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            指定卫星是否健康可用
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.IsAvailable(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            指定系统是否支持，注意：不确保每颗卫星都可用。
            </summary>
            <param name="satType"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IEphemerisService.IsAvailable(System.Collections.Generic.List{Gnsser.SatelliteType},Geo.Times.Time)">
            <summary>
            指定系统是否支持，注意：不确保每颗卫星都可用。
            </summary>
            <param name="satType"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IMultiSourceEphemerisService">
            <summary>
            包含多个数据源的星历数据源。
            这里的多文件，是每一个时段，一个文件。
            </summary>
        </member>
        <member name="M:Gnsser.Service.IMultiSourceEphemerisService.IsAvailable(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            是否可用
            </summary>
            <param name="time">时间</param>
            <param name="satelliteType">卫星类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IMultiSourceEphemerisService.GetTimePeriods(Gnsser.SatelliteType)">
            <summary>
            有效时间段。用于多文件。
            </summary>
        </member>
        <member name="P:Gnsser.Service.IMultiSourceEphemerisService.MaxGap">
            <summary>
            数据源最大的间隔，超过这个间隔则不可以提供服务。
            </summary>
        </member>
        <member name="T:Gnsser.Service.ISatBasedService`1">
            <summary>
            基于卫星的产品或数值服务
            </summary>
        </member>
        <member name="P:Gnsser.Service.ISatBasedService`1.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Service.ISatBasedService`1.Get(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.SingleSatService`1">
            <summary>
            单个卫星的信息服务
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.SingleSatService`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSatService`1.#ctor(Gnsser.SatelliteNumber)">
            <summary>
            指定了卫星编号的构造函数
            </summary>
            <param name="prn"></param>
        </member>
        <member name="P:Gnsser.Service.SingleSatService`1.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Service.SingleSatService`1.Get(Geo.Times.Time)">
            <summary>
            通过时间获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSatService`1.GetEnumerator">
            <summary>
            获取枚举
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.SingleSatService`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取枚举
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.IMultiSatProductService`1">
            <summary>
            基于卫星钟差服务,多卫星的服务
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.IMultiSatProductService`1.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取服务。
            </summary>
            <param name="prn">钟或其载体的名称，如卫星编号</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IMultiSatProductService`1.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            返回原始数据
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.IMultiSatProductService`1.Get(System.String,Geo.Times.Time)">
            <summary>
            获取钟差，支持测站名称
            </summary>
            <param name="nameOrPrn">钟或其载体的名称，如卫星编号</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Service.MultiSatProductService`1">
            <summary>
            多卫星产品服务基类
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="M:Gnsser.Service.MultiSatProductService`1.Get(System.String,Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="nameOrPrn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Service.MultiSatProductService`1.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取时段服务
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Service.MultiSatProductService`1.TimePeriod">
            <summary>
            具有数据的时段
            </summary>
        </member>
        <member name="M:Gnsser.Service.MultiSatProductService`1.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取指定卫星和时刻的产品
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseSiteSelectType">
            <summary>
            基准测站选择类型
            </summary>
        </member>
        <member name="F:Gnsser.BaseSiteSelectType.GeoCenter">
            <summary>
            几何中心
            </summary>
        </member>
        <member name="F:Gnsser.BaseSiteSelectType.First">
            <summary>
            第一个
            </summary>
        </member>
        <member name="F:Gnsser.BaseSiteSelectType.Last">
            <summary>
            最后一个
            </summary>
        </member>
        <member name="F:Gnsser.BaseSiteSelectType.Indicated">
            <summary>
            外部指定
            </summary>
        </member>
        <member name="T:Gnsser.BaseSiteSelection">
            <summary>
            基准测站选择。
            </summary>
        </member>
        <member name="M:Gnsser.BaseSiteSelection.#ctor(Gnsser.BaseSiteSelectType,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.BaseSiteSelection.BaseSiteSelectType">
            <summary>
            基站选择方法
            </summary>
        </member>
        <member name="P:Gnsser.BaseSiteSelection.IndicatedSiteName">
            <summary>
            指定的测站名称
            </summary>
        </member>
        <member name="M:Gnsser.BaseSiteSelection.GetBaseSite(System.Collections.Generic.List{Gnsser.ObsSiteInfo})">
            <summary>
            获取基准测站
            </summary>
            <param name="obsFiles"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AutoBaseLinSolveType">
            <summary>
            自动基线解算类型
            </summary>
        </member>
        <member name="T:Gnsser.AutoBaseLineSolver">
            <summary>
            自动基线解算
            </summary>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.#ctor(Gnsser.AutoBaseLinSolveType,Gnsser.GnssSolverType,System.Collections.Generic.Dictionary{Gnsser.GnssSolverType,Gnsser.GnssProcessOption},System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="AutoBaseLinSolveType"></param>
            <param name="gnssSolverType"></param>
            <param name="Options"></param>
            <param name="maxShortLineLength"></param>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.Init(Gnsser.AutoBaseLinSolveType,Gnsser.GnssSolverType,System.Collections.Generic.Dictionary{Gnsser.GnssSolverType,Gnsser.GnssProcessOption},System.Double)">
            <summary>
            初始化
            </summary>
            <param name="AutoBaseLinSolveType"></param>
            <param name="gnssSolverType"></param>
            <param name="Options"></param>
            <param name="maxShortLineLength"></param>
        </member>
        <member name="E:Gnsser.AutoBaseLineSolver.Completed">
            <summary>
            结束激发
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.MaxShortLineLength">
            <summary>
            最长短基线
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.AutoBaseLinSolveType">
            <summary>
            自动计算类型
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.GnssSolverType">
            <summary>
            GNSS计算类型
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.Option">
            <summary>
            单一计算或短基线选项
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.CurrentOption">
            <summary>
            当前选项
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.Options">
            <summary>
            所有计算类型集合
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.ParallelConfig">
            <summary>
            并行计算设置
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.CurrentSolverCount">
            <summary>
            当前计算器数量
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.CompletedSolverCount">
            <summary>
            已完成的计算器数量
            </summary>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.ProgressViewer">
            <summary>
            进度条
            </summary>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.Solve(Gnsser.MutliPeriodBaseLineManager)">
            <summary>
            解算
            </summary> 
            <param name="LineManager"></param>
        </member>
        <member name="P:Gnsser.AutoBaseLineSolver.OriginalDirectory">
            <summary>
            初始目录
            </summary>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.SolveBaseLine(System.Collections.Generic.List{Gnsser.SiteObsBaseline},Gnsser.GnssProcessOption,Geo.Times.TimePeriod)">
            <summary>
            解算基线
            </summary>
            <param name="sitebaseLines"></param>
            <param name="option"></param>
            <param name="netPeriod"></param>
        </member>
        <member name="M:Gnsser.AutoBaseLineSolver.OneSolver_Processed(Gnsser.IntegralGnssFileSolver)">
            <summary>
            计算完毕一个测站
            </summary>
            <param name="Solver"></param>
        </member>
        <member name="T:Gnsser.QualityOfTriAngleClosureError">
            <summary>
            闭合路径质量
            </summary>
        </member>
        <member name="M:Gnsser.QualityOfTriAngleClosureError.#ctor(Gnsser.BaseLineNet,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            闭合路径质量
            </summary> 
            <param name="ClosureNet"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
        </member>
        <member name="P:Gnsser.QualityOfTriAngleClosureError.BaseLineErrorType">
            <summary>
             基线 较差类型
            </summary>
        </member>
        <member name="P:Gnsser.QualityOfTriAngleClosureError.AverageLength">
             <summary>
            平均长度，用于计算PPM
             </summary>
        </member>
        <member name="P:Gnsser.QualityOfTriAngleClosureError.BaseLineNet">
            <summary>
            如果是闭合差，则这是闭合网，否则是全网
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Gnsser.QualityOfTriAngleClosureError.ClousureErrorFactor" -->
        <member name="P:Gnsser.QualityOfTriAngleClosureError.IsAllOk">
            <summary>
            是否都合限
            </summary>
        </member>
        <member name="P:Gnsser.QualityOfTriAngleClosureError.ResultState">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="M:Gnsser.QualityOfTriAngleClosureError.GetObjectRow">
            <summary>
            添加到行
            </summary> 
        </member>
        <member name="M:Gnsser.QualityOfTriAngleClosureError.CompareTo(Gnsser.QualityOfTriAngleClosureError)">
             <summary>
            比较闭合差总长度
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.QualityOfTriAngleClosureError.BuildSynchNetTrilateralCheckTResultable(System.String,System.Collections.Generic.List{Gnsser.QualityOfTriAngleClosureError},Geo.Times.BufferedTimePeriod,System.Boolean)">
            <summary>
            三边闭合环检核，构建环路环检核结果
            </summary>
        </member>
        <member name="M:Gnsser.QualityOfTriAngleClosureError.BuildReverseErrorTable(Gnsser.SiteObsBaseline,Gnsser.SiteObsBaseline)">
            <summary>
            正反向基线较差
            </summary>
            <param name="line"></param>
            <param name="reverseLine"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IonoFreeUnavailableRemover">
            <summary>
            移除不能组成无电离层组合的卫星数据
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeUnavailableRemover.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.BreakOffBothEndsReviser">
            <summary>
            卫星数据掐头去尾
            </summary>
        </member>
        <member name="M:Gnsser.BreakOffBothEndsReviser.#ctor(Gnsser.Service.SiteSatAppearenceService,System.Double)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.BreakOffBothEndsReviser.SecondOfBreakOffBothEnds">
            <summary>
            掐头去尾数量
            </summary>
        </member>
        <member name="P:Gnsser.BreakOffBothEndsReviser.CurrentIndex">
            <summary>
            当前历元编号
            </summary>
        </member>
        <member name="P:Gnsser.BreakOffBothEndsReviser.FirstEpoch">
            <summary>
            第一个历元
            </summary>
        </member>
        <member name="T:Gnsser.ParamType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="T:Gnsser.ParamDifferType">
            <summary>
            参数差分
            </summary>
        </member>
        <member name="T:Gnsser.ParamNameSpliter">
            <summary>
            参数名称分解器
            </summary> 
        </member>
        <member name="M:Gnsser.ParamNameSpliter.#ctor(System.String)">
            <summary>
            参数名称分解器
            </summary>
            <param name="nameStr"></param>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.ParamDifferType">
            <summary>
            差分类型
            </summary>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.ParamType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.RefSiteName">
            <summary>
            基准测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.SiteName">
            <summary>
            流动测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.RefPrn">
            <summary>
            参考卫星
            </summary>
        </member>
        <member name="P:Gnsser.ParamNameSpliter.Prn">
            <summary>
            流动卫星
            </summary>
        </member>
        <member name="M:Gnsser.ParamNameSpliter.ParseParamDifferType(System.String)">
            <summary>
            参数差分类型解析
            </summary>
            <param name="nameStr"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ParamNameSpliter.ParseParamType(System.String)">
            <summary>
            解析类型，最后一个字符对应
            </summary>
            <param name="nameStr"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EpochParamAnalyzer">
            <summary>
            历元参数分析者器
            </summary>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            历元参数分析器
            </summary>
            <param name="ParamNames"></param>
            <param name="SequentialEpochCount"></param>
            <param name="MaxDiffer">判断是否收敛的标准</param>
            <param name="MaxAllowedConvergenceTime">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
            <param name="KeyLabelCharCount"></param>
            <param name="MaxAllowedDifferAfterConvergence">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
            <param name="MaxAllowedRms">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.SequentialEpochCount">
            <summary>
            连续历元数量，统计收敛
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.MaxDiffer">
            <summary>
            最大的偏差，小于此才认为收敛
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.MaxAllowedRms">
            <summary>
            最大允许的的RMS，超出则标记not ok
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.MaxAllowedConvergenceTime">
            <summary>
            允许最大的收敛时间，超出认为不收敛
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.MaxAllowedDifferAfterConvergence">
            <summary>
            收敛后允许的最大偏差。超出则标记超限。
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.KeyLabelCharCount">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.ParamNames">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.ConvergenceResult">
            <summary>
            结果，文件名：参数名：收敛时间
            </summary>
        </member>
        <member name="P:Gnsser.EpochParamAnalyzer.EpochParamDataTables">
            <summary>
            原始数据表
            </summary>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.GetParamAccuracyInfos(Geo.ObjectTableStorage)">
            <summary>
            参数精度信息提取
            </summary>
            <param name="rawEpochParamTable"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.Add(System.String)">
            <summary>
            批量计算，增加一个，最后统计
            </summary>
            <param name="inputPath"></param>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.Add(Geo.ObjectTableStorage)">
            <summary>
            批量计算，增加一个，最后统计
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.GetTotalFileParamConvergenceTable">
            <summary>
            聚类收敛结果统计表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.GetTotalFileParamRmsTable">
            <summary>
            所有文件的精度结果统计表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.GetConvergencedTable(Geo.ObjectTableStorage,Geo.BaseDictionary{System.String,Geo.Times.TimePeriod})">
             <summary>
            获取收敛后的数据表，即删除收敛前的内容。
             </summary>
             <param name="epochParamTable"></param>
             <param name="ConvergeceDic"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.GetParamsOnlyTable(Geo.ObjectTableStorage)">
            <summary>
            移除其它参数
            </summary>
            <param name="epochParamTable"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.BuildFileKey(System.String)">
            <summary>
            表名称
            </summary>
            <param name="inputPath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.ExtractRmsInfoAddToTableRow(Geo.ObjectTableStorage@,Geo.ObjectTableStorage,Geo.BaseDictionary{System.String,Geo.Times.TimePeriod})">
            <summary>
            提取到表行
            </summary>
            <param name="result"></param>
            <param name="epochParamTable"></param>
            <param name="convergencePeriods"></param>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.RemoveConvergencedRows(Geo.ObjectTableStorage@,Geo.BaseDictionary{System.String,Geo.Times.TimePeriod})">
            <summary>
            移除收敛前的行
            </summary>
            <param name="epochParamTable"></param>
            <param name="convergencePeriods"></param>
        </member>
        <member name="M:Gnsser.EpochParamAnalyzer.AddParamRmsAsTableRow(Geo.ObjectTableStorage,System.Collections.Generic.Dictionary{System.String,System.Double},System.Collections.Generic.Dictionary{System.String,Geo.RmsedNumeral},System.String)">
            <summary>
            增加参数精度信息到表行
            </summary>
            <param name="result"></param>
            <param name="maxDiffers"></param>
            <param name="rmses"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:Gnsser.ParamAccuracyInfoManager">
            <summary>
            参数精度信息
            </summary>
        </member>
        <member name="M:Gnsser.ParamAccuracyInfoManager.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="MaxAllowedConvergenceTime">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
            <param name="MaxAllowedDifferAfterConvergence">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
            <param name="MaxAllowedRms">判断是否合限，包括收敛时间，收敛后偏差和最大允许RMS</param>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfoManager.MaxAllowedRms">
            <summary>
            最大允许的的RMS，超出则标记not ok
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfoManager.MaxAllowedConvergenceTime">
            <summary>
            允许最大的收敛时间，超出认为不收敛,分钟
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfoManager.MaxAllowedDifferAfterConvergence">
            <summary>
            收敛后允许的最大偏差。超出则标记超限。
            </summary>
        </member>
        <member name="M:Gnsser.ParamAccuracyInfoManager.IsOk(Gnsser.ParamAccuracyInfo)">
            <summary>
            是否合限，包括收敛时间，收敛后偏差和最大允许RMS
            </summary>
            <param name="accuracyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ParamAccuracyInfo">
            <summary>
            参数精度信息
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfo.ParamName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfo.ConvergenceTimePeriod">
            <summary>
            收敛时段
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfo.ConvergenceSpanMinutes">
            <summary>
            收敛分钟
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfo.MaxAbsDiffer">
            <summary>
            最大绝对值偏差
            </summary>
        </member>
        <member name="P:Gnsser.ParamAccuracyInfo.RmsValue">
            <summary>
            RMS 
            </summary>
        </member>
        <member name="M:Gnsser.ParamAccuracyInfo.ToReadableText(System.String)">
            <summary>
            可读的文本
            </summary>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OptionParamType">
            <summary>
            选项类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.Int">
            <summary>
            Int32
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.Bool">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Gnsser.OptionParamType.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="T:Gnsser.OptionName">
            <summary>
            选项名称
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.Version">
             <summary>
            版本
             </summary>
        </member>
        <member name="F:Gnsser.OptionName.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.OrdinalAndReverseCount">
            <summary>
            正反算， 顺序-逆序计算. 0表示只按照默认配置，单向计算一次。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsReversedDataSource">
            <summary>
            是否逆序数据流
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ProcessType">
            <summary>
            数据处理类型，是否为预处理等
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.AdjustmentType">
            <summary>
            平差类型选项
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.RinexObsFileFormatType">
            <summary>
            观测文件格式化处理类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.OutputRinexVersion">
            <summary>
            RINEX 输出类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.GnssSolverType">
            <summary>
            GNSS 解算器类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StartIndex">
            <summary>
            计算起始历元编号。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.CaculateCount">
            <summary>
            计算起始历元编号。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsApproxXyzRequired">
            <summary>
            是否需要测站初始值,如果需要，而测站值为空，则将自动进行计算设置。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.InitApproxXyzRms">
            <summary>
            坐标初始中误差.用于初始赋权.默认为100米。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.InitApproxXyz">
            <summary>
            坐标初始.用于初始赋权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingApproxXyz">
            <summary>
            是否指定初始坐标
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingApproxXyzRms">
            <summary>
            是否指定近似坐标
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUpdateStationInfo">
            <summary>
            是否更新测站信息
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsLengthPhaseValue">
            <summary>
            载波相位是否是以米为单位，如Android接收机单位为米。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsObsDataRequired">
            <summary>
            是否需要观测数据源
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingClockFile">
            <summary>
            是否指定钟差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsP2C2Enabled">
            <summary>
            P2C2 启动
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IonoGridFilePath">
            <summary>
            电离层文件路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingGridIonoFile">
            <summary>
            是否指定电离层文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.EpochIonoParamFilePath">
            <summary>
            历元电离层参数文件路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingEphemerisFile">
            <summary>
            是否指定星历
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingCoordFile">
            <summary>
            是否指定坐标文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ClockFilePath">
            <summary>
            指定的钟差路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.EphemerisFilePath">
            <summary>
            指定的星历路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.NavIonoModelPath">
            <summary>
            导航文件路径，用于提取电离层改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.CoordFilePath">
            <summary>
            坐标文件路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.TropAugmentFilePath">
            <summary>
            对流层增强文件。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StationInfoPath">
            <summary>
            测站信息文件路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPreciseClockFileRequired">
            <summary>
            是否需要精密钟差文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEphemerisRequired">
            <summary>
            是否需要星历， 默认需要
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPreciseEphemerisFileRequired">
            <summary>
            是否需要精密星历文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsAntennaFileRequired">
            <summary>
            是否需要天线文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSatStateFileRequired">
            <summary>
            是否需要卫星状态文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSatInfoFileRequired">
            <summary>
            是否需要卫星信息文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOceanLoadingFileRequired">
            <summary>
            是否需要潮汐文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsDCBFileRequired">
            <summary>
            是否需要DCB文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsVMF1FileRequired">
            <summary>
            是否需要VMF1文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.Isgpt2FileRequired">
            <summary>
            是否采用GPT2通用文件改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsErpFileRequired">
            <summary>
            是否采用ERP文件改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIgsIonoFileRequired">
            <summary>
            是否需要IGS电离层格网文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOpenReportWhenCompleted">
            <summary>
            是否在计算结束时打开平差报告
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIonoCorretionRequired">
            <summary>
            是否启用电离层模型改正。顶层接口，如果要采用电离层改正观测近似值，则必须设定。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRangeValueRequired">
            <summary>
            是否需要伪距值
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPhaseValueRequired">
            <summary>
            是否需要相位值
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUpdateEstimatePostition">
            <summary>
            定位过程中，是否更新测站估值坐标。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRemoveOrDisableNotPassedSat">
            <summary>
            是否移除未通过检核的卫星，否则标记为未启用。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRemoveSmallPartSat">
            <summary>
            是否移除观测段太小的卫星
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsExcludeMalfunctioningSat">
            <summary>
            是否移除故障卫星(通常从外部文件指定)
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsDisableEclipsedSat">
            <summary>
            是否禁用太阳阴影影响的卫星
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEnableBufferCs">
            <summary>
            启用缓存周跳探测
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEnableRealTimeCs">
            <summary>
            是否启用实时周跳探测
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxErrorTimesOfBufferCs">
            <summary>
            缓存周跳差分次数
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.DifferTimesOfBufferCs">
            <summary>
            缓存周跳差分次数
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.PolyFitOrderOfBufferCs">
            <summary>
            缓存周跳拟合阶次
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IgnoreCsedOfBufferCs">
            <summary>
            是否忽略已经标记为周跳的历元卫星。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinWindowSizeOfCs">
            <summary>
            缓存周跳 最小窗口大小，小于此，都认为有周跳。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUsingRecordedCycleSlipInfo">
            <summary>
            是否采用数据源信息标记的周跳，若已标记周跳，则认为有。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxDifferValueOfMwCs">
            <summary>
            MW周跳探测中，最大的误差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxRmsTimesOfLsPolyCs">
            <summary>
            多项式拟合周跳探测中，最大的误差倍数
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxValueDifferOfHigherDifferCs">
            <summary>
            高次差周跳探测中，允许的最大的误差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxBreakingEpochCount">
            <summary>
            周跳探测允许最大断裂的时间间隔
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsCycleSlipDetectionRequired">
            <summary>
            是否进行周跳探测
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsCycleSlipReparationRequired">
            <summary>
            是否修复周跳
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputCycleSlipFile">
            <summary>
            是否输出周跳文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsAliningPhaseWithRange">
            <summary>
            是否将初始相位采用伪距对齐
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsDopplerShiftRequired">
            <summary>
            是否需要多普勒频率
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRequireSameSats">
            <summary>
            多历元处理中，是否需要相同的卫星
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsAllowMissingEpochSite">
            <summary>
            多测站中，是否允许某历元丢失个别站。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinAllowedRange">
            <summary>
            允许最小的伪距
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxAllowedRange">
            <summary>
            允许最大的伪距
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.OutputDirectory">
            <summary>
            结果输出目录
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputSinex">
            <summary>
            是否输出SINEX文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputSummery">
            <summary>
            是否输出汇总文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.OutputBufferCount">
            <summary>
            输出结果缓存大小
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.BufferSize">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxEpochSpan">
            <summary>
            最大的时间跨度，单位：秒，如果历元之间超过了这个时段，则清空以往数据，重新构建对象。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinContinuouObsCount">
            <summary>
            卫星连续观测的最小历元数量(单位：历元次)。即如果小于这个间隔，则抹去，不参与计算，以免影响精度。
            一般为20个历元。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinSatCount">
            <summary>
            最小卫星数量
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinFrequenceCount">
            <summary>
            至少的观测频率数量
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.RangeType">
            <summary>
            伪距类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ObsDataType">
            <summary>
            用于计算的观测值变量类型,此设置用于周跳探测，近似观测值获取等。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.PhaseTypeToSmoothRange">
            <summary>
            平滑伪距的相位类型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ApproxDataType">
            <summary>
            近似值的数据类型，用于计算残差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.SatelliteTypes">
            <summary>
            参与计算的卫星类型，系统类型。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.CaculateType">
            <summary>
             计算方式
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.RejectGrossError">
            <summary>
            是否剔除粗差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.EnableClockService">
            <summary>
            是否启用单独的钟差服务（文件）
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxStdDev">
            <summary>
            最大均方差，阈值。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPreciseOrbit">
            <summary>
            precise orbit?
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.VertAngleCut">
            <summary>
             vert angle cutoff (deg)
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.FilterCourceError">
            <summary>
            是否过滤粗差
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxLoopCount">
            <summary>
            最大迭代次数。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.EnableLoop">
            <summary>
            是否启用迭代
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxMeanStdTimes">
            <summary>
            最大平均均方根倍数。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsReverseCycleSlipeRevise">
            <summary>
            启用逆序周跳探测
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.PhaseCovaProportionToRange">
            <summary>
            卫星相位与伪距观测量的权比。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfSysTimeRandomWalkModel">
            <summary>
            随机模型参数， 随机游走模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfRandomWalkModel">
            <summary>
            随机模型参数， 随机游走模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfPhaseModel">
            <summary>
            随机模型参数， 载波相位模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfCycledPhaseModel">
            <summary>
            随机模型参数， 发生周跳时，载波相位模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfIonoRandomWalkModel">
            <summary>
            随机模型参数， 电离层随机游走模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfStaticTransferModel">
            <summary>
            随机模型参数， 静态模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfTropoRandomWalkModel">
            <summary>
            随机模型参数， 对流层随机游走模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.StdDevOfRevClockWhiteNoiseModel">
            <summary>
            随机模型参数，白噪声模型的标准差。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSetApproxXyzWithCoordService">
            <summary>
            是否需要用坐标服务设置测站初值
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MutliEpochSameSatCount">
            <summary>
            参与差分卫星的数量
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MultiEpochCount">
            <summary>
            系数阵历元数量
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputResult">
            <summary>
            是否输出结果的总开关，只有此为true才会判断下面的输出
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputEpochSatInfo">
            <summary>
            是否输出卫星信息
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputAdjust">
            <summary>
            是否输出平差文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputAdjustMatrix">
            <summary>
            是否输出平差矩阵文本文件，主要用于平差测试
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputIono">
            <summary>
            是否输出电离层产品文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputWetTrop">
            <summary>
            是否输出对流层湿延迟产品文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOutputEpochResult">
            <summary>
            是否输出逐个历元计算结果
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinSuccesiveEphemerisCount">
            <summary>
            用于拟合的最小连续星历数量。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSwitchWhenEphemerisNull">
            <summary>
            在获取星历失败后，是否切换星历数据源
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MinDistanceOfLongBaseLine">
            <summary>
            长基线的最小长度,单位米
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.MaxDistanceOfShortBaseLine">
            <summary>
            短基线的最大长度，单位米
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.CycleSlipDetectSwitcher">
            <summary>
            周跳开关.优先考虑周跳探测器开关,如为空，然后考虑默认周跳探测器。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsResidualCheckEnabled">
            <summary>
            是否启用验后残差检核
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPromoteTransWhenResultValueBreak">
            <summary>
            当结果变化时，是否进行手动升高状态转移矩阵的噪声
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsObsCorrectionRequired">
             <summary>
            是否需要观测值改正
             </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsApproxModelCorrectionRequired">
            <summary>
            是否需要近似模型改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsDcbCorrectionRequired">
            <summary>
            是否需要DCB改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsReceiverAntSiteBiasCorrectionRequired">
            <summary>
            接收机天线PCO改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsOceanTideCorrectionRequired">
            <summary>
            海洋潮汐改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSolidTideCorrectionRequired">
            <summary>
            固体潮改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPoleTideCorrectionRequired">
            <summary>
            极潮改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSatClockBiasCorrectionRequired">
            <summary>
            卫星钟差改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsTropCorrectionRequired">
            <summary>
            对流层改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsGravitationalDelayCorrectionRequired">
            <summary>
            重力延迟改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSatAntPcoCorrectionRequired">
            <summary>
            卫星天线相位中心改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRecAntPcoCorrectionRequired">
            <summary>
            接收机天线PCO改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRecAntPcvCorrectionRequired">
            <summary>
            接收机天线PCV改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsPhaseWindUpCorrectionRequired">
            <summary>
            相位缠绕改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSiteCorrectionsRequired">
            <summary>
            测站改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsRangeCorrectionsRequired">
            <summary>
            伪距改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsFrequencyCorrectionsRequired">
            <summary>
            频率改正
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEpochIonoFileRequired">
            <summary>
            是否需要GNSSer历元电离层文件
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsNavIonoModelCorrectionRequired">
            <summary>
            是否需要电离层导航参数模型
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsTropAugmentEnabled">
            <summary>
            是否对流层增强启用。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.Isgpt2File1DegreeRequired">
            <summary>
            Isgpt2File1DegreeRequired
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSameSatRequired">
            <summary>
            是否要求相同卫星
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsBaseSatelliteRequried">
            <summary>
            是否选择基准卫星
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsFixingAmbiguity">
            <summary>
            是否固定模糊度
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsFixingCoord">
            <summary>
            是否固定坐标
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSiteCoordServiceRequired">
            <summary>
            是否需要坐标服务
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingStationInfoFile">
             <summary>
            是否指定测站信息文件
             </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsStationInfoRequired">
            <summary>
            测站信息文件，主要包含天线时段信息。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEnableInitApriori">
            <summary>
            是否启用先验值
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.InitApriori">
            <summary>
            初始先验值
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsEnableNgaEphemerisSource">
            <summary>
            是否启用NGA星历匹配，作为实时计算的备份。
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUniqueEphSource">
            <summary>
            是否使用唯一数据源，当自动匹配时使用
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IndicatedSourceCode">
            <summary>
            指定的IGS数据源，前两个字作为代码
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ObsFiles">
            <summary>
            观测数据源
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.BdsEphemerisFilePath">
            <summary>
            指定的 BDS 星历路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.GloEphemerisFilePath">
            <summary>
            指定的 GLONASS 星历路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.GalEphemerisFilePath">
            <summary>
            指定的Galileo星历路径
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingBdsEphemerisFile">
            <summary>
            是否指定BDS星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingGloEphemerisFile">
            <summary>
            是否指定GLONASS星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingGalEphemerisFile">
            <summary>
            是否指定伽利略星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUseUniqueEphemerisFile">
             <summary>
            是否全部使用一个星历数据源，将采用 EphemerisFilePath 
             </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsIndicatingErpFile">
            <summary>
            是否指定ERP路径，具有最高优先权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.ErpFilePath">
            <summary>
            指定的ERP路径，具有最高优先权
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsUsingFullClockService">
            <summary>
            是否启用全钟差服务,否则使用简单钟差服务
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsNeedPseudorangePositionWhenProcess">
            <summary>
            数据处理时，是否需要伪距定位，动态定位时需要
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.IsSmoothMoveInMultiEpoches">
            <summary>
            是否平滑移动多历元窗口，否则采用分段移动
            </summary>
        </member>
        <member name="F:Gnsser.OptionName.SystemStdDevFactorString">
            <summary>
            不同系统的权值
            </summary>
        </member>
        <member name="T:Gnsser.OptionManager">
            <summary>
            选项值转换器
            </summary>
        </member>
        <member name="M:Gnsser.OptionManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.OptionManager.Write(Gnsser.GnssProcessOption,System.String)">
            <summary>
            写入路径
            </summary>
            <param name="option"></param>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.OptionManager.Read(System.String)">
            <summary>
            读取配置
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.Read(System.String,System.String)">
            <summary>
            读取配置
            </summary>
            <param name="name"></param>
            <param name="gnssOptionText"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.Read(System.IO.Stream,System.String)">
            <summary>
            读取数据流
            </summary>
            <param name="stream"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.IsEnumType(Gnsser.OptionName)">
            <summary>
            是否是枚举类型
            </summary>
            <param name="optionName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.GetSysType(Gnsser.OptionName)">
            <summary>
            获取数据类型的系统 Type
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.GetTypeByKey(Gnsser.OptionName)">
            <summary>
            获取类型OptionParamType
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.GetType(System.Object)">
            <summary>
            通过对象获取Option类型OptionParamType
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.GetTypeBySysType(System.Type)">
            <summary>
            通过对象获取Option类型OptionParamType
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.ParseKey(System.String)">
            <summary>
            解析参数名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.ParseValue(System.String,Gnsser.OptionName)">
            <summary>
            解析参数值
            </summary>
            <param name="strVal"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.ParseValue(System.String,Gnsser.OptionParamType)">
            <summary>
            解析值
            </summary>
            <param name="strVal"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.GetNameTypeDic">
            <summary>
            名字与数据类型对应。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionManager.BuildDictionary">
            <summary>
            构建变量字典
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OptionConfig">
            <summary>
            配置文件内容.
            通常以#为注释，以=为赋值符号，以行为单位的配置文件。
            </summary>
        </member>
        <member name="M:Gnsser.OptionConfig.#ctor">
             <summary>
            配置文件内容
             </summary> 
        </member>
        <member name="M:Gnsser.OptionConfig.#ctor(System.Collections.Generic.IDictionary{Gnsser.OptionName,Gnsser.OptionConfigItem},System.Collections.Generic.List{System.String})">
            <summary>
            采用已有列表初始化
            </summary>
            <param name="ConfigItems"></param>
            <param name="Comments"></param>
        </member>
        <member name="M:Gnsser.OptionConfig.CreateItem(Gnsser.OptionName,System.Object,System.String,System.String)">
            <summary>
            创建一个新对象
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
            <param name="group"></param>
            <param name="Comment"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfig.ParseString(System.String)">
            <summary>
            解析
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OptionConfigItem">
            <summary>
            配置文件内容
            </summary>
        </member>
        <member name="M:Gnsser.OptionConfigItem.#ctor(Gnsser.OptionName,System.Object,System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.OptionConfigItem.ParseString(System.String,Gnsser.OptionName)">
            <summary>
            解析字符串
            </summary>
            <param name="str"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfigItem.IsEnumType">
            <summary>
            是否是枚举类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OptionConfigReader">
            <summary>
            配置文件内容。
            通常为一行一个变量和值。采用分隔符分开。
            </summary>
        </member>
        <member name="M:Gnsser.OptionConfigReader.#ctor(System.String,System.String,System.String)">
             <summary>
            配置文件内容
             </summary> 
             <param name="path">路径</param> 
             <param name="ValueSplitter">数值分隔符</param> 
             <param name="CommentSplitter">注释分隔符</param> 
        </member>
        <member name="M:Gnsser.OptionConfigReader.#ctor(System.IO.Stream,System.Text.Encoding,System.String,System.String)">
             <summary>
            配置文件内容
             </summary> 
             <param name="stream">数据流</param>
             <param name="encoding">编码</param>
             <param name="ValueSplitter">数值分隔符</param> 
             <param name="CommentSplitter">注释分隔符</param> 
        </member>
        <member name="M:Gnsser.OptionConfigReader.CreateConfig">
            <summary>
            创建配置表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfigReader.ParseValue(System.String,Gnsser.OptionName)">
            <summary>
            解析字符串
            </summary>
            <param name="str"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfigReader.CreateItem(Gnsser.OptionName,System.Object,System.String,System.String)">
            <summary>
            创建配置项目
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
            <param name="group"></param>
            <param name="Comment"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfigReader.ParseKey(System.String)">
            <summary>
            解析关键字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OptionConfigWriter">
            <summary>
            包含Stream, Encoding属性，用于输入输出。
            </summary>
        </member>
        <member name="M:Gnsser.OptionConfigWriter.#ctor(System.String,System.String,System.String)">
             <summary>
            配置文件内容
             </summary> 
             <param name="path">路径</param> 
             <param name="ValueSplitter">数值分隔符</param> 
             <param name="CommentSplitter">注释分隔符</param> 
        </member>
        <member name="M:Gnsser.OptionConfigWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.String,System.String)">
             <summary>
            配置文件内容
             </summary> 
             <param name="stream">数据流</param>
             <param name="encoding">编码</param>
             <param name="ValueSplitter">数值分隔符</param> 
             <param name="CommentSplitter">注释分隔符</param> 
        </member>
        <member name="M:Gnsser.OptionConfigWriter.ValueToString(System.Object)">
            <summary>
            值转换为字符串
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OptionConfigWriter.KeyToString(Gnsser.OptionName)">
            <summary>
            键转换为字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ResultFileNameBuilder">
            <summary>
            定位信息写入器
            </summary>
        </member>
        <member name="F:Gnsser.ResultFileNameBuilder.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ProjectOutputDirectory"></param>
            <param name="GnssSolverType"></param>
        </member>
        <member name="P:Gnsser.ResultFileNameBuilder.ProjectOutputDirectory">
            <summary>
            工程输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ResultFileNameBuilder.SolverDirectory">
            <summary>
            计算器目录
            </summary>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetBaseLineResultFile">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildFinalResultFilePath(System.Type)">
            <summary>
            最终输出结果
            </summary>
            <param name="gnssResultType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllTwoSiteSolverEpochParamFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllSolverEpochParamFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllSingleSiteGnssSolverEpochParamFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllEpochResidualFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllTwoSiteSolverResidualFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllSingleSiteGnssSolverResidualFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllMultiSiteNetSolverResidualFileName(System.String)">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllEpochResidualFileName(System.String,System.String[])">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllEpochParamFileName(System.String,System.String[])">
            <summary>
            获取所有可能的残差路径
            </summary>
            <param name="materialName"></param>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllBaseLineResultFile">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllNetDoubleDifferBaseLineEpochResidualFile">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetNetDoubleDifferBaseLineEpochResidualFile(System.String)">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetNetDoubleDifferBaseLineEpochParamFile(System.String)">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.GetAllNetDoubleDifferBaseLineEpochParamFile">
            <summary>
            获取基线结果文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildBaseLineResulPath(System.String)">
            <summary>
            生成基线结果路径
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildSiteCoordResulPath(System.String)">
            <summary>
            生成测站结果路径
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildEpochObsFileName(System.String)">
            <summary>
            构造观测残差 小 l 文件名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildEpochResidualFileName(System.String)">
            <summary>
            构造算后残差 V 文件名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildEpochParamRmsFileName(System.String)">
            <summary>
            历元参数RMS文件
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildEpochParamFileName(System.String)">
            <summary>
            历元参数文件
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ResultFileNameBuilder.BuildMultiSiteEpochInfoName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            构建多站历元观测对象名称
            </summary>
            <param name="baseName"></param>
            <param name="rovNames"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SingleSitePeroidMatrixBuilder">
            <summary>
            单站多历元基础的定位矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.SingleSitePeroidMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SingleSitePeroidMatrixBuilder.Epoches">
            <summary>
            当前历元列表
            </summary>
        </member>
        <member name="P:Gnsser.SingleSitePeroidMatrixBuilder.EpochCount">
            <summary>
            历元数量,743333
            </summary>
        </member>
        <member name="T:Gnsser.ObsCovaMatrixBuilder">
            <summary>
            基础的定位矩阵生成器
            </summary>
        </member>
        <member name="P:Gnsser.ObsCovaMatrixBuilder.SatWeightProvider">
            <summary>
            卫星定权
            </summary>
        </member>
        <member name="M:Gnsser.ObsCovaMatrixBuilder.BulidDoubleInverseWeightOfObs(Gnsser.Domain.MultiSitePeriodInfo,System.String,Gnsser.SatelliteNumber,System.Double,System.Boolean,System.Boolean)">
            <summary>
            多历元多站双差
            </summary>
            <param name="periodMaterial"></param>
            <param name="BaseSiteName"></param>
            <param name="CurrentBasePrn"></param>
            <param name="invFactorOfPhase"></param>
            <param name="phaseOnly"></param>
            <param name="isDualFreq"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCovaMatrixBuilder.BulidDoubleInverseWeightOfObs(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Double,System.Boolean,System.Boolean)">
            <summary>
            构建双差观测矩阵协方差
            </summary>
            <param name="epochMaterial"></param>
            <param name="CurrentBasePrn"></param>
            <param name="BaseSiteName"></param>
            <param name="invFactorOfPhase"></param>
            <param name="phaseOnly">是否只用载波，否则载波加伪距</param>
            <param name="isDualFreq">是否双频</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCovaMatrixBuilder.BuildPrmevalPhaseOnlyObsCovaMatrix(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Double)">
            <summary>
            生成多测站单历元原始纯载波的观测权逆阵，将基准站放在第一，基准星放在第一。
            注意：此处没有伪距观测值。
            </summary>
        </member>
        <member name="M:Gnsser.ObsCovaMatrixBuilder.BuildPrmevalRangeAndPhaseObsCovaMatrix(Gnsser.Domain.MultiSiteEpochInfo,System.String,Gnsser.SatelliteNumber,System.Double)">
            <summary>
            生成多测站单历元原始纯载波的观测权逆阵，将基准站放在第一，基准星放在第一。
            注意：伪距观测值排在前面，载波在后面。
            </summary>
        </member>
        <member name="T:Gnsser.MultiSitePeroidMatrixBuilder">
            <summary>
            基础的定位矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSitePeroidMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeroidMatrixBuilder.SatCount">
            <summary>
            参与计算的卫星的数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeroidMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeroidMatrixBuilder.Epoches">
            <summary>
            当前历元列表
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeroidMatrixBuilder.EpochCount">
            <summary>
            历元数量,743333
            </summary>
        </member>
        <member name="T:Gnsser.PeriodTriguilarNetQualitiyManager">
            <summary>
            时段性三角形闭合差
            </summary>
        </member>
        <member name="M:Gnsser.PeriodTriguilarNetQualitiyManager.Create(Geo.Times.TimePeriod)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PeriodTriguilarNetQualitiyManager.GetObjectTable(System.Boolean)">
            <summary>
            对象表
            </summary>
            <param name="IsBadOnly"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AsyncTriguilarNetQualitiyManager">
            <summary>
            异步三角形网质量
            </summary>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.GetBest(Gnsser.GnssBaseLineName)">
            <summary>
            这条基线是否合限，原理：如果所有都超限了，则肯定超限如果有合限的，则合限。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.GetWorst(Gnsser.GnssBaseLineName)">
            <summary>
            获取最差环
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.Get(Gnsser.GnssBaseLineName)">
            <summary>
            获取包含的三角网
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.GetAllPeriodWithOrderNumber">
            <summary>
            编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AsyncTriguilarNetQualitiyManager.GetObjectTable">
            <summary>
            对象表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriguilarNetQualitiyManager">
            <summary>
            三角形网质量
            </summary>
        </member>
        <member name="M:Gnsser.TriguilarNetQualitiyManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.TriguilarNetQualitiyManager.GetBest(Gnsser.GnssBaseLineName)">
            <summary>
            这条基线是否合限，原理：如果所有都超限了，则肯定超限如果有合限的，则合限。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriguilarNetQualitiyManager.GetWorst(Gnsser.GnssBaseLineName)">
            <summary>
            获取最差环
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriguilarNetQualitiyManager.Get(Gnsser.GnssBaseLineName)">
            <summary>
            获取包含的三角网
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriguilarNetManager">
            <summary>
            三角形网质量
            </summary>
        </member>
        <member name="M:Gnsser.TriguilarNetManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.TriguilarNetManager.GetBest(Gnsser.GnssBaseLineName)">
            <summary>
            这条基线是否合限，原理：如果所有都超限了，则肯定超限如果有合限的，则合限。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriguilarNetManager.Get(Gnsser.GnssBaseLineName)">
            <summary>
            获取包含的三角网
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriangularNetName">
             <summary>
            三角形名称，点位顺序不重要
             </summary>
        </member>
        <member name="M:Gnsser.TriangularNetName.#ctor(Geo.BaseLineName,System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="lineName"></param>
            <param name="OtherPoint"></param> 
        </member>
        <member name="M:Gnsser.TriangularNetName.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="PointA"></param>
            <param name="PointB"></param>
            <param name="PointC"></param>
        </member>
        <member name="P:Gnsser.TriangularNetName.Tag">
            <summary>
            绑定对象
            </summary>
        </member>
        <member name="P:Gnsser.TriangularNetName.PointA">
            <summary>
            A
            </summary>
        </member>
        <member name="P:Gnsser.TriangularNetName.PointB">
            <summary>
            A
            </summary>
        </member>
        <member name="P:Gnsser.TriangularNetName.PointC">
            <summary>
            A
            </summary>
        </member>
        <member name="P:Gnsser.TriangularNetName.Names">
            <summary>
            名称列表
            </summary>
        </member>
        <member name="P:Gnsser.TriangularNetName.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="M:Gnsser.TriangularNetName.Contains(System.String)">
            <summary>
            包含站点否
            </summary>
            <param name="pointName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriangularNetName.GetBaseLineNames">
            <summary>
            基线名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriangularNetName.Contains(Gnsser.GnssBaseLineName)">
            <summary>
            包含基线否
            </summary>
            <param name="baseLineName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriangularNetName.BuildTriangularNetNames(System.Collections.Generic.List{Gnsser.GnssBaseLineName},System.Collections.Generic.List{System.String})">
            <summary>
            查找所有的三角回路
            </summary>
            <param name="lineNames"></param>
            <param name="siteNames"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriangularNetName.BuildTriangularNetNames(System.Collections.Generic.List{System.String})">
            <summary>
            创建所有三角形名称
            </summary>
            <param name="siteNames"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteCoordsManager">
            <summary>
            一个测站多个坐标
            </summary>
        </member>
        <member name="T:Gnsser.SiteCoords">
            <summary>
            测站坐标一个测站多个坐标
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoords.#ctor">
            <summary>
            测站坐标
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoords.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoords.Coords">
            <summary>
            坐标序列
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoords.Coord">
            <summary>
            第一坐标
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoords.Add(Geo.Coordinates.XYZ)">
            <summary>
            添加一个坐标
            </summary>
            <param name="xyz"></param>
        </member>
        <member name="M:Gnsser.SiteCoords.IsCoordSame">
            <summary>
            坐标是否相同
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseLineErrorType">
            <summary>
            基线误差类型
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineErrorType.三角形闭合差">
            <summary>
            三角形闭合差
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineErrorType.复测基线较差">
            <summary>
            复测基线较差
            </summary>
        </member>
        <member name="T:Gnsser.RepeatErrorQualityManager">
            <summary>
            复测基线较差管理器
            </summary>
        </member>
        <member name="T:Gnsser.QualityBaseLine">
            <summary>
            抽象类
            </summary>
        </member>
        <member name="M:Gnsser.QualityBaseLine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.QualityBaseLine.#ctor(Gnsser.EstimatedBaseline,Geo.Coordinates.RmsedXYZ,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            构造函数
            </summary>
            <param name="baseLine"></param>
            <param name="ClosureError"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
        </member>
        <member name="M:Gnsser.QualityBaseLine.Init(Gnsser.EstimatedBaseline,Geo.Coordinates.RmsedXYZ,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            初始化
            </summary>
            <param name="baseLine"></param>
            <param name="ClosureError"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
        </member>
        <member name="P:Gnsser.QualityBaseLine.ClosureError">
            <summary>
            闭合差，可以是长度较差，也可以是三角形闭合差
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.EstimatedBaseline">
            <summary>
            基线
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.GnssReveiverNominalAccuracy">
            <summary>
            接收机标称精度
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Gnsser.QualityBaseLine.ClousureErrorFactor" -->
        <member name="P:Gnsser.QualityBaseLine.BaseLineName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.AverageLength">
            <summary>
            基线长度
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LengthError">
            <summary>
            三维距离偏差
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LengthPpm">
            <summary>
            距离PPM
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LevelLengthError">
            <summary>
            水平长度误差
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LevelPPm">
            <summary>
            水平PPM
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.VerticalLengthError">
            <summary>
            垂直长度误差
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.VerticalPPm">
            <summary>
            垂直PPm
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.BaseLineErrorType">
            <summary>
             基线 较差类型
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.ToleranceMilliMeter">
            <summary>
            误差限差，毫米
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LevelGradeType">
            <summary>
            水平GNSS等级
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LengthGradeType">
            <summary>
            距离GNSS等级
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.VerticalGradeType">
            <summary>
            垂直GNSS等级
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LevelIsOk">
            <summary>
            水平是否合限
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.VerticalIsOk">
            <summary>
            垂直是否合限
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.LengthIsOk">
            <summary>
            距离长度是否合限
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.ClosureErrorEnu">
            <summary>
            ENU 方向的闭合差
            </summary>
        </member>
        <member name="P:Gnsser.QualityBaseLine.ResultState">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="M:Gnsser.QualityBaseLine.GetObjectRow">
            <summary>
            列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.QualityOfRepeatError">
            <summary>
            基线质量类,主要包括同步环闭合差和时段长度较差
            </summary>
        </member>
        <member name="M:Gnsser.QualityOfRepeatError.#ctor(Gnsser.EstimatedBaseline,Geo.Coordinates.RmsedXYZ,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            复测基线较差
            </summary>
            <param name="ClosureError"></param>
            <param name="baseLine"></param>
            <param name="GnssReveiverNominalAccuracy"></param> 
        </member>
        <!-- Badly formed XML comment ignored for member "P:Gnsser.QualityOfRepeatError.ClousureErrorFactor" -->
        <member name="P:Gnsser.QualityOfRepeatError.ResultState">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="M:Gnsser.QualityOfRepeatError.GetObjectRow">
            <summary>
            列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.QualityOfRepeatError.CompareTo(Gnsser.QualityOfRepeatError)">
             <summary>
            比较闭合差总长度
             </summary>
             <param name="other"></param>
             <returns></returns>
        </member>
        <member name="T:Gnsser.IndependentLineSelectType">
            <summary>
            独立基线选择算法
            </summary>
        </member>
        <member name="T:Gnsser.BaseLineWeighter">
            <summary>
            基线权赋值
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineWeighter.#ctor(Gnsser.BaseLineNet,Gnsser.IndependentLineSelectType)">
            <summary>
            构造函数
            </summary>
            <param name="BaseLineNet">应该移除超限的基线</param>
            <param name="IndependentLineSelectType">选择算法</param>
        </member>
        <member name="P:Gnsser.BaseLineWeighter.CurrentQualityManager">
            <summary>
            基线质量
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineWeighter.BaseLineNet">
            <summary>
            当前所有基线集合，基线组成的网络
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineWeighter.GetWeight(AnyInfo.Graphs.Structure.INode,AnyInfo.Graphs.Structure.INode)">
            <summary>
            计算权
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseLineNetManager">
            <summary>
            多网
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.Init">
            <summary>
            数据变动后，应该初始化测站名称
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.Contains(System.String)">
            <summary>
            是否包含测站名称
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetSiteNames">
            <summary>
            所有的测站名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetBaseLines">
            <summary>
            基线
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetIndependentLines(Gnsser.IndependentLineSelectType)">
            <summary>
            各时段独立基线集合。
            </summary>
            <param name="lineSelectType"></param>
            <param name="GnssReveiverNominalAccuracy">接收机标称精度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.BuildRepeatBaselingErrorTable(System.Collections.Generic.Dictionary{Geo.Times.BufferedTimePeriod,Gnsser.RepeatErrorQualityManager},Gnsser.GnssReveiverNominalAccuracy,System.Boolean)">
            <summary>
            重复基线较差表格
            </summary>
            <param name="qualities"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
            <param name="isBadOnly">是否只显示超限的</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.BuildRepeatBaselingQulities(Gnsser.MultiPeriodRepeatBaseLineError,Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            重复基线较差质量检核结果
            </summary>
            <param name="periodsRepeatErrors"></param>
            <param name="GnssReveiverNominalAccuracy"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.BuildRepeatBaselineError">
            <summary>
            计算各个时段复测基线较差
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.SetSiteCoord(System.String,Geo.Coordinates.XYZ)">
            <summary>
            设置坐标
            </summary>
            <param name="name"></param>
            <param name="xyz"></param>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.BuildSyncTrilateralErrorTable(System.Collections.Generic.Dictionary{Geo.Times.BufferedTimePeriod,Gnsser.TriguilarNetQualitiyManager})">
            <summary>
            将三角形同步环质量结果生成表格返回，合并到一个表
            </summary>
            <param name="allQualities"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.BuildTriangularClosureQualies(Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            提取各个基线质量检核情况
            </summary>
            <param name="GnssReveiverNominalAccuracy"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.Load(System.String[],System.Double)">
            <summary>
            提取异步GNSS网
            </summary>
            <param name="pathes"></param>
            <param name="periodSpanMinutes">不同时段间隔，间隔内认为是同一时段，单位：分</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetApproxXyz(System.String)">
            <summary>
            获取近似坐标
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.Parse(Geo.ObjectTableStorage,System.Double)">
            <summary>
            提取多时段GNSS网，
            </summary>
            <param name="table">异步网络基线结果</param>
            <param name="periodSpanMinutes">不同时段间隔，间隔内认为是同一时段，单位：分</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetBaseLineOrReversed(Gnsser.GnssBaseLineName)">
            <summary>
            获取基线或者反基线
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetSiteTable">
            <summary>
            测站表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetLineTable">
            <summary>
            基线表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetPhaseTable">
            <summary>
            用于显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNetManager.GetFirst(Gnsser.GnssBaseLineName)">
            <summary>
            获取第一个匹配的结果
            </summary>
            <param name="lineName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiPeriodRepeatBaseLineError">
            <summary>
            多时段复测基线较差
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Gnsser.MultiPeriodRepeatBaseLineError.ClousureErrorFactor" -->
        <member name="M:Gnsser.MultiPeriodRepeatBaseLineError.GetWorst">
            <summary>
            最弱边
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseLineRepeatError">
            <summary>
            基线复测误差
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineRepeatError.#ctor(Gnsser.GnssBaseLineName,Geo.Coordinates.RmsedXYZ)">
            <summary>
            构造函数
            </summary>
            <param name="LineName"></param>
            <param name="RmsedXYZ"></param>
        </member>
        <member name="P:Gnsser.BaseLineRepeatError.LineName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineRepeatError.RmsedXYZ">
            <summary>
            误差
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineRepeatError.ErrorLength">
            <summary>
            误差长度,长度闭合差
            </summary>
        </member>
        <member name="T:Gnsser.MultiPeriodBaseLineNet">
            <summary>
            多时段
            </summary>
        </member>
        <member name="M:Gnsser.MultiPeriodBaseLineNet.GetLineTable">
            <summary>
            用于显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodBaseLineNet.Parse(Geo.ObjectTableStorage)">
            <summary>
            多时段单表解析
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodBaseLineNet.GetSiteCoords">
            <summary>
            测站坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiPeriodBaseLineNet.Compare(Gnsser.MultiPeriodBaseLineNet,Gnsser.MultiPeriodBaseLineNet)">
            <summary>
            比较
            </summary>
            <param name="netA"></param>
            <param name="netB"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseLineNet">
            <summary>
            基线网，估值基线集合，如星形网解基线。此处不一定为同步网。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNet.#ctor">
            <summary>
            /构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.BaseLineNet.#ctor(System.Collections.Generic.IEnumerable{Gnsser.SiteObsBaseline})">
            <summary>
            构造函数
            </summary>
            <param name="baseLines"></param>
        </member>
        <member name="M:Gnsser.BaseLineNet.#ctor(System.Collections.Generic.IEnumerable{Gnsser.EstimatedBaseline})">
            <summary>
            构造函数
            </summary>
            <param name="baseLines"></param>
        </member>
        <member name="M:Gnsser.BaseLineNet.Init">
            <summary>
            数据变动后，应该初始化测站名称
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNet.Compare(Gnsser.BaseLineNet,Gnsser.BaseLineNet)">
            <summary>
            比较
            </summary>
            <param name="netA"></param>
            <param name="netB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetNamedXyzs">
            <summary>
            名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Contains(System.String)">
            <summary>
            是否包含测站
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.SetSiteCoord(System.String,Geo.Coordinates.XYZ)">
            <summary>
            此测站设置为此坐标
            </summary>
            <param name="name"></param>
            <param name="xyz"></param>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetSiteCoord(System.String)">
            <summary>
            获取第一个坐标值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Contains(Gnsser.GnssBaseLineName,System.Boolean)">
            <summary>
            是否包含基线
            </summary>
            <param name="name"></param>
            <param name="reverseAble"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Contains(System.String,System.String,System.Boolean)">
            <summary>
            是否包含基线
            </summary>
            <param name="refName"></param>
            <param name="rovName"></param>
            <param name="reverseAble"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Add(Gnsser.EstimatedBaseline)">
            <summary>
            增加一条,如果重复，将覆盖上一条
            </summary>
            <param name="estimatedBaseline"></param>
        </member>
        <member name="P:Gnsser.BaseLineNet.ClosureError">
            <summary>
            闭合差，当网作为闭合回路时。
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineNet.TimePeriod">
            <summary>
            测量时段，通常以最后历元为中心
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineNet.BaseLines">
            <summary>
            所有基线名称
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineNet.SiteNames">
            <summary>
            所有测站名称
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineNet.AverageLength">
            <summary>
            所有基线平均长度
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineNet.TotalLength">
            <summary>
            所有基线长度
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetApproxXyz(System.String)">
            <summary>
            获取坐标
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetOrReversed(Gnsser.GnssBaseLineName)">
            <summary>
            根据名称提取基线，如果是反向的，则提取反向的
            </summary>
            <param name="baseLineName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetSiteCoords">
            <summary>
            测站坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetRepeatBaseLineClosureError(Gnsser.BaseLineNet)">
            <summary>
            提取共同基线，复测基线较差。
            </summary>
            <param name="otherNet"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetSameBaseLineName(Gnsser.BaseLineNet)">
            <summary>
            提取共同基线，异步环检验。
            </summary>
            <param name="otherNet"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.CheckOrSetAndGetClosureError">
            <summary>
            检查闭合差，没有则设置，最后返回。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.CalculateSetAndGetClosureError">
            <summary>
            提取并计算闭合差
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildGraph">
            <summary>
            构造对应的图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetIndependentNet(Gnsser.IndependentLineSelectType)">
            <summary>
            获取独立基线网
            </summary>
            <param name="IndependentLineSelectType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetPath">
            <summary>
            返回基线顺序的路径。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Add(Gnsser.BaseLineNet)">
            <summary>
            添加基线网
            </summary>
            <param name="lines"></param>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetEstimatedBaselines(System.String)">
            <summary>
            包含基线
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetBaselines(System.String)">
            <summary>
            包含基线
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetSiteTable">
            <summary>
            点对像表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetLineTable">
            <summary>
            线对像表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.CompareTo(Gnsser.BaseLineNet)">
            <summary>
            比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.ToReadableText(System.String)">
            <summary>
            可读
            </summary>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildRepeatBaseLineCheckResultTable(Gnsser.RepeatErrorQualityManager,System.String,System.Boolean)">
            <summary>
            重复基线检核结果表格
            </summary>
            <param name="data"></param>
            <param name="netName"></param>
            <param name="isBadOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildRepeatBaseLineError(Gnsser.BaseLineNet,System.Collections.Generic.Dictionary{Gnsser.GnssBaseLineName,Gnsser.BaseLineRepeatError},Gnsser.GnssReveiverNominalAccuracy,System.String)">
            <summary>
            求重复基线较差
            </summary>
            <param name="checkNet"></param>
            <param name="asychCloserErrors"></param>
            <param name="gnssReveiverNominalAccuracy"></param>
            <param name="netName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildTriangularClosureQualies(Gnsser.GnssReveiverNominalAccuracy)">
            <summary>
            生成所有可能的三角形，然后提取网络，计算闭合差 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildTriangularClosureNets">
            <summary>
            生成所有可能的三角形，然后提取网络，计算闭合差 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.BuildSynchNetTrilateralCheckTResultable(System.String,Gnsser.TriguilarNetQualitiyManager,Geo.Times.BufferedTimePeriod,System.Boolean)">
            <summary>
            三边闭合环检核，构建环路环检核结果
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetTriguilarNet(System.Collections.Generic.List{Gnsser.TriangularNetName})">
            <summary>
            提取三角网
            </summary>
            <param name="triNetNames"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.GetTriguilarNet(Gnsser.TriangularNetName)">
            <summary>
            提取三角网
            </summary>
            <param name="triNetName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineNet.Parse(Geo.ObjectTableStorage)">
            <summary>
            单时段单表解析
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IWithEstimatedBaseline">
            <summary>
            具有基线的结果
            </summary>
        </member>
        <member name="M:Gnsser.IWithEstimatedBaseline.GetEstimatedBaseline">
            <summary>
            双站基线定位结果
            </summary>
        </member>
        <member name="T:Gnsser.IWithEstimatedBaselines">
            <summary>
            具有基线的结果
            </summary>
        </member>
        <member name="M:Gnsser.IWithEstimatedBaselines.GetEstimatedBaselines">
            <summary>
            双站基线定位结果
            </summary>
        </member>
        <member name="T:Gnsser.IEstimatedBaseline">
            <summary>
            双站基线定位结果
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ReversedBaseline">
            <summary>
            反向
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.GnssSolverType">
            <summary>
            计算算法类型
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ResultType">
            <summary>
            计算结果类型
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.BaseLineName">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.CorrectionOfRov">
            <summary>
            流动站坐标改正数。
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.CovaMatrix">
            <summary>
            XYZ 协方差阵
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ApproxVector">
            <summary>
            近似向量
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ApproxXyzOfRef">
            <summary>
            参考站坐标
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ApproxXyzOfRov">
            <summary>
            流动站近似坐标
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedVector">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedVectorRmsedXYZ">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedVectorEnu">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.CorrectionOfRovEnu">
            <summary>
            向量改正数ENU
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedXyzOfRov">
            <summary>
            流动站估值坐标
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedGeoCoordOfRov">
            <summary>
            流动站估值大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.EstimatedRmsXyzOfRov">
            <summary>
            流动站估值坐标
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.SiteInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.SiteInfoOfRov">
            <summary>
            流动站信息
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.ClosureError">
            <summary>
            闭合差
            </summary>
        </member>
        <member name="P:Gnsser.IEstimatedBaseline.GeodeticAzimuth">
            <summary>
            大地方位角,单位度小数
            </summary>
        </member>
        <member name="M:Gnsser.IEstimatedBaseline.GetObjectRow">
            <summary>
            以行输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ReadableGnssResultBuilder">
            <summary>
            可读的 GNSS 定位文本信息生成器
            </summary>
        </member>
        <member name="M:Gnsser.ReadableGnssResultBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.ReadableGnssResultBuilder.Build(Gnsser.Service.SimpleGnssResult)">
            <summary>
            生成信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssBaseLineName">
            <summary>
            GNSS 基线名称。
            </summary>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="baseLineName"></param>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            构造函数 
            </summary>
            <param name="rovName"></param>
            <param name="refName"></param>
            <param name="isPath"></param>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.#ctor(Gnsser.ObsSiteInfo,Gnsser.ObsSiteInfo)">
            <summary>
            构造函数 
            </summary>
            <param name="rovName"></param>
            <param name="refName"></param>
            <param name="isPath"></param>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.Init">
            <summary>
            初始化，必须要设置REF和ROV名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.HasPath">
            <summary>
            是否自带路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.RefFileName">
            <summary>
             参考站文件名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.RovFileName">
            <summary>
             流动站文件名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.RefFilePath">
            <summary>
             参考站文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.RovFilePath">
            <summary>
             流动站文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssBaseLineName.ReverseBaseLine">
            <summary>
            反方向基线
            </summary>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.GetBaseLineNameWithRef(System.String)">
            <summary>
            返回以指定名为起始的基线，若无匹配返回null
            </summary>
            <param name="refName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.IsEqualOrReverseEqual(Gnsser.GnssBaseLineName)">
            <summary>
            是否相等，或反向相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.op_Equality(Gnsser.GnssBaseLineName,Gnsser.GnssBaseLineName)">
            <summary>
            是否相等
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.op_Inequality(Gnsser.GnssBaseLineName,Gnsser.GnssBaseLineName)">
            <summary>
            是否相等
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.GetSiteName(System.String,System.Int32)">
            <summary>
            提取测站名称，以文件名表示,且都为大写字母
            </summary>
            <param name="nameOrPath"></param>
            <param name="charCount"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.GetClosuredPath(System.Collections.Generic.List{Gnsser.GnssBaseLineName})">
            <summary>
            获取连接路径
            </summary>
            <param name="baseLines"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.GetNextLine(System.Collections.Generic.List{Gnsser.GnssBaseLineName},Gnsser.GnssBaseLineName)">
            <summary>
            获取下一条线
            </summary>
            <param name="baseLines"></param>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.ContainsOrReversedContains(System.Collections.Generic.List{Gnsser.GnssBaseLineName},Gnsser.GnssBaseLineName)">
            <summary>
            是否包含或相反包含
            </summary>
            <param name="lineNames"></param>
            <param name="lineName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.GetBaseLineName(System.String,System.String)">
            <summary>
            生成基线名称,Ref-Rov
            </summary>
            <param name="rovFileName"></param>
            <param name="refFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssBaseLineName.Parse(System.String)">
            <summary>
            解析
            </summary>
            <param name="lineName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EstimatedBaseline">
            <summary>
            一条基线的平差结果
            </summary>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.#ctor">
            <summary>
            默认
            </summary>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.#ctor(System.String,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.RmsedXYZ,Geo.Algorithm.Matrix,System.Double)">
            <summary>
            最简单的构造函数，支持从文本读取
            </summary>
            <param name="Name"></param>
            <param name="refXYyz"></param>
            <param name="rovXYyz"></param>
            <param name="epoch"></param>
            <param name="EstimatedVector"></param>
            <param name="CovaMatrix"></param>
            <param name="stdDev"></param>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.#ctor(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Geo.Coordinates.RmsedXYZ,Geo.Algorithm.Matrix,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="refSite"></param>
            <param name="rovSite"></param>
            <param name="stdDev"></param>
            <param name="CovaMatrix"></param>
            <param name="RovEstmatedXYZCorrection"></param>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.#ctor(Gnsser.ISiteInfo,Gnsser.ISiteInfo,Geo.Times.Time,Geo.Coordinates.RmsedXYZ,Geo.Algorithm.Matrix,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="epoch"></param>
            <param name="RefName"></param>
            <param name="RovName"></param>
            <param name="CovaMatrix"></param>
            <param name="stdDev"></param>
            <param name="RovEstmatedXYZCorrection"></param>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.NetPeriod">
            <summary>
            所在网络的时段,需要外部指定。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ApporxNetPeriod">
            <summary>
            时段,以历元为中心前后 10分钟
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ResultType">
            <summary>
            计算结果类型
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.GnssSolverType">
            <summary>
            算法类型
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ClosureError">
            <summary>
            基线闭合差长度，默认为1，单位：米
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.Tag">
            <summary>
            方便属性
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.CovaMatrix">
            <summary>
            XYZ  协方差阵, 3 * 3
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.StdDev">
            <summary>
            单位权方差，标准差
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.Epoch">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.BaseLineName">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedVectorRmsedXYZ">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ApproxXyzOfRef">
            <summary>
            参考站坐标，认为是真值。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.SiteInfoOfRef">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.SiteInfoOfRov">
            <summary>
            流动站信息
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.Name">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.VectorName">
            <summary>
            向量名称
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.IsApproxXyzOfRovAvailable">
            <summary>
            流动近似坐标是否可用。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedXyzOfRov">
            <summary>
            流动站估值坐标
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedRmsXyzOfRov">
            <summary>
            估值 XYZ 和 RMS
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedGeoCoordOfRov">
            <summary>
            流动站估值大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.GeoCoordOfRef">
            <summary>
            参考站大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedVector">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.EstimatedVectorEnu">
            <summary>
            估值向量
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.GeodeticAzimuth">
            <summary>
            大地方位角,单位度小数
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.GeodeticLength">
            <summary>
            大地线长，膨胀椭球，以基线中心计算。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.SphereAzimuth">
            <summary>
            球面几何方位角,单位度小数
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ApproxXyzOfRov">
            <summary>
            流动站近似值坐标。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.CorrectionOfRov">
            <summary>
            流动站坐标改正数。
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.CorrectionOfRovEnu">
            <summary>
            向量改正数ENU
            </summary>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ApproxVector">
            <summary>
            初始向量
            </summary>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.SetSiteCoord(System.String,Geo.Coordinates.XYZ)">
            <summary>
            此测站设置为此坐标,通常一个网中，相同测站坐标应该一致
            </summary>
            <param name="name"></param>
            <param name="xyz"></param>
        </member>
        <member name="P:Gnsser.EstimatedBaseline.ReversedBaseline">
            <summary>
            反转基线，最简模式
            </summary>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.GetApproxXyz(System.String)">
            <summary>
            获取近似坐标
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.ToReadableText(System.String)">
            <summary>
            可读
            </summary>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.GetObjectRow">
            <summary>
            用于表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.GetTabTitles">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.GetTabValues">
            <summary>
            此将用于输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.Parse(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            转换
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EstimatedBaseline.GetLineTable(System.Collections.Generic.List{Gnsser.EstimatedBaseline},System.String)">
            <summary>
            用于显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IOrbitResult">
            <summary>
            定轨结果
            </summary>
        </member>
        <member name="P:Gnsser.IOrbitResult.EphemerisResults">
            <summary>
            星历结果
            </summary>
        </member>
        <member name="T:Gnsser.RangeOrbitMatrixBuilder">
            <summary>
            简易伪距轨道确定
            </summary>
        </member>
        <member name="M:Gnsser.RangeOrbitMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            非差轨道确定 构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.SiteSatCount">
            <summary>
            测站卫星射线数量
            </summary>
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.RangeOrbitMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。
            </summary>  
            <returns></returns>
        </member>
        <member name="M:Gnsser.RangeOrbitMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.RangeOrbitMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.RangeOrbitResult">
            <summary>
            简易伪距轨道确定
            </summary>
        </member>
        <member name="M:Gnsser.RangeOrbitResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.RangeOrbitParamNameBuilder,Gnsser.RangeOrbitResult)">
            <summary>
            非差轨道确定
            </summary>
            <param name="Material">历元信息</param>
            <param name="ResultMatrix">平差信息</param>
            <param name="ParamNameBuilder">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="P:Gnsser.RangeOrbitResult.EphemerisResults">
            <summary>
            估值星历。可以用于改正卫星位置，进行迭代计算
            </summary>
        </member>
        <member name="M:Gnsser.RangeOrbitResult.GetTimeCorrectionSeconds(System.Double)">
            <summary>
            由钟差等效距离转换成秒改正数。
            </summary>
            <param name="distance"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EphemerisResult">
            <summary>
            星历结果
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisResult.Original">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisResult.Estimated">
            <summary>
            估值
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisResult.Corrected">
            <summary>
            改正后
            </summary>
        </member>
        <member name="T:Gnsser.RangeOrbitSolver">
            <summary>
            简易伪距轨道确定。
             </summary>
        </member>
        <member name="M:Gnsser.RangeOrbitSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            简易伪距轨道确定
            </summary>
            <param name="DataSourceContext"></param>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.RangeOrbitSolver.EpochEphemerisSetter">
            <summary>
            星历修正，包括地球自传和相对论效应
            </summary>
        </member>
        <member name="T:Gnsser.ZeroDifferOrbitMatrixBuilder">
            <summary>
            非差轨道确定
            </summary>
        </member>
        <member name="M:Gnsser.ZeroDifferOrbitMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            非差轨道确定 构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.SiteSatCount">
            <summary>
            测站卫星射线数量
            </summary>
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.ZeroDifferOrbitMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary>  
            <returns></returns>
        </member>
        <member name="M:Gnsser.ZeroDifferOrbitMatrixBuilder.GetObsNames">
            <summary>
            观测名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.ZeroDifferOrbitMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.ZeroDifferOrbitSolver">
            <summary>
            非差轨道确定。
             </summary>
        </member>
        <member name="M:Gnsser.ZeroDifferOrbitSolver.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            非差轨道确定
            </summary>
            <param name="DataSourceContext"></param>
            <param name="option"></param>
        </member>
        <member name="T:Gnsser.ZeroDifferOrbitResult">
            <summary>
            非差轨道确定
            </summary>
        </member>
        <member name="M:Gnsser.ZeroDifferOrbitResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.ZeroDifferOrbitParamNameBuilder,Gnsser.MultiSiteGnssExtentResult)">
            <summary>
            非差轨道确定
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="ClockEstimationer">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="T:Gnsser.SatValueStorageManager">
            <summary>
            WM 平滑管理器，为了无电离层双差网解
            </summary>
        </member>
        <member name="M:Gnsser.SatValueStorageManager.#ctor(System.Int32,System.Double)">
            <summary>
            默认构造函数
            </summary>
            <param name="epochCount"></param>
            <param name="breakSpanSeconds"></param>
        </member>
        <member name="T:Gnsser.SatValueStorage">
            <summary>
            MW 平滑数据生成器，为了PPP模糊度固定
            </summary>
        </member>
        <member name="M:Gnsser.SatValueStorage.#ctor(System.Int32,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="epochCount"></param>
            <param name="breakSpanSeconds"></param>
        </member>
        <member name="P:Gnsser.SatValueStorage.MwDataSmoothManager">
            <summary>
            平滑数据管理器
            </summary>
        </member>
        <member name="P:Gnsser.SatValueStorage.SmoothedMwValue">
            <summary>
            平滑后的MW值
            </summary>
        </member>
        <member name="M:Gnsser.SatValueStorage.Add(Gnsser.Domain.EpochInformation)">
            <summary>
            添加一个历元，并返回当前历元的平滑结果。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatValueStorage.GetDifferMwValue(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            获取当前星间单差
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SmoothMwProviderManager">
            <summary>
            WM 平滑管理器，为了无电离层双差网解
            </summary>
        </member>
        <member name="M:Gnsser.SmoothMwProviderManager.#ctor(System.Int32,System.Double)">
            <summary>
            默认构造函数
            </summary>
            <param name="epochCount"></param>
            <param name="breakSpanSeconds"></param>
        </member>
        <member name="T:Gnsser.SmoothMwProvider">
            <summary>
            MW 平滑数据生成器，为了PPP模糊度固定
            </summary>
        </member>
        <member name="M:Gnsser.SmoothMwProvider.#ctor(System.Int32,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="epochCount"></param>
            <param name="breakSpanSeconds"></param>
        </member>
        <member name="P:Gnsser.SmoothMwProvider.MwDataSmoothManager">
            <summary>
            平滑数据管理器
            </summary>
        </member>
        <member name="P:Gnsser.SmoothMwProvider.SmoothedMwValue">
            <summary>
            平滑后的MW值
            </summary>
        </member>
        <member name="M:Gnsser.SmoothMwProvider.Add(Gnsser.Domain.EpochInformation)">
            <summary>
            添加一个历元，并返回当前历元的平滑结果。
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothMwProvider.GetDifferMwValue(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            获取当前星间单差
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Models.DueSatPhaseAmbiguityMode">
            <summary>
            双星相位模糊度模型。
            计算相位参数的状态转移模型，
            如果有周跳则是白噪声模型，如果没有周跳，则是常量模型。
            </summary>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.#ctor(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            相位模糊度模型
            </summary>
            <param name="prn"></param>
            <param name="stdDev"></param>
            <param name="stdDevWhenCycled"></param>
        </member>
        <member name="P:Gnsser.Models.DueSatPhaseAmbiguityMode.BasePrn">
            <summary>
            当前基准卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Models.DueSatPhaseAmbiguityMode.IsBasePrnChanged">
            <summary>
            基准星是否改变
            </summary>
        </member>
        <member name="P:Gnsser.Models.DueSatPhaseAmbiguityMode.BasePrnHasCycleSlip">
            <summary>
            基准星是否发生周跳
            </summary>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.SetBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            当前基准卫星编号
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.IsBreaked">
            <summary>
            是否断裂
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Models.DueSatPhaseAmbiguityMode.VarianceWhenCycled">
            <summary>
             White noise variance
            </summary>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.GetTrans">
            <summary>
             Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.GetNoiceVariance">
            <summary>
            Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.Init(Gnsser.Domain.EpochInformation)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.Init(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.DueSatPhaseAmbiguityMode.Init(Gnsser.Domain.MultiSitePeriodInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="T:Gnsser.Models.SiteSatPhaseAmbiguityModel">
            <summary>
            相位模糊度模型。
            计算相位参数的状态转移模型，
            如果有周跳则是白噪声模型，如果没有周跳，则是常量模型。
            </summary>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.#ctor(System.String,Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            相位模糊度模型
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="stdDev"></param>
            <param name="stdDevWhenCycled"></param>
        </member>
        <member name="P:Gnsser.Models.SiteSatPhaseAmbiguityModel.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Models.SiteSatPhaseAmbiguityModel.VarianceWhenCycled">
            <summary>
             White noise variance
            </summary>
        </member>
        <member name="P:Gnsser.Models.SiteSatPhaseAmbiguityModel.Variance">
            <summary>
            方差
            </summary>
        </member>
        <member name="P:Gnsser.Models.SiteSatPhaseAmbiguityModel.HasCycleSlip">
            <summary>
            Boolean stating if there is a cycle slip at current epoch
            </summary>
        </member>
        <member name="P:Gnsser.Models.SiteSatPhaseAmbiguityModel.Prn">
            <summary>
            当前卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.IsBreaked">
            <summary>
            是否
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.GetTrans">
            <summary>
             Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.GetNoiceVariance">
            <summary>
            Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.Init(Gnsser.Domain.EpochInformation)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.Init(Gnsser.Domain.PeriodInformation)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.Init(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SiteSatPhaseAmbiguityModel.Init(Gnsser.Domain.MultiSitePeriodInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="T:Gnsser.Models.SingleSatPhaseAmbiguityModel">
            <summary>
            相位模糊度模型。
            计算相位参数的状态转移模型，
            如果有周跳则是白噪声模型，如果没有周跳，则是常量模型。
            </summary>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.#ctor(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            相位模糊度模型
            </summary>
            <param name="prn"></param>
            <param name="stdDev"></param>
            <param name="stdDevWhenCycled"></param>
        </member>
        <member name="P:Gnsser.Models.SingleSatPhaseAmbiguityModel.VarianceWhenCycled">
            <summary>
             White noise variance
            </summary>
        </member>
        <member name="P:Gnsser.Models.SingleSatPhaseAmbiguityModel.Variance">
            <summary>
            方差
            </summary>
        </member>
        <member name="P:Gnsser.Models.SingleSatPhaseAmbiguityModel.HasCycleSlip">
            <summary>
            Boolean stating if there is a cycle slip at current epoch
            </summary>
        </member>
        <member name="P:Gnsser.Models.SingleSatPhaseAmbiguityModel.Prn">
            <summary>
            当前卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.IsBreaked">
            <summary>
            是否
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.GetTrans">
            <summary>
             Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.GetNoiceVariance">
            <summary>
            Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.Init(Gnsser.Domain.EpochInformation)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.Init(Gnsser.Domain.PeriodInformation)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.Init(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.Models.SingleSatPhaseAmbiguityModel.Init(Gnsser.Domain.MultiSitePeriodInfo)">
            <summary>
            初始化
            </summary>
            <param name="material"></param>
        </member>
        <member name="T:Gnsser.Models.RandomWalkModel">
            <summary>
            通用测站随机游走模型。
            通过时间和初始方差确定转移方差。
            </summary>
        </member>
        <member name="M:Gnsser.Models.RandomWalkModel.#ctor(System.Double)">
            <summary>
            通用随机游走模型
            </summary>
            <param name="stdDev"></param>
        </member>
        <member name="P:Gnsser.Models.RandomWalkModel.BaseVariance">
            <summary>
            单位间隔方差量，如 1 秒。
            </summary>
        </member>
        <member name="M:Gnsser.Models.RandomWalkModel.GetNoiceVariance">
            <summary>
            方差值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.RandomWalkModel.Init(Gnsser.Domain.EpochInformation)">
            <summary>
            准备
            </summary>
            <param name="epochSate"></param>
        </member>
        <member name="M:Gnsser.Models.RandomWalkModel.Update(Geo.Times.Time)">
            <summary>
            时间更新。
            </summary>
            <param name="time"></param>
        </member>
        <member name="T:Gnsser.Models.BaseStateTransferModel">
            <summary>
            状态随机模型的基类
            </summary>
        </member>
        <member name="M:Gnsser.Models.BaseStateTransferModel.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Models.BaseStateTransferModel.Name">
            <summary>
            对应的参数名称
            </summary>
        </member>
        <member name="P:Gnsser.Models.BaseStateTransferModel.PreviousTime">
            <summary>
            上一历元
            </summary>
        </member>
        <member name="P:Gnsser.Models.BaseStateTransferModel.CurrentTime">
             <summary>
            当前历元
             </summary>
        </member>
        <member name="M:Gnsser.Models.BaseStateTransferModel.GetTrans">
            <summary>
            状态转移系数。  
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.BaseStateTransferModel.GetNoiceVariance">
            <summary>
            噪声模型，随机模型方差，权逆阵。 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.BaseStateTransferModel.Init(Gnsser.ISiteSatObsInfo)">
            <summary>
            初始化
            </summary>
            <param name="epochInfo"></param>
        </member>
        <member name="M:Gnsser.Models.BaseStateTransferModel.Init(Gnsser.Domain.EpochInformation)">
            <summary>
            初始化
            </summary> 
            <param name="epochInfo">历元信息</param>
        </member>
        <member name="T:Gnsser.Models.StaticTransferModel">
            <summary>
            静态模型。 
            </summary>
        </member>
        <member name="M:Gnsser.Models.StaticTransferModel.#ctor(System.Double)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Gnsser.Models.StaticTransferModel.Variance">
            <summary>
            静态模型噪声方差
            </summary>
        </member>
        <member name="M:Gnsser.Models.StaticTransferModel.GetTrans">
            <summary>
            状态转移系数。  Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.StaticTransferModel.GetNoiceVariance">
            <summary>
            噪声模型，权逆阵。 Get element of the process noise matrix Q
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Models.WhiteNoiseModel">
            <summary>
             This class compute the elements of Phi and Q matrices corresponding  to a white noise stochastic model.
            </summary>
        </member>
        <member name="F:Gnsser.Models.WhiteNoiseModel.variance">
            <summary>
            White noise variance
            </summary>
        </member>
        <member name="M:Gnsser.Models.WhiteNoiseModel.#ctor(System.Double)">
            <summary>
            Common constructor
            </summary>
            <param name="stdDev"> Standard deviation (sigma) of white noise process</param>
        </member>
        <member name="M:Gnsser.Models.WhiteNoiseModel.GetTrans">
            <summary>
            Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Models.WhiteNoiseModel.GetNoiceVariance">
            <summary>
            Get element of the state transition matrix Phi
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BasedSatMultiSiteObsStreamer">
            <summary>
            具有基准卫星的多站数据流
            </summary>
        </member>
        <member name="M:Gnsser.BasedSatMultiSiteObsStreamer.#ctor(Gnsser.SatelliteNumber,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="BasePrn"></param>
            <param name="OutputDirectory"></param>
        </member>
        <member name="P:Gnsser.BasedSatMultiSiteObsStreamer.BasePrn">
            <summary>
            基础卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.BasedSatMultiSiteObsStreamer.PreProcess(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            预处理
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasedSatMultiSiteObsStreamer.BuildGnssOption">
            <summary>
            构建选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.CaculateType">
            <summary>
            计算类型
            </summary>
        </member>
        <member name="F:Gnsser.CaculateType.Filter">
            <summary>
            滤波，使用先验信息
            </summary>
        </member>
        <member name="F:Gnsser.CaculateType.Independent">
            <summary>
            独立计算
            </summary>
        </member>
        <member name="T:Gnsser.GnssSolverFactory">
            <summary>
            GNSS 计算器生成工厂
            </summary>
        </member>
        <member name="P:Gnsser.GnssSolverFactory.DataSourceContext">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.GnssSolverFactory.GnssOption">
            <summary>
            选项
            </summary>
        </member>
        <member name="M:Gnsser.GnssSolverFactory.Build">
            <summary>
            创建
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssSolverFactory.Create(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            生成GNSS计算器
            </summary>
            <param name="type"></param>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IGnssSolver">
            <summary>
            GNSS 计算器
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver.Adjustment">
            <summary>
            平差矩阵
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver.DataSourceContext">
            <summary>
            数据源上下文
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver.BaseParamCount">
            <summary>
            基础的，不变的参数数量，如伪距定位通常为 4.如果PPP则为5，其它为可变的卫星模糊度参数。 
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver.MatrixBuilder">
            <summary>
            矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.IGnssSolver.Complete">
            <summary>
            计算完后激活
            </summary>
        </member>
        <member name="T:Gnsser.IGnssSolver`2">
            <summary>
            GNSS产品计算器接口
            </summary>
        </member>
        <member name="P:Gnsser.IGnssSolver`2.MatrixBuilder">
            <summary>
            矩阵生成器
            </summary>
        </member>
        <member name="T:Gnsser.BaseLine">
            <summary>
            基线向量。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.BaseLine.#ctor(System.String,Geo.Coordinates.XYZ)">
            <summary>
            构造函数 
            </summary>
            <param name="name"></param>
            <param name="vector"></param>
        </member>
        <member name="M:Gnsser.BaseLine.#ctor(System.String,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="P:Gnsser.BaseLine.Name">
            <summary>
             名称
            </summary>
        </member>
        <member name="P:Gnsser.BaseLine.Vector">
            <summary>
            向量。
            </summary>
        </member>
        <member name="P:Gnsser.BaseLine.Cova">
            <summary>
            方差
            </summary>
        </member>
        <member name="T:Gnsser.BaseLineSelectionType">
            <summary>
            基线选择类型
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.全基线">
            <summary>
            全基线法，用于工程测量
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.最短路径">
            <summary>
            最短路径法
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.最多观测量">
            <summary>
            最多历元观测量法
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.中心站法">
            <summary>
            中心站法
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.混合法">
            <summary>
            混合法
            </summary>
        </member>
        <member name="F:Gnsser.BaseLineSelectionType.外部文件">
            <summary>
            指定外部文件输入
            </summary>
        </member>
        <member name="T:Gnsser.BaseLineSelector">
            <summary>
            调用器。选择独立基线。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineSelector.#ctor(Gnsser.BaseLineSelectionType,System.String,System.Collections.Generic.List{Gnsser.GnssBaseLineName})">
            <summary>
            基线选择
            </summary>
            <param name="BaseLineSelectionType"></param>
            <param name="IndicatedBaseLines"></param>
            <param name="stringParam">字符串参数，可以是中心站名称，也可以是基线文件路径，取决于类型</param>
        </member>
        <member name="M:Gnsser.BaseLineSelector.#ctor(Gnsser.BaseLineSelectionType,System.String,System.String)">
            <summary>
            基线选择
            </summary>
            <param name="BaseLineSelectionType"></param>
            <param name="outerBaseLineFilePath"></param>
            <param name="stringParam">字符串参数，可以是中心站名称，也可以是基线文件路径，取决于类型</param>
        </member>
        <member name="P:Gnsser.BaseLineSelector.IndicatedBaseLines">
            <summary>
            指定的GNSS基线名称列表。
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineSelector.BaseLineSelectionType">
            <summary>
            基线选择类型
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineSelector.CenterSiteName">
            <summary>
            中心站名称
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineSelector.GetFileBaselines(System.String[])">
            <summary>
            获取基线
            </summary>
            <param name="obsFilePaths"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseLineSelector.GetBaselines(System.String[])">
            <summary>
            生成基线名称
            </summary>
            <param name="obsFilePaths"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.CenterBaseLineBuilder">
            <summary>
            中心站法
            </summary>
        </member>
        <member name="M:Gnsser.CenterBaseLineBuilder.#ctor(System.String[],System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="obsFilePaths"></param>
            <param name="refSiteName"></param>
        </member>
        <member name="P:Gnsser.CenterBaseLineBuilder.obsFilePaths">
            <summary>
            观测路径
            </summary>
        </member>
        <member name="P:Gnsser.CenterBaseLineBuilder.refSiteName">
            <summary>
            参考站
            </summary>
        </member>
        <member name="M:Gnsser.CenterBaseLineBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ShortestPathBaseLineBuilder">
            <summary>
            最短路径
            </summary>
        </member>
        <member name="M:Gnsser.ShortestPathBaseLineBuilder.#ctor(System.String[])">
            <summary>
            默认构造函数
            </summary>
            <param name="obsFilePaths"></param>
        </member>
        <member name="P:Gnsser.ShortestPathBaseLineBuilder.obsFilePaths">
            <summary>
            观测路径
            </summary>
        </member>
        <member name="M:Gnsser.ShortestPathBaseLineBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ShortestPathBaseLineBuilder.BuildGraph(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            构造对应的图
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteObsBaselineWeighter">
            <summary>
            测站基线加权
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaselineWeighter.#ctor(Gnsser.SiteObsBaselineManager)">
            <summary>
            构造函数
            </summary>
            <param name="ObsBaseLineManager"></param>
        </member>
        <member name="P:Gnsser.SiteObsBaselineWeighter.ObsBaseLineManager">
            <summary>
            观测基线
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaselineWeighter.GetWeight(AnyInfo.Graphs.Structure.INode,AnyInfo.Graphs.Structure.INode)">
            <summary>
            获取权
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TotalObsBaseLineBuilder">
            <summary>
            全基线生成器
            </summary>
        </member>
        <member name="M:Gnsser.TotalObsBaseLineBuilder.#ctor(System.String[])">
            <summary>
            默认构造函数
            </summary>
            <param name="obsFilePaths"></param>
        </member>
        <member name="P:Gnsser.TotalObsBaseLineBuilder.obsFilePaths">
            <summary>
            观测路径
            </summary>
        </member>
        <member name="M:Gnsser.TotalObsBaseLineBuilder.BuildTotalBaseLines(System.String[])">
            <summary>
            生成全基线
            </summary>
            <param name="obsFilePaths"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TotalBaseLineBuilder">
            <summary>
            全基线生成器
            </summary>
        </member>
        <member name="M:Gnsser.TotalBaseLineBuilder.#ctor(System.String[])">
            <summary>
            默认构造函数
            </summary>
            <param name="obsFilePaths"></param>
        </member>
        <member name="P:Gnsser.TotalBaseLineBuilder.obsFilePaths">
            <summary>
            观测路径
            </summary>
        </member>
        <member name="M:Gnsser.TotalBaseLineBuilder.BuildTotalBaseLines(System.String[])">
            <summary>
            生成全基线
            </summary>
            <param name="obsFilePaths"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IndicatedBaseLineBuilder">
            <summary>
            指定的基线生成器
            </summary>
        </member>
        <member name="M:Gnsser.IndicatedBaseLineBuilder.#ctor(System.String[],System.Collections.Generic.List{Gnsser.GnssBaseLineName})">
            <summary>
            默认构造函数
            </summary>
            <param name="obsFilePaths"></param>
            <param name="indicatedLines"></param>
        </member>
        <member name="P:Gnsser.IndicatedBaseLineBuilder.obsFilePaths">
            <summary>
            观测路径
            </summary>
        </member>
        <member name="P:Gnsser.IndicatedBaseLineBuilder.IndicatedLines">
            <summary>
            指定的线路
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection">
            <summary>
            从同步观测文件中选取观测量最多的独立基线
            </summary>
        </member>
        <member name="M:Gnsser.MaxEpochIndepentBaselineSelection.#ctor(System.String[])">
            <summary>
            选择独立基线
            </summary>
            <param name="obsFilePaths">同步网中观测文件</param>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.ObsFilesPaths">
            <summary>
            观测文件的路径
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.IndepentBaselinesInfo">
            <summary>
            返回的选择的独立基线信息，独立基线数=观测文件数-1
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.DataOfAllSites">
            <summary>
            所有测站数据的观测卫星信息
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.SiteEpochSatData">
            <summary>
            每个测站文件的观测数据集合
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.SiteEpochSatData.SiteNumber">
            <summary>
            测站编号
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.SiteEpochSatData.SiteName">
            <summary>
            测站名
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.SiteEpochSatData.TimeInfo">
            <summary>
            观测历元集合
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.SiteEpochSatData.PrnInfo">
            <summary>
            观测历元的卫星集合
            </summary>
        </member>
        <member name="M:Gnsser.MaxEpochIndepentBaselineSelection.Init">
            <summary>
            初始化，读取赋值
            </summary>
        </member>
        <member name="F:Gnsser.MaxEpochIndepentBaselineSelection.mgraph">
            <summary>
            图/树的存储结构
            </summary>
        </member>
        <member name="F:Gnsser.MaxEpochIndepentBaselineSelection.road">
            <summary>
            边的存储结构
            </summary>
        </member>
        <member name="F:Gnsser.MaxEpochIndepentBaselineSelection.v">
            <summary>
            点的存储
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.Node">
            <summary>
            节点
            </summary>
        </member>
        <member name="P:Gnsser.MaxEpochIndepentBaselineSelection.Node.Tag">
            <summary>
            绑定的对象
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.Edge">
            <summary>
            边
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.VertexType">
            <summary>
            结点类型定义
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.MGraph">
            <summary>
            图的存储结构
            </summary>
        </member>
        <member name="T:Gnsser.MaxEpochIndepentBaselineSelection.Road">
            <summary>
            边的存储结构
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.ResidualsAnalysis">
            <summary>
            验后残差分析
            如果没有通过检验，一般是未发现的周跳或粗差，这里统一当粗差处理，剔除。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.ResidualsAnalysis.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gnsser.Checkers.ResidualsAnalysis.MaxDeltaTime">
            <summary>
            maximum interval of time allowed between two successive epochs in fraction
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.ResidualsAnalysis.lastBasePrn">
            <summary>
            基准星
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.ResidualsAnalysis.lastObsTime">
            <summary>
            历元观测时间
            </summary>
        </member>
        <member name="F:Gnsser.Checkers.ResidualsAnalysis.ListPrnRemove">
            <summary>
            待移除的卫星，一次只删除一个
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.ResidualsAnalysis.Detect(Gnsser.Domain.EpochInformation@,Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            PPP的残差分析
            </summary>
            <param name="rovEpochInfo"></param>
            <param name="refEpochInfo"></param>
            <param name="Adjustment"></param>
            <param name="currentBasePrn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.ResidualsAnalysis.FilterData">
            <summary>
             a class used to store filter satData
            </summary>
        </member>
        <member name="F:Gnsser.Checkers.ResidualsAnalysis.FilterData.obsEpoch">
            <summary>
            the current epoch time 
            </summary>
        </member>
        <member name="F:Gnsser.Checkers.ResidualsAnalysis.FilterData.residualSquare">
            <summary>
            residual at current time, v=ax-l, det2= v * v 
            </summary>
        </member>
        <member name="F:Gnsser.Checkers.ResidualsAnalysis.FilterData.count">
            <summary>
            有效的个数
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.EpochSitesMissingChecker">
            <summary>
            是否缺失测站检核器
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EpochSitesMissingChecker.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="siteCount"></param>
        </member>
        <member name="T:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker">
            <summary>
            多站指定卫星检核
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker.#ctor(Gnsser.SatelliteNumber)">
            <summary>
            构造函数
            </summary>
            <param name="BasePrn"></param>
        </member>
        <member name="P:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker.BasePrn">
            <summary>
            基准卫星
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Checkers.MultiSiteIndicatedSatContainedChecker.Check(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            检核
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.IndicatedSatContainedChecker">
            <summary>
            是否包含了指定的卫星
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.IndicatedSatContainedChecker.#ctor(Gnsser.SatelliteNumber)">
            <summary>
            构造函数
            </summary>
            <param name="prn">必须包含的卫星</param>
        </member>
        <member name="M:Gnsser.Checkers.IndicatedSatContainedChecker.#ctor(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            构造函数
            </summary>
            <param name="shouldContainPrns">必须包含的卫星</param>
        </member>
        <member name="P:Gnsser.Checkers.IndicatedSatContainedChecker.Prns">
            <summary>
            编号
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.IndicatedSatContainedChecker.Check(Gnsser.Domain.EpochInformation)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="epochInfo"></param>
        </member>
        <member name="T:Gnsser.Checkers.MultiSiteEpochCheckingManager">
            <summary>
            历元信息检核管理器。
            目前检核只针对当前历元观测数据，可以并行、共用、重用等，无记录效用和互相影响。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MultiSiteEpochCheckingManager.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MultiSiteEpochCheckingManager.GetDefault(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            提供一个基础的检核，默认需要载波数据，观测5颗星。如果不用满足这些条件，请override。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.SlipMarker">
            <summary>
            周跳标记。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.SlipMarker.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time,Gnsser.FrequenceType)">
            <summary>
            构造函数
            </summary>
            <param name="Prn"></param>
            <param name="Time"></param>
            <param name="ObservationNames"></param>
        </member>
        <member name="P:Gnsser.Checkers.SlipMarker.PhaseName">
            <summary>
            观测量类型
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.SlipMarker.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.SlipMarker.GpsTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.SlipMarkerContainer">
            <summary>
            周跳容器，负责存储一个数据源的周跳信息。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.SlipMarkerContainer.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.SlipMarkerContainer.SetMarker(Gnsser.Checkers.SlipMarker)">
            <summary>
            设置一个Maker值
            </summary>
            <param name="marker"></param>
        </member>
        <member name="M:Gnsser.Checkers.SlipMarkerContainer.HasSlipe(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            任意一个频率跳变产生都视为跳变了。
            </summary>
            <param name="satelliteType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.EpochInfoChecker">
            <summary>
            历元信息检核
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.IEpochInfoChecker">
            <summary>
            历元信息检核
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.EphemerisTimePeriodAvailableChecker">
            <summary>
            观测时间是否有效
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EphemerisTimePeriodAvailableChecker.#ctor(Gnsser.Service.IEphemerisService)">
            <summary>
            构造函数
            </summary>
            <param name="EphemerisService">星历服务</param>
        </member>
        <member name="M:Gnsser.Checkers.EphemerisTimePeriodAvailableChecker.Check(Gnsser.Domain.EpochInformation)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="epochInfo"></param>
        </member>
        <member name="T:Gnsser.Checkers.EpochObsValueValidityChecker">
            <summary>
            观测数据合法性检核。
            包括频率数量，数值区间等。致命性错误，无频率不足，则直接返回false，其它的如观测量问题则标记。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EpochObsValueValidityChecker.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="GnssOption">设置</param>
        </member>
        <member name="P:Gnsser.Checkers.EpochObsValueValidityChecker.checkPhase">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EpochObsValueValidityChecker.Check(Gnsser.Domain.EpochInformation)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="epochInfo"></param>
        </member>
        <member name="T:Gnsser.Checkers.EpochCheckingManager">
            <summary>
            历元信息检核管理器。
            目前检核只针对当前历元观测数据，可以并行、共用、重用等，无记录效用和互相影响。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EpochCheckingManager.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.EpochCheckingManager.GetDefaultCheckers(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            提供一个基础的检核，默认需要载波数据，观测5颗星。如果不用满足这些条件，请override。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.CliffyStdChecker">
            <summary>
            均方差/标准差检核。
            去除均方差陡峭的平差结果。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.CliffyStdChecker.#ctor(System.Double,System.Double)">
            <summary>
            标准差检核构造函数。
            </summary>
            <param name="maxTimes">相对于前均方差平均值的最大倍数</param>
            <param name="GreenPass">绿色通信证，小于此直接放行</param>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.MaxTimes">
            <summary>
            相对于前一均方差的最大倍数
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.PrevValidStd">
            <summary>
            上一次有效的STD
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.Index">
            <summary>
            记录比较编号，当断裂发生后，重新纪录结果。
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.LastValidIndex">
            <summary>
            上一次有效的编号
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.MaxBreakCount">
            <summary>
            最大的断裂数量
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.GreenPass">
            <summary>
            绿色通行证
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.CliffyStdChecker.CurrentMaxAlllowed">
            <summary>
            当前最大允许
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.CliffyStdChecker.Check(Gnsser.Service.BaseGnssResult)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="adjust"></param>
        </member>
        <member name="T:Gnsser.Checkers.MaxStdChecker">
            <summary>
            均方差/标准差检核。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MaxStdChecker.#ctor(System.Double)">
            <summary>
            标准差检核构造函数。
            </summary>
            <param name="maxStdDev"></param>
        </member>
        <member name="P:Gnsser.Checkers.MaxStdChecker.MaxStdDev">
            <summary>
            最大标准差
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.MaxStdChecker.Check(Gnsser.Service.BaseGnssResult)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="adjust"></param>
        </member>
        <member name="T:Gnsser.Checkers.GnssResultCheckingManager">
            <summary>
            结果检核，组合检核。
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.GnssResultCheckingManager.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.Checkers.GnssResultCheckingManager.Checkers">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.GnssResultCheckingManager.Add(Gnsser.Checkers.IGnssResultChecker)">
            <summary>
            添加一个检核器。
            </summary>
            <param name="checker"></param>
        </member>
        <member name="M:Gnsser.Checkers.GnssResultCheckingManager.Check(Gnsser.Service.BaseGnssResult)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="checkee">被检核者</param>
        </member>
        <member name="M:Gnsser.Checkers.GnssResultCheckingManager.GetDefault(Gnsser.GnssProcessOption)">
            <summary>
            默认结果检核
            </summary>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Checkers.IGnssResultChecker">
            <summary>
            IPositionResultChecker 质量检核
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.IGnssResultChecker.Check(Gnsser.Service.BaseGnssResult)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="GnssResult"></param>
        </member>
        <member name="P:Gnsser.Checkers.IGnssResultChecker.Exception">
            <summary>
            异常或错误信息，当且仅当检查不通过时，才具有该信息。
            </summary>
        </member>
        <member name="T:Gnsser.Checkers.GnssResultChecker">
            <summary>
            历元计算结果检核
            </summary>
        </member>
        <member name="M:Gnsser.Checkers.GnssResultChecker.Check(Gnsser.Service.BaseGnssResult)">
            <summary>
            检核是否满足要求
            </summary>
            <param name="positionResult">历元计算结果</param>
        </member>
        <member name="P:Gnsser.Checkers.GnssResultChecker.Exception">
            <summary>
            异常或错误信息，当且仅当检查不通过时，才具有该信息。
            </summary>
        </member>
        <member name="T:Gnsser.NetDoubleDifferMatrixBuilder">
            <summary>
            双差网解定位
            </summary>
        </member>
        <member name="M:Gnsser.NetDoubleDifferMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            双差网解定位 构造函数。
            </summary>
            <param name="recInfo">观测信息</param>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.NetDoubleDifferMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.NetDoubleDifferMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="M:Gnsser.NetDoubleDifferMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建初始先验参数值和协方差阵。只会执行一次。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.NetDoubleDifferMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.NetDoubleDifferMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.NetDoubleDifferMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.NetDoubleDifferMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.NetDoubleDifferResult">
            <summary>
            双差网解定位结果
            </summary>
        </member>
        <member name="M:Gnsser.NetDoubleDifferResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.ClockEstimationResult)">
            <summary>
            双差网解定位构造函数
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="ClockEstimationer">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="M:Gnsser.NetDoubleDifferResult.GetAmbiguityDistace(System.String,Gnsser.SatelliteNumber)">
            <summary>
            
            </summary>
            <param name="SiteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.NetDoubleDifferResult.GetTabTitles">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.NetDoubleDifferResult.PrnWithSlipss">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gnsser.NetDoubleDifferPositioner">
            <summary>
            双差网解定位。
             </summary>
        </member>
        <member name="T:Gnsser.MultiSiteGnssExtentMatrixBuilder">
            <summary>
            多站单历元GNSS计算预留测试类
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteGnssExtentMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            多站单历元GNSS计算预留测试类 构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.MultiSiteGnssExtentMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteGnssExtentMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.MultiSiteGnssExtentMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteGnssExtentMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.MultiSiteGnssExtentMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteGnssExtentPositioner">
            <summary>
            多站单历元GNSS计算预留测试类。
             </summary>
        </member>
        <member name="M:Gnsser.MultiSiteGnssExtentPositioner.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="model"></param>
        </member>
        <member name="T:Gnsser.MultiSiteGnssExtentResult">
            <summary>
            非差轨道确定
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteGnssExtentResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.MultiSiteGnssExtentResult)">
            <summary>
            双差网解定位构造函数
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="ClockEstimationer">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="M:Gnsser.MultiSiteGnssExtentResult.GetTabTitles">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MultiSiteGnssExtentResult.PrnWithSlipss">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gnsser.ObsPhaseType">
            <summary>
            观测相位类型
            </summary>
        </member>
        <member name="T:Gnsser.ProcessType">
            <summary>
            数据处理流程类型
            </summary>
        </member>
        <member name="F:Gnsser.ProcessType.预处理并计算">
            <summary>
            预处理后直接计算，不输出预处理中间过程
            </summary>
        </member>
        <member name="F:Gnsser.ProcessType.预处理">
            <summary>
            预处理,对输入数据进行判断、标记、格式化
            </summary>
        </member>
        <member name="F:Gnsser.ProcessType.仅计算">
            <summary>
            仅计算，默认数据已经预处理了。
            </summary>
        </member>
        <member name="T:Gnsser.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="F:Gnsser.PositionType.静态定位">
            <summary>
            静态定位
            </summary>
        </member>
        <member name="F:Gnsser.PositionType.动态定位">
            <summary>
            动态定位
            </summary>
        </member>
        <member name="T:Gnsser.SmoothRangeType">
            <summary>
            平滑伪距方法
            </summary>
        </member>
        <member name="F:Gnsser.SmoothRangeType.PhaseSmoothRange">
            <summary>
            载波相位平滑伪距
            </summary>
        </member>
        <member name="F:Gnsser.SmoothRangeType.PolyfitRange">
            <summary>
            多项式拟合伪距
            </summary>
        </member>
        <member name="T:Gnsser.GnssProcessOption">
            <summary>
            Gnss 计算配置信息，数据处理选项。配置数据源。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.Data">
            <summary>
            核心存储对象
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.Tag">
            <summary>
            对象绑定
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAllowedRmsOfMw">
             <summary>
            MW最大允许的RMS
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputPeriodData">
            <summary>
            是否输出注册的周期数据
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableSiteSatPeriodDataService">
            <summary>
            是否启用测站时段参数注册服务
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableSatAppearenceService">
            <summary>
            是否启用测站时段注册服务
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinuteOfBreakOffBothEnds">
            <summary>
            掐头去尾历元分钟
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsBreakOffBothEnds">
            <summary>
            观测数据掐头去尾
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRemoveIonoFreeUnavaliable">
            <summary>
            无法组成无电离层组合的观测量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ObsPhaseType">
            <summary>
            相位类型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GnssReveiverNominalAccuracy">
            <summary>
            接收机标称精度
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SequentialEpochCountOfAccuEval">
            <summary>
            历元连续稳定数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxDifferOfAccuEval">
            <summary>
            最大允许偏差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAllowedRmsOfAccuEval">
            <summary>
            最大允许的RMS
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAllowedDifferAfterConvergence">
            <summary>
            收敛后允许的最大偏差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAllowedConvergenceTime">
            <summary>
            最大允许的收敛时间
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.KeyLabelCharCount">
            <summary>
            文本字符长度
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPhaseInMetterOrCycle">
            <summary>
            相位单位是米，还是周。由于频繁设置，因此设置为内属性。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRealTimeAmbiFixWhenOuterAmbiFileFailed">
            <summary>
            当外部文件模糊度固定失败后，是否采用实时模糊度固定算法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SatsToBeRemoved">
            <summary>
            移除指定卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableRemoveSats">
            <summary>
            是否移除指定卫星，在某些场合使用
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IndicatedBaseSiteName">
            <summary>
            基准测站名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StepOfRecursive">
            <summary>
            迭代最小二乘阶段
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUseFixedParamDirectly">
            <summary>
            是否直接进行模糊度固定，通常用于外部文件。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOnlySameParam">
            <summary>
            不同历元是否只允许处理相同的参数，否则处理结束，如卫星改变。主要用来测试。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IonoSourceTypeForCorrection">
            <summary>
            电离层改正采用的模型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BaseLineSelectionType">
            <summary>
            基线选择
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BaseSatSelectionType">
            <summary>
            基准星选择算法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SmoothRangeType">
            <summary>
            平滑伪距方法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SmoothRangeSuperPosType">
            <summary>
            平滑算法类型，测试用的
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IonoDifferCorrectionType">
            <summary>
            相位平滑伪距值是否采用电离层拟合变化
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.TopSpeedModel">
            <summary>
            快速模式
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOption.#ctor">
            <summary>
            定位选项 默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOption.#ctor(Gnsser.OptionConfig)">
            <summary>
            构造。
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Gnsser.GnssProcessOption.Set(Gnsser.OptionName,System.Object,System.String,System.String)">
            <summary>
            设置
            </summary>
            <param name="name"></param>
            <param name="obj"></param>
            <param name="group"></param>
            <param name="comment"></param>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetEnumType``1(Gnsser.OptionName)">
            <summary>
            获取枚举类型，仅枚举类型适用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetXYZ(Gnsser.OptionName)">
            <summary>
            获取XYZ对象
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.GnssProcessOption.GetListString(Gnsser.OptionName)" -->
        <member name="M:Gnsser.GnssProcessOption.GetDouble(Gnsser.OptionName)">
            <summary>
            获取双精度浮点数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetInt(Gnsser.OptionName)">
            <summary>
            获取整形
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetBool(Gnsser.OptionName,System.Boolean)">
            <summary>
            获取布尔值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDateTime(Gnsser.OptionName)">
            <summary>
            获取时间
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetString(Gnsser.OptionName)">
            <summary>
            获取字符串
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetStringLines(Gnsser.OptionName)">
            <summary>
            获取字符串
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.Set(Gnsser.OptionName,System.Collections.Generic.List{System.String})">
            <summary>
            获取字符串
            </summary>
            <param name="name"></param>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsConnectIgsDailyProduct">
            <summary>
            是否拼接IGS产品
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OrdinalAndReverseCount">
            <summary>
            正反算， 顺序-逆序计算. 0表示只按照默认配置，单向计算一次。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsReversedDataSource">
            <summary>
            是否逆序数据流
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsClearOutBufferWhenReversing">
            <summary>
            在正反算时是否清空输出缓存
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.PositionType">
            <summary>
            定位类型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ProcessType">
            <summary>
            数据处理类型，是否为预处理等
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsAdjustEnabled">
            <summary>
            是否启用平差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.AdjustmentType">
            <summary>
            平差类型选项
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.RinexObsFileFormatType">
            <summary>
            观测文件格式化处理类型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OutputRinexVersion">
            <summary>
            RINEX 输出版本 2.11 或 3.02
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GnssSolverType">
            <summary>
            GNSS 解算器类型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StartIndex">
            <summary>
            计算起始历元编号。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.CaculateCount">
            <summary>
            计算数量，从起始编号开始计算。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ExtraStreamLoopCount">
            <summary>
            数据流一次计算（正算或反算）的额外的循环次数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsApproxXyzRequired">
            <summary>
            是否需要测站初始值,如果需要，而测站值为空，则将自动进行计算设置。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.InitApproxXyzRms">
            <summary>
            坐标初始中误差.用于初始赋权.默认为100米。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.InitApproxXyz">
            <summary>
            坐标初始.用于初始赋权
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingApproxXyz">
            <summary>
            是否指定初始坐标
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingApproxXyzRms">
            <summary>
            是否指定近似坐标
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUpdateStationInfo">
            <summary>
            是否更新测站信息
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatedEphemerisPathes">
            <summary>
            是否制定了星历，哪怕一个
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetIndicatedEphemerisPathes">
            <summary>
            获取已经指定路径的系统星历，若没有指定的，则为0个
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ObsFilePath">
            <summary>
            单个观测文件，第一个
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ObsFiles">
            <summary>
            观测文件路径，逗号“,”分隔
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsLengthPhaseValue">
            <summary>
            载波相位是否是以米为单位，如Android接收机单位为米。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsObsDataRequired">
            <summary>
            是否需要观测数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingClockFile">
            <summary>
            是否指定钟差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingErpFile">
            <summary>
            是否指定ERP
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsP2C2Enabled">
            <summary>
            是否需要 P2C2 
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IonoGridFilePath">
            <summary>
            格网电离层文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingGridIonoFile">
            <summary>
            是否指定格网电离层文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GnsserEpochIonoFilePath">
            <summary>
            历元电离层参数文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUseUniqueEphemerisFile">
            <summary>
            是否全部使用一个星历数据源，将采用 EphemerisFilePath
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingEphemerisFile">
            <summary>
            是否指定星历数据源默认GPS，具有最高优先权
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingBdsEphemerisFile">
            <summary>
            是否指定BDS星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingGloEphemerisFile">
            <summary>
            是否指定GLONASS星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingGalEphemerisFile">
            <summary>
            是否指定伽利略星历数据源，具有最高优先权
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingCoordFile">
            <summary>
            是否指定坐标文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ClockFilePath">
            <summary>
            指定的钟差路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ErpFilePath">
            <summary>
            指定的ERP路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GnsserFcbFilePath">
            <summary>
            GNSSer FCB 文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsGnsserFcbOfDcbRequired">
            <summary>
            是否启用  GNSSer FCB 文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.EphemerisFilePath">
            <summary>
            指定的星历路径，默认GPS
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BdsEphemerisFilePath">
            <summary>
            指定的北斗星历路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GloEphemerisFilePath">
            <summary>
            指定的GLONASS星历路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.GalEphemerisFilePath">
            <summary>
            指定的Galileo星历路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.NavIonoModelPath">
            <summary>
            导航文件路径，用于提取电离层改正等
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.CoordFilePath">
            <summary>
            坐标文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.TropAugmentFilePath">
            <summary>
            对流层增强文件。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StationInfoPath">
            <summary>
            测站信息文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPreciseClockFileRequired">
            <summary>
            是否需要精密钟差文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUsingFullClockService">
            <summary>
            是否启用全钟差服务,否则使用简单钟差服务
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEphemerisRequired">
            <summary>
            是否需要星历， 默认需要
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPreciseEphemerisFileRequired">
            <summary>
            是否需要精密星历文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsAntennaFileRequired">
            <summary>
            是否需要天线文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSatStateFileRequired">
            <summary>
            是否需要卫星状态文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSatInfoFileRequired">
            <summary>
            是否需要卫星信息文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOceanLoadingFileRequired">
            <summary>
            是否需要潮汐文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDCBFileRequired">
            <summary>
            是否需要DCB文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsVMF1FileRequired">
            <summary>
            是否需要VMF1文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.Isgpt2FileRequired">
            <summary>
            是否采用GPT2通用文件改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsErpFileRequired">
            <summary>
            是否采用ERP文件改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIgsIonoFileRequired">
            <summary>
            是否需要IGS电离层文件，格网或球谐
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEstDcbOfRceiver">
            <summary>
            是否估计接收机DCB参数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEstimateTropWetZpd">
            <summary>
            是否估计测站对流层湿延迟参数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOpenReportWhenCompleted">
            <summary>
            是否在计算结束时打开平差报告
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIonoCorretionRequired">
            <summary>
            是否启用电离层模型改正。顶层接口，如果要采用电离层改正观测近似值，则必须设定。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRangeValueRequired">
            <summary>
            是否需要伪距值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPhaseValueRequired">
            <summary>
            是否需要相位值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSmoothRange">
            <summary>
            平滑伪距总开关
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OrderOfDeltaIonoPolyFit">
            <summary>
            相位平滑伪距采用电离层拟合的阶数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IonoFitEpochCount">
            <summary>
            电离层拟合历元数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUpdateEstimatePostition">
            <summary>
            定位过程中，是否更新测站估值坐标。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRemoveOrDisableNotPassedSat">
            <summary>
            是否移除未通过检核的卫星，否则标记为未启用。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRemoveSmallPartSat">
            <summary>
            是否移除观测段太小的卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsExcludeMalfunctioningSat">
            <summary>
            是否移除故障卫星(通常从外部文件指定)
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDisableEclipsedSat">
            <summary>
            是否禁用太阳阴影影响的卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableBufferCs">
            <summary>
            启用缓存周跳探测
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableRealTimeCs">
            <summary>
            是否启用实时周跳探测
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxErrorTimesOfBufferCs">
            <summary>
            缓存周跳差分次数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.DifferTimesOfBufferCs">
            <summary>
            缓存周跳差分次数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.PolyFitOrderOfBufferCs">
            <summary>
            缓存周跳拟合阶次
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IgnoreCsedOfBufferCs">
            <summary>
            是否忽略已经标记为周跳的历元卫星。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinWindowSizeOfCs">
            <summary>
            缓存周跳 最小窗口大小，小于此，都认为有周跳。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUsingRecordedCycleSlipInfo">
            <summary>
            是否采用数据源信息标记的周跳，若已标记周跳，则认为有。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxDifferValueOfMwCs">
            <summary>
            MW周跳探测中，最大的误差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxRmsTimesOfLsPolyCs">
            <summary>
            多项式拟合周跳探测中，最大的误差倍数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxValueDifferOfHigherDifferCs">
            <summary>
            高次差周跳探测中，允许的最大的误差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxBreakingEpochCount">
             <summary>
            主要周跳探测。 历元分段最大的断裂间隔，小于此则认为连续，大于则认为断裂，如 周跳探测允许最大断裂的时间间隔
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsCycleSlipDetectionRequired">
            <summary>
            是否进行周跳探测
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsCycleSlipReparationRequired">
            <summary>
            是否修复周跳
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOpenClockJumpSwitcher">
            <summary>
            钟跳总开关
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDetectClockJump">
            <summary>
            是否进行钟跳探测并标记
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsClockJumpReparationRequired">
            <summary>
            是否修复钟跳
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OuterClockJumpFile">
            <summary>
            外部钟跳文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputJumpClockFile">
            <summary>
            是否输出钟跳文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputCycleSlipFile">
            <summary>
            是否输出周跳文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsAliningPhaseWithRange">
            <summary>
            是否将初始相位采用伪距对齐
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDopplerShiftRequired">
            <summary>
            是否需要多普勒频率
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRequireSameSats">
            <summary>
            多历元处理中，是否需要相同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsAllowMissingEpochSite">
            <summary>
            多测站中，是否允许某历元丢失个别站。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinAllowedRange">
            <summary>
            允许最小的伪距
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAllowedRange">
            <summary>
            允许最大的伪距
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableEpochParamAnalysis">
            <summary>
            是否启用对历元结果的分析，是对平差过程的评估
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.AnalysisParamNamesString">
            <summary>
            待分析的参数名称字符串
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.AnalysisParamNames">
            <summary>
            待分析的参数名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputAdjustMatrix">
            <summary>
            是否输出平差矩阵文本文件，主要用于平差测试
            </summary>
        </member>
        <member name="E:Gnsser.GnssProcessOption.GettingOutputDirectory">
            <summary>
            输出目录设置
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetSolverDirectory(Geo.Times.TimePeriod)">
            <summary>
            计算目录
            </summary>
            <param name="timePeriod"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetSolverDirectory(Geo.Times.TimePeriod,Gnsser.GnssSolverType)">
            <summary>
            指定算法的目录
            </summary>
            <param name="timePeriod"></param>
            <param name="gnssSolverType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OringalOutputDirectory">
            <summary>
            原始输出目录
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OutputDirectory">
            <summary>
            结果输出目录
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputSinex">
            <summary>
            是否输出SINEX文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputSummery">
            <summary>
            是否输出汇总文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OutputBufferCount">
            <summary>
            输出结果缓存大小
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochCoord">
            <summary>
            是否输出历元坐标
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochDop">
            <summary>
            是否输出历元DOP值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputObservation">
            <summary>
            是否输出历元观测残差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputResidual">
            <summary>
            是否输出历元残差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.OutputMinInterval">
            <summary>
            历元输出最小间隔
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BufferSize">
            <summary>
            缓存数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxEpochSpan">
            <summary>
            历元间最大的时间间隙，单位：秒，如果历元之间超过了这个时段，则清空以往数据，重新构建对象。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinContinuouObsCount">
            <summary>
            卫星连续观测的最小历元数量(单位：历元次)。即如果小于这个间隔，则抹去，不参与计算，以免影响精度。 
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinSatCount">
            <summary>
            最小卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinFrequenceCount">
            <summary>
            至少的观测频率数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SystemStdDevFactors">
            <summary>
            多系统定位权值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SystemStdDevFactorString">
            <summary>
            多系统标准差存储
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SatelliteStdDevs">
            <summary>
            不同卫星的固有权值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SatelliteStdDevsString">
            <summary>
            不同卫星的固有标准差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.RangeType">
            <summary>
            伪距类型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDualIonoFreeComObservation">
            <summary>
            是否采用双频无电离层组合观测值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ObsDataType">
            <summary>
            用于计算的观测值变量类型,此设置用于观测值的获取，周跳探测，近似观测值，载波相位平滑伪距等。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ApproxDataType">
            <summary>
            近似值的数据类型，在观测方程的右手边的数值，用于计算残差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.SatelliteTypes">
            <summary>
            参与计算的卫星类型，系统类型。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.CaculateType">
            <summary>
             计算方式
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.RejectGrossError">
            <summary>
            是否剔除粗差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.EnableClockService">
            <summary>
            是否启用单独的钟差服务（文件）
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxStdDev">
            <summary>
            最大均方差，阈值。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPreciseOrbit">
            <summary>
            是否是精密轨道 precise orbit?
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.VertAngleCut">
            <summary>
             高度截止角 vert angle cutoff (deg)
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.FilterCourceError">
            <summary>
            是否过滤粗差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxLoopCount">
            <summary>
            最大迭代次数。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.EnableLoop">
            <summary>
            是否启用迭代
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxMeanStdTimes">
            <summary>
            最大平均均方根倍数。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.ExemptedStdDev">
            <summary>
            免检均方根数值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsReverseCycleSlipeRevise">
            <summary>
            启用逆序周跳探测
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.PhaseCovaProportionToRange">
            <summary>
            卫星相位与伪距观测量的权比。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfSysTimeRandomWalkModel">
            <summary>
            随机模型参数， 随机游走模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfRandomWalkModel">
            <summary>
            随机模型参数， 随机游走模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfPhaseModel">
            <summary>
            随机模型参数， 载波相位模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfCycledPhaseModel">
            <summary>
            随机模型参数， 发生周跳时，载波相位模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfIonoRandomWalkModel">
            <summary>
            随机模型参数， 电离层随机游走模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfStaticTransferModel">
            <summary>
            随机模型参数， 静态模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfTropoRandomWalkModel">
            <summary>
            随机模型参数， 对流层随机游走模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfRevClockWhiteNoiseModel">
            <summary>
            接收机钟差随机模型参数，白噪声模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfSatClockWhiteNoiseModel">
            <summary>
            卫星钟差随机模型参数，白噪声模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.StdDevOfWhiteNoiseOfDynamicPosition">
            <summary>
            动态定位随机模型参数，白噪声模型的标准差。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSetApproxXyzWithCoordService">
            <summary>
            是否需要用坐标服务设置测站初值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MutliEpochSameSatCount">
            <summary>
            参与差分卫星的数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MultiEpochCount">
            <summary>
            系数阵历元数量
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSmoothMoveInMultiEpoches">
            <summary>
            是否平滑移动多历元窗口，否则采用分段移动
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputResult">
            <summary>
            是否输出结果的总开关，只有此为true才会判断下面的输出
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochSatInfo">
            <summary>
            是否输出历元卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputAdjust">
            <summary>
            是否输出平差文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputObsEquation">
            <summary>
            是否输出观测方程
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputIono">
            <summary>
            是否输出电离层产品文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputWetTrop">
            <summary>
            是否输出对流层湿延迟产品文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputInGnsserFormat">
            <summary>
            是否以GNSSer格式输出
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochResult">
            <summary>
            是否输出逐个历元计算结果
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinSuccesiveEphemerisCount">
            <summary>
            用于拟合的最小连续星历数量。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSwitchWhenEphemerisNull">
            <summary>
            在获取星历失败后，是否切换星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinDistanceOfLongBaseLine">
            <summary>
            长基线的最小长度,单位米
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxDistanceOfShortBaseLine">
            <summary>
            短基线的最大长度，单位米
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsFixParamByConditionOrHugeWeight">
            <summary>
            固定参数（模糊度）采用条件平差还是无限权解法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinFixedAmbiRatio">
             <summary>
            模糊度固定成功的最小比例
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxRatioOfLambda">
            <summary>
            Lambda算法的最大Ratio值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxFloatRmsNormToFixAmbiguity">
             <summary>
            当浮点解RMS二范数小于此时尝试固定模糊度
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUsingAmbiguityFile">
            <summary>
            是否启用模糊度文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.AmbiguityFilePath">
            <summary>
            模糊度文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxAmbiDifferOfIntAndFloat">
            <summary>
            模糊度浮点数与整数允许的最大偏差，周,不应大于0.5
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxRoundAmbiDifferOfIntAndFloat">
            <summary>
            四舍五入法的最大偏差
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.CycleSlipDetectSwitcher">
            <summary>
            周跳开关.优先考虑周跳探测器开关,如为空，然后考虑默认周跳探测器。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MaxErrorTimesOfPostResdual">
            <summary>
            验后残差最大允许倍数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsResultCheckEnabled">
            <summary>
            是否启用结果检核，总开关
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsResidualCheckEnabled">
            <summary>
            是否启用验后残差检核
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPromoteTransWhenResultValueBreak">
            <summary>
            当结果变化时，是否进行手动升高状态转移矩阵的噪声
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsObsCorrectionRequired">
             <summary>
            是否需要观测值改正
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsApproxModelCorrectionRequired">
            <summary>
            是否需要近似模型改正，固体潮等
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDcbCorrectionRequired">
            <summary>
            是否需要DCB改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsReceiverAntSiteBiasCorrectionRequired">
            <summary>
            接收机天线PCO改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOceanTideCorrectionRequired">
            <summary>
            海洋潮汐改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSolidTideCorrectionRequired">
            <summary>
            固体潮改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPoleTideCorrectionRequired">
            <summary>
            极潮改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSatClockBiasCorrectionRequired">
            <summary>
            卫星钟差改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsTropCorrectionRequired">
            <summary>
            对流层改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsGravitationalDelayCorrectionRequired">
            <summary>
            重力延迟改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSatAntPcoCorrectionRequired">
            <summary>
            卫星天线相位中心改正PCO
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSatAntPvcCorrectionRequired">
            <summary>
            卫星天线相位中心改正PVC
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRecAntPcoCorrectionRequired">
            <summary>
            接收机天线PCO改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRecAntPcvCorrectionRequired">
            <summary>
            接收机天线PCV改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsPhaseWindUpCorrectionRequired">
            <summary>
            相位缠绕改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSiteCorrectionsRequired">
            <summary>
            测站改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsRangeCorrectionsRequired">
            <summary>
            伪距改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsFrequencyCorrectionsRequired">
            <summary>
            是否需要频率改正
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsGnsserEpochIonoFileRequired">
            <summary>
            是否需要GNSSer历元电离层文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsNavIonoModelCorrectionRequired">
            <summary>
            是否需要电离层导航参数模型
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsTropAugmentEnabled">
            <summary>
            是否对流层增强启用。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.Isgpt2File1DegreeRequired">
            <summary>
            是否需要 GPT2的1度格网文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BaseSiteSelectType">
            <summary>
            基准站选择方法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSameSatRequired">
            <summary>
            是否要求相同卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsBaseSatelliteRequried">
            <summary>
            是否选择基准卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsBaseSiteRequried">
            <summary>
            是否选择基准测站
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsFixingAmbiguity">
            <summary>
            是否固定模糊度
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsFixingCoord">
            <summary>
            是否固定坐标,若true，则不用解算坐标。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSiteCoordServiceRequired">
            <summary>
            是否需要坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatingStationInfoFile">
             <summary>
            是否指定测站信息文件
             </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsStationInfoRequired">
            <summary>
            测站信息文件，主要包含天线时段信息。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableInitApriori">
            <summary>
            是否启用先验值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.InitApriori">
            <summary>
            初始先验值
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsEnableNgaEphemerisSource">
            <summary>
            是否启用NGA星历匹配，作为实时计算的备份。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsP1DcbToLcOfGridIonoRequired">
            <summary>
            从电离层文件获取， 是否启用P1到无电离层的硬件延迟改正，在单频P1中使用LC产品时需要。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsDcbOfP1P2Enabled">
            <summary>
            是否启用P1-P2到无电离层的硬件延迟改正，在单频P1中使用LC产品时需要。
            与格网电离层中基本一样，但这个精度更低。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsIndicatedPrn">
            <summary>
            是否指定卫星，在某些场合使用
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IndicatedPrn">
            <summary>
            指定的卫星
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.WindowSizeOfPhaseSmoothRange">
            <summary>
            载波相位平滑伪距的窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsUseGNSSerSmoothRangeMethod">
            <summary>
            是否采用GNSSer改进平滑伪距算法
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsWeightedPhaseSmoothRange">
            <summary>
            是否加权而非推估的平滑伪距
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsNeedPseudorangePositionWhenProcess">
            <summary>
            数据处理时，是否需要伪距定位，动态定位时需要
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSmoothRangeWhenPrevPseudorangePosition">
            <summary>
            预先伪距定位时，是否需要平滑伪距
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IonoDeltaFilePath">
            <summary>
            电离层变化率文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsInitAprioriAvailable">
            <summary>
            初始先验值是否可用。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSameTimeSystemInMultiGnss">
            <summary>
            所有GNSS系统是否采用同一个时间系统
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsSiteNameIncluded">
            <summary>
            参数是否包含测站名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochParam">
            <summary>
            是否输出历元参数
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.IsOutputEpochParamRms">
            <summary>
            是否输出利用参数RMS
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.BaseLineFilePath">
            <summary>
            基线文件路径，必须指定基线类型后启用。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.CenterSiteName">
            <summary>
            中心站名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.EphemerisInterpolationOrder">
            <summary>
            星历插值阶次
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOption.MinAllowedApproxXyzLen">
            <summary>
            测站近似值最大允许距离地心长度，超出则重新计算初始坐标
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOption.Check">
            <summary>
            检核参数是否矛盾
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefault(Gnsser.GnsserConfig,Gnsser.IObsInfo,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            计算选项。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultIonoFreePppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的精密单点定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetPsuedoRangeOption(System.Double,System.Boolean)">
            <summary>
            伪距定位选项
            </summary>
            <param name="interval"></param>
            <param name="isSmoothRangeWithPhase">当无钟跳时，可以采用</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultRecursiveIonoFreePppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的精密单点定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultFixedIonoFreePppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的精密单点定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultDoubleDifferOrbitOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的双差定轨参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultNetSinglePostionDifferOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的单差网解参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultRecursiveNetDoublePostionDifferOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的递归最小二乘双差网解参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultNetDoublePostionDifferOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的双差网解参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSimpleRangeOrbitOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的伪距定轨参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultZeroDifferOrbitOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的非差定轨参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultClockOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的精密单点定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultNetDoubleDifferOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的双差网解定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultIonoFreeDoubleDifferOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            无电离层双差的默认配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSimplePseudoRangePositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的最简伪距定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultPseudoRangePositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的伪距定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultPseudoRangePositioningWithTropOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            参数化对流层伪距定位
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSingleSatOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的伪距定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSinglePeriodSatOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的伪距定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的差分定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultNoRelevantDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的差分定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultPeriodDoubleDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的差分定位参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultFormatOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的格式化参数配置
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultAmbiFixedEpochDoubleDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的模糊度固定的单历元纯载波双差定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSimpleEpochDoubleDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的简单单历元双差定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultEpochDoubleDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的单历元双差定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultEpochDueFreqDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的单历元双频伪距载波双差定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultEpochDoubleDueDifferPositioningOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的单历元双差定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultMultiSiteEpochOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的多站单历元定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultPeriodMultiSiteOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认的多站多历元定位选项
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultUncombinedPppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            非差非组合PPP
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetEphemerisSourceOption">
            <summary>
            专用于启用星历服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSingleFreqPppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            非差非组合PPP
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultSingleSiteOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            海天一体无电离层组合PPP
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssProcessOption.GetDefaultIonoModeledSingleFreqPppOption(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            电离层建模单频PPP
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssSolverTypeHelper">
            <summary>
            GNSS解算器类型
            </summary>
        </member>
        <member name="M:Gnsser.GnssSolverTypeHelper.GetGnssSolverType(Gnsser.SingleSiteGnssSolverType)">
            <summary>
            获取GNSS解算器类型
            </summary>
            <param name="SingleSiteSolverType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssSolverTypeHelper.GetGnssSolverType(Gnsser.TwoSiteSolverType)">
            <summary>
            获取GNSS解算器类型
            </summary>
            <param name="SingleSiteSolverType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SingleSiteSingleSatSolverType">
            <summary>
            单站单星
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteSingleSatSolverType.电离层硬件延迟计算">
            <summary>
            电离层硬件延迟计算
            </summary>
        </member>
        <member name="T:Gnsser.SingleSiteGnssSolverType">
            <summary>
            单站解算器
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.无电离层组合PPP">
            <summary>
            精密单点定位
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.最简伪距定位">
            <summary>
            最简伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.动态伪距定位">
            <summary>
            动态伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.多系统伪距定位">
            <summary>
            多系统伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.单站多历元扩展计算">
            <summary>
            单站多历元扩展计算
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.单频PPP">
            <summary>
            单频PPP
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.非差非组合PPP">
            <summary>
            非差非组合
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.通用单站单频计算">
            <summary>
            通用单站单频计算
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.固定参考站PPP">
             <summary>
            固定参考站PPP 
             </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.单站单历元扩展计算">
            <summary>
            单站单历元扩展计算
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.单频消电离层组合">
            <summary>
            单频消电离层组合PPP
            </summary>
        </member>
        <member name="F:Gnsser.SingleSiteGnssSolverType.电离层硬件延迟计算">
            <summary>
            电离层硬件延迟计算
            </summary>
        </member>
        <member name="T:Gnsser.TwoSiteSolverType">
            <summary>
            单基线（双站）算类型
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.无电离层双差">
            <summary>
            无电离层双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.单历元单频双差">
            <summary>
            简易单历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.单历元双频双差">
            <summary>
            单历元双频双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.单历元载波双差">
            <summary>
            单历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.单历元双频载波双差">
            <summary>
            单历元双频载波双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.模糊度固定的单历元纯载波双差">
            <summary>
            模糊度固定的单历元纯载波双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.多历元载波单差">
            <summary>
            多历元载波单差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.多历元载波无相关单差">
            <summary>
            多历元载波无相关单差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.多历元载波双差">
            <summary>
            多历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.多站单历元扩展计算">
            <summary>
            多站单历元扩展计算
            </summary>
        </member>
        <member name="F:Gnsser.TwoSiteSolverType.多站多历元扩展计算">
            <summary>
            多站多历元扩展计算
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteNetSolverType">
            <summary>
            多站网解算法类型
            </summary>
        </member>
        <member name="T:Gnsser.RinexObsFileFormatType">
            <summary>
            预处理或格式化观测文件处理类型
            </summary>
        </member>
        <member name="F:Gnsser.RinexObsFileFormatType.单站单历元">
            <summary>
            独立的观测站
            </summary>
        </member>
        <member name="F:Gnsser.RinexObsFileFormatType.多站单历元">
            <summary>
            多站单历元
            </summary>
        </member>
        <member name="F:Gnsser.RinexObsFileFormatType.单站多历元">
            <summary>
            多站多历元
            </summary>
        </member>
        <member name="F:Gnsser.RinexObsFileFormatType.多站多历元">
            <summary>
            多站多历元
            </summary>
        </member>
        <member name="T:Gnsser.GnssSolverType">
            <summary>
            多站网解计算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.无电离层组合PPP">
            <summary>
            精密单点定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.最简伪距定位">
            <summary>
            最简伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.动态伪距定位">
            <summary>
            动态伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.多系统伪距定位">
            <summary>
            多系统伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.多频伪距定位">
            <summary>
            多频伪距定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.非差非组合PPP">
            <summary>
            非差非组合精密单点定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单频PPP">
            <summary>
            非差非组合精密单点定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.通用单站单频计算">
            <summary>
            通用单站单频计算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.固定参考站PPP">
             <summary>
            固定参考站PPP 
             </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.钟差网解">
            <summary>
            钟差解算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.双差网解定位">
            <summary>
            双差网解定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.网解单差定位">
            <summary>
            网解单差定位
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.无电离层双差">
            <summary>
            无电离层双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.多历元载波单差">
            <summary>
            多历元载波单差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.多历元载波无相关单差">
            <summary>
            多历元载波无相关单差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.多历元载波双差">
            <summary>
            多历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单历元载波双差">
            <summary>
            单历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单历元单频双差">
            <summary>
            简易单历元载波双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.模糊度固定的单历元纯载波双差">
            <summary>
            模糊度固定的单历元纯载波双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单历元双频载波双差">
            <summary>
            单历元双频载波双差
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.电离层硬件延迟计算">
            <summary>
            电离层硬件延迟计算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单站单历元扩展计算">
            <summary>
            单站单历元扩展计算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单站多历元扩展计算">
            <summary>
            单站多历元扩展计算
            </summary>
        </member>
        <member name="F:Gnsser.GnssSolverType.单频消电离层组合">
            <summary>
            单频消电离层组合PPP
            </summary>
        </member>
        <member name="T:Gnsser.GnssProcessOptionManager">
            <summary>
            数据处理选项管理器。
            </summary>
        </member>
        <member name="P:Gnsser.GnssProcessOptionManager.Instance">
             <summary>
            实例
             </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOptionManager.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.GnssProcessOptionManager.CreateDefault">
            <summary>
            新建默认
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Option">
            <summary>
            定位计算选项
            </summary>
        </member>
        <member name="M:Gnsser.Option.#ctor">
            <summary>
            定位选项构造函数
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteMatrixBuilder">
            <summary>
            基础的定位矩阵生成器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteMatrixBuilder.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteMatrixBuilder.BuildPrmevalObsCovaMatrix">
            <summary>
            生成多测站单历元原始伪距+载波的观测权逆阵，将基准站放在第一，基准星放在第一。
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteIonoFreePppManger">
            <summary>
            多站PPP计算器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteIonoFreePppManger.#ctor(Gnsser.MultiSiteObsStream,Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSource"></param>
            <param name="Context"></param>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.GnssResultWriter">
            <summary>
            结果写入器。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.IsOutputResult">
            <summary>
            是否输出结果
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.TableTextManager">
            <summary>
            文本输出
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.Option">
            <summary>
            GNSS计算选项
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.CurrentMaterial">
            <summary>
            当前多站。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteIonoFreePppManger.CurrentResults">
            <summary>
            当前计算结果，当前有效,即只保留一个历元的计算结果。
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteIonoFreePppManger.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteIonoFreePppManger.Solve(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            计算
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="M:Gnsser.MultiSiteIonoFreePppManger.WriteRestults">
            <summary>
            写历元结果到文件
            </summary>
        </member>
        <member name="T:Gnsser.IonophereBuilderManager">
            <summary>
            管理器
            </summary>
        </member>
        <member name="M:Gnsser.IonophereBuilderManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.IonophereBuilder.CurrentIono">
            <summary>
            当前电离层延迟,由伪距计算
            </summary>
        </member>
        <member name="P:Gnsser.IonophereBuilder.DeltaPhaseIono">
            <summary>
            当前相邻两历元电离层延迟变化量,由载波相位计算
            </summary>
        </member>
        <member name="M:Gnsser.IonophereBuilder.SetCurrentIono(System.Double)">
            <summary>
            设置当前电离层延迟,利用伪距差计算
            </summary>
            <param name="DeltaRange">P2-P1</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonophereBuilder.SetCurrentPhaseIono(System.Double)">
            <summary>
            设置相邻两历元电离层延迟变化量,利用载波相位差计算
            </summary>
            <param name="CurrentDeltaPhase">phi1-phi2</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonosphereWindow.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="aboutSize"></param>
        </member>
        <member name="M:Gnsser.IonosphereWindow.Add(System.Double,System.Double)">
            <summary>
            增加一个
            </summary>
            <param name="Iono"></param>
            <param name="deltaIono"></param>
        </member>
        <member name="F:Gnsser.IonosphereItem.CurrentIono">
            <summary>
            当前电离层延迟,由伪距计算
            </summary>
        </member>
        <member name="F:Gnsser.IonosphereItem.DeltaPhaseIono">
            <summary>
            当前相邻两历元电离层延迟变化量,由载波相位计算
            </summary>
        </member>
        <member name="T:Gnsser.GnsserResultWriter`1">
            <summary>
            GNSSer 结果文件写入器。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserResultWriter`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="directory"></param>
        </member>
        <member name="P:Gnsser.GnsserResultWriter`1.BaseDirectory">
            <summary>
            基本的输出目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserResultWriter`1.IsOutputSinex">
            <summary>
            是否输出标准SINEX文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserResultWriter`1.IsOutputSummery">
            <summary>
            是否输出概略文件
            </summary>
        </member>
        <member name="M:Gnsser.GnsserResultWriter`1.Write(`0)">
            <summary>
            写产品
            </summary>
            <param name="product"></param>
        </member>
        <member name="T:Gnsser.GnsserPointPositionResultWriter">
            <summary>
            定位写入器
            </summary>
        </member>
        <member name="M:Gnsser.GnsserPointPositionResultWriter.#ctor(System.String,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="directory"></param>
        </member>
        <member name="P:Gnsser.GnsserPointPositionResultWriter.Option">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:Gnsser.GnsserPointPositionResultWriter.Write(Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            写入文件
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:Gnsser.GnsserPointPositionResultWriter.WriteToSinex(System.String,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            写到文件
            </summary>
            <param name="path"></param>
            <param name="key"></param>
        </member>
        <member name="T:Gnsser.GnssResultWriter">
            <summary>
            定位信息写入器
            </summary>
        </member>
        <member name="F:Gnsser.GnssResultWriter.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultWriter.#ctor(Gnsser.GnssProcessOption,System.Boolean,System.Boolean)">
            <summary>
            构造函数，
            </summary> 
            <param name="option"></param>
            <param name="IsWriteEpochInfo"></param>
            <param name="IsWriteSatInfo"></param> 
        </member>
        <member name="P:Gnsser.GnssResultWriter.Encoding">
            <summary>
            字体编码
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultWriter.IsWriteEpochInfo">
            <summary>
            是否写入历元数据
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultWriter.IsWriteSatInfo">
            <summary>
            是否写入卫星数据
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultWriter.ProjectOutputDirectory">
            <summary>
            工程目录
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultWriter.Write(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult})">
            <summary>
            批量写入文件，写入批量和最后一个结果。
            </summary>
            <param name="results">计算结果</param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.Write(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult},Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            当批量和最优结果分开时，或有参数有可能为NULL时，采用此方法。
            </summary>
            <param name="results"></param>
            <param name="best"></param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteDetails(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult})">
            <summary>
            写各历元
            </summary>
            <param name="results"></param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteFinal(Gnsser.Service.BaseGnssResult)">
            <summary>
            写入最终结果
            </summary>
            <param name="best"></param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteSinexFile(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult})">
            <summary>
            写 Sinex 文件
            </summary>
            <param name="results">定位结果</param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteToSinex(System.String,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            写到文件
            </summary>
            <param name="path"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteFinalResult(Gnsser.Service.BaseGnssResult,System.String)">
            <summary>
            写入总文件
            </summary>
            <param name="best">最后历元计算结果</param>
            <param name="directory">工程目录</param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.AppentShortTabToFile(Gnsser.Service.BaseGnssResult,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="best"></param>
            <param name="allPath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteAdjustMatrix(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult},System.String)">
            <summary>
             写平差矩阵文本信息
            </summary>
            <param name="results">定位计算结果</param>
            <param name="dirPath">工程目录</param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteEpochInfo(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult},System.String)">
            <summary>
            写历元信息
            </summary>
            <param name="results"></param>
            <param name="dirPath"></param>
        </member>
        <member name="M:Gnsser.GnssResultWriter.WriteSatelliteInfos(System.Collections.Generic.List{Gnsser.Service.SingleSiteGnssResult},System.String)">
            <summary>
            写历元测站->卫星信息
            </summary>
            <param name="results">定位计算结果</param>
            <param name="dirPath">工程目录</param>
        </member>
        <member name="T:Gnsser.AbstractClockEstimationResult">
            <summary>
            通用的钟差估计结果
            </summary>
        </member>
        <member name="M:Gnsser.AbstractClockEstimationResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder)">
            <summary>
            
            </summary>
            <param name="epochInfos"></param>
            <param name="Adjustment"></param>
            <param name="nameBuilder"></param> 
        </member>
        <member name="P:Gnsser.AbstractClockEstimationResult.ParamCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gnsser.AbstractClockEstimationResult.ObsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gnsser.AbstractClockEstimationResult.MetaInfo">
            <summary>
            钟差估计结果的元数据信息，用于分析结果
            </summary>
        </member>
        <member name="P:Gnsser.AbstractClockEstimationResult.DeltaTimeDistances">
            <summary>
            接收机钟差等效距离偏差.
            </summary>
        </member>
        <member name="P:Gnsser.AbstractClockEstimationResult.SatDeltaTimeDistance">
            <summary>
            卫星钟差等效距离偏差.
            </summary>
        </member>
        <member name="M:Gnsser.AbstractClockEstimationResult.ToString">
            <summary>
            参数包括（测站钟差、对流程湿延迟、卫星钟差、N个模糊度）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ClockEstimationMatrixHelper">
            <summary>
            钟差估计辅助类
            </summary>
        </member>
        <member name="M:Gnsser.ClockEstimationMatrixHelper.GetInitAprioriParam(System.Int32,System.Int32,System.Int32)">
            <summary>
            构建一个首次方差参数顺序： dtr trop dts N
            </summary>
            <param name="ParamCount"></param>
            <param name="SiteCount"></param>
            <param name="SatCount"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockEstimationMatrixHelper.GetInitEpochDifferAprioriParam(System.Int32,System.Int32,System.Int32)">
            <summary>
            无电离层历元差分钟差估计先验信息  dtr trop dts
            </summary>
            <param name="ParamCount"></param>
            <param name="SiteCount"></param>
            <param name="SatCount"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ClockEstimationResult">
            <summary>
            通用的钟差估计结果
            </summary>
        </member>
        <member name="M:Gnsser.ClockEstimationResult.#ctor(Gnsser.Domain.MultiSiteEpochInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.ClockEstimationResult)">
            <summary>
            钟差估计构造函数
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="ClockEstimationer">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="M:Gnsser.ClockEstimationResult.GetAmbiguityDistace(System.String,Gnsser.SatelliteNumber)">
            <summary>
            
            </summary>
            <param name="SiteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockEstimationResult.GetTabTitles">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.ClockEstimationResult.PrnWithSlipss">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gnsser.BasicFunctionModel">
            <summary>
            基本函数
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.PredictedError">
            <summary>
            预报误差
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.PolyError">
            <summary>
            拟合误差
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.PredictedData">
            <summary>
            预报数据
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.min">
            <summary>
            预报误差值的最小值
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.max">
            <summary>
            预报误差值的最大值
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.mean">
            <summary>
            预报误差值的平均值
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.range">
            <summary>
            预报误差值的极差值
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.PolyRms">
            <summary>
            拟合中误差
            </summary>
        </member>
        <member name="P:Gnsser.BasicFunctionModel.Predicted3hRms">
            <summary>
            预报中误差
            </summary>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetRobustLinearPolynomialX(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取抗差一次多项式模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetLinearPolynomialX(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取一次多项式模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetQuadraticPolynomialX(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取二次多项式模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetRobustQuadraticPolynomialX(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取抗差二次多项式模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetQuadraticPolynomialT1X(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取二次多项式加1个主要周期项模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetQuadraticPolynomialT2X(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32,Gnsser.SatelliteNumber)">
            <summary>
            获取二次多项式加2个主要周期项模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetQuadraticPolynomialT3X(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取二次多项式加3个主要周期项模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetQuadraticPolynomialT4X(Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            获取二次多项式加4个主要周期项模型的结果
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetGreyModelX(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            灰色模型
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetRobustGreyModelX(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            抗差灰色模型
            </summary>
            <param name="ModelData"></param>
            <param name="PredictedLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetAllanDevariation(System.Int32,System.Int32,Geo.Algorithm.ArrayMatrix)">
            <summary>
            求解钟差建模数据的Allan方差
            </summary>
            <param name="IntervalSecond"></param>
            <param name="N"></param>
            <param name="ModelData"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetCovarianceByAllanDerivation(System.Int32,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix)">
            <summary>
            根据Allan方差求解状态方程对应的协方差函数
            </summary>
            <param name="N"></param>
            <param name="T"></param>
            <param name="L"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetHardamardDevariation(System.Int32,System.Int32,Geo.Algorithm.ArrayMatrix)">
            <summary>
            求解hardamard方差
            </summary>
            <param name="IntervalSecond"></param>
            <param name="N"></param>
            <param name="ModelData"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetCovarianceByHardamardDevariation(System.Int32,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix)">
            <summary>
            求解钟差建模数据的Hardamard协方差矩阵
            </summary>
            <param name="N"></param>
            <param name="Time"></param>
            <param name="AllanDevariantion"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetTimeMatrix(System.Int32,System.Int32)">
            <summary>
            获得钟差对应的时间矩阵
            </summary>
            <param name="N"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetInitialCovarianceW(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            求解初始的噪声协方差矩阵
            </summary>
            <param name="q1"></param>
            <param name="q2"></param>
            <param name="q3"></param>
            <param name="IntervalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetTransformMatrix(System.Int32)">
            <summary>
            返回转移矩阵
            </summary>
            <param name="IntervalSeconds">数据采样间隔</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetKalmanFilter(System.Int32,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix)">
            <summary>
            利用Kalman滤波进行求解
            </summary>
            <param name="N"></param>
            <param name="InitialX"></param>
            <param name="CovarianceV"></param>
            <param name="InitialCovarianceX"></param>
            <param name="InitialCovarianceW"></param>
            <param name="L"></param>
            <param name="Q"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetKalmanFilterRecursion(System.Int32,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix)">
            <summary>
            钟差数据的递推Kalman滤波解算
            </summary>
            <param name="N"></param>
            <param name="InitialX"></param>
            <param name="CovarianceV"></param>
            <param name="InitialCovarianceX"></param>
            <param name="InitialCovarianceW"></param>
            <param name="L"></param>
            <param name="Q"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetModelPolyX(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            获取模型的拟合值
            </summary>
            <param name="ModelX"></param>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetModelPredictedX(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            获取模型的预报值
            </summary>
            <param name="ModelX"></param>
            <param name="N"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetPredictedData(System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            获取模型的预报值
            </summary>
            <param name="x0"></param>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="IntervalSecond"></param>
            <param name="PredictedLength"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetPredictedRealData(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            获取预报值对应的真值
            </summary>
            <param name="CompareData"></param>
            <param name="PredictedLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetPredictedError(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            获取预报误差，若真值缺失，则记为0
            </summary>
            <param name="CompareData"></param>
            <param name="PredictedLength"></param>
        </member>
        <member name="M:Gnsser.BasicFunctionModel.GetRMS(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            求解残差的中误差值
            </summary>
            <param name="error"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GreyModel">
            <summary>
            灰色模型
            </summary>
        </member>
        <member name="M:Gnsser.GreyModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="M:Gnsser.GreyModel.Calculate(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            用于周跳探测的灰色模型
            </summary>
            <param name="modeldata"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RevisedGreyModel">
            <summary>
            灰色模型
            </summary>
        </member>
        <member name="M:Gnsser.RevisedGreyModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.KalmanAllan">
            <summary>
            使用Allan方差的Kalman
            </summary>
        </member>
        <member name="M:Gnsser.KalmanAllan.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.KalmanHardamard">
            <summary>
            使用哈达码方差的kalman模型
            </summary>
        </member>
        <member name="M:Gnsser.KalmanHardamard.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.KalmanRecursionAllan">
            <summary>
            使用递推的Allan方差的Kalman模型
            </summary>
        </member>
        <member name="M:Gnsser.KalmanRecursionAllan.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.KalmanRecursionHardamard">
            <summary>
            使用递推的哈达码方差的Kalman模型
            </summary>
        </member>
        <member name="M:Gnsser.KalmanRecursionHardamard.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialModel">
            <summary>
            二次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.LinearPolynomialModel">
            <summary>
            一次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.LinearPolynomialModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.DLinearPolynomialModel">
            <summary>
            基于一次差分的一次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.DLinearPolynomialModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialGM">
            <summary>
            QPGM模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialGM.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT1">
            <summary>
            QPT1模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT1.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT2">
            <summary>
            QPT2模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT2.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32,Gnsser.SatelliteNumber)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT3">
            <summary>
            QPT3模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT3.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT4">
            <summary>
            QPT4模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT4.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT2GM">
            <summary>
            QPT2GM模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT2GM.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32,Gnsser.SatelliteNumber)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.QuadraticPolynomialT4GM">
            <summary>
            QPT4GM模型
            </summary>
        </member>
        <member name="M:Gnsser.QuadraticPolynomialT4GM.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RobustGreyModel">
            <summary>
            抗差灰色模型
            </summary>
        </member>
        <member name="M:Gnsser.RobustGreyModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RobustDGreyModel">
            <summary>
            基于一次差分的抗差灰色模型
            </summary>
        </member>
        <member name="M:Gnsser.RobustDGreyModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RevisedRobustDGreyModel">
            <summary>
            基于修正一次差分的抗差灰色模型（对建模使用的最后一个历元值进行修正，降低最后一个历元出现异常时对预报结果的影响）
            </summary>
        </member>
        <member name="M:Gnsser.RevisedRobustDGreyModel.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RobustDLinearPolynomial">
            <summary>
            基于一次差分的抗差一次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.RobustDLinearPolynomial.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RobustLinearPolynomial">
            <summary>
            抗差一次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.RobustLinearPolynomial.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RevisedRobustDLinearPolynomial">
            <summary>
            基于修正一次差分的抗差一次多项式模型（对建模使用的最后一个历元值进行修正，降低最后一个历元出现异常时对预报结果的影响）
            </summary>
        </member>
        <member name="M:Gnsser.RevisedRobustDLinearPolynomial.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.RobustQuadraticPolynomial">
            <summary>
            二次多项式模型
            </summary>
        </member>
        <member name="M:Gnsser.RobustQuadraticPolynomial.Calculate(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算
            </summary>
            <param name="ModelData"></param>
            <param name="CompareData"></param>
            <param name="IntervalSeconds"></param>
        </member>
        <member name="T:Gnsser.TTSIFuction">
            <summary>
            Three_Times_spline_Interpolation 三次样条插值
            </summary>
        </member>
        <member name="T:Gnsser.DifferClockEstimationResult">
            <summary>
            通用的钟差估计结果
            </summary>
        </member>
        <member name="M:Gnsser.DifferClockEstimationResult.#ctor(Gnsser.Domain.MultiSitePeriodInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,Gnsser.Service.GnssParamNameBuilder,Gnsser.DifferClockEstimationResult)">
            <summary>
            钟差估计构造函数
            </summary>
            <param name="epochInfo">历元信息</param>
            <param name="Adjustment">平差信息</param>
            <param name="ClockEstimationer">钟差估计器</param>
            <param name="previousResult">上一历元结果</param>
        </member>
        <member name="M:Gnsser.DifferClockEstimationResult.ToString">
            <summary>
            参数包括（测站钟差、对流程湿延迟、卫星钟差）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IonoFreeClockEstimationer">
            <summary>
            基于双频的钟差估计。
             </summary>
        </member>
        <member name="M:Gnsser.IonoFreeClockEstimationMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary>
            <param name="recInfo">观测信息</param>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.IonoFreeClockEstimationMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.IonoFreeClockEstimationMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeClockEstimationMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建初始先验参数值和协方差阵。只会执行一次。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.IonoFreeClockEstimationMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.IonoFreeClockEstimationMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeClockEstimationMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.IonoFreeClockEstimationMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.IonoFreeEpochDifferClockEstimationer">
            <summary>
            基于历元间差分的钟差估计。
             </summary>
        </member>
        <member name="M:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            精密单点定位矩阵生成类 构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.CurrentInfo">
            <summary>
            参考站信息
            </summary>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.isBasePrnChange">
            <summary>
            判断基准星是否发生变化（与之前的比较）
            </summary>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.BasePrn">
            <summary>
            基础卫星编号。都以此卫星的单差做差分。
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.SetBasePrn(Gnsser.SatelliteNumber)">
            <summary>
            通过此设置，可以判断是否改变
            </summary>
            <param name="BasePrn"></param>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建初始先验参数值和协方差阵。只会执行一次。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.IonoFreeEpochDifferClockEstimationMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.TriFreqIonoFreeClockEstimationer">
            <summary>
            基于3频的钟差估计。
             </summary>
        </member>
        <member name="M:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            三频钟差估计矩阵生成类 构造函数。
            </summary>
            <param name="option">解算选项</param>
        </member>
        <member name="P:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.ParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.ObsCount">
            <summary>
            观测数量
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.CreateInitAprioriParam">
            <summary>
            创建初始先验参数值和协方差阵。只会执行一次。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.Observation">
            <summary>
            具有权值的观测值。
            </summary> 
        </member>
        <member name="P:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.ObservationVector">
            <summary>
            观测值。
            自由项 l，观测值减去先验值或估计值。
            常数项，观测误差方程的常数项,或称自由项
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.BulidInverseWeightOfObs">
            <summary>
            观测量的权逆阵，一个对角阵。按照先伪距，后载波的顺序排列。
            标准差由常数确定，载波比伪距标准差通常是 1:100，其方差比是 1:10000.
            1.0/140*140=5.10e-5
            </summary> 
            <param name="factor">载波和伪距权逆阵因子（模糊度固定后，才采用默认值！）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.TriFreqIonoFreeClockEstimationMatrixBuilder.Coefficient">
            <summary>
            参数平差系数阵 A。前一半行数为伪距观测量，后一半为载波观测量。构建为稀疏矩阵
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteSatTimeInfoManager">
            <summary>
            多站卫星出现管理器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteSatTimeInfoManager.#ctor(System.Double)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteSatTimeInfoManager.ObsInterval">
            <summary>
            观测间隔
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteSatTimeInfoManager.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteSatTimeInfoManager.Record(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            登记记录
            </summary>
            <param name="material"></param>
        </member>
        <member name="T:Gnsser.SatelliteEventHandler">
            <summary>
            卫星时间
            </summary>
            <param name="prn"></param>
        </member>
        <member name="T:Gnsser.SatTimeInfoManager">
            <summary>
            卫星出现管理器
            </summary>
        </member>
        <member name="M:Gnsser.SatTimeInfoManager.#ctor(System.Double)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfoManager.ObsInterval">
            <summary>
            观测间隔
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfoManager.Prns">
            <summary>
            可用卫星
            </summary>
        </member>
        <member name="M:Gnsser.SatTimeInfoManager.Record(Gnsser.Domain.EpochInformation)">
            <summary>
            添加历元信息，统计之
            </summary>
            <param name="epochInfo"></param>
        </member>
        <member name="T:Gnsser.SatTimeInfo">
            <summary>
            测站观测卫星统计器
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.SatTimeInfo.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)" -->
        <member name="P:Gnsser.SatTimeInfo.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.LastTime">
            <summary>
            最后一次出现时间
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.FirstTime">
            <summary>
            一个连续阶段第一次出现的时间。
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.Count">
            <summary>
            总共出现的次数
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.ObsInterval">
            <summary>
            观测采样间隔，单位：秒。
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.LastInterval">
            <summary>
            与前一次观测的间隔，单位：秒。
            </summary>
        </member>
        <member name="P:Gnsser.SatTimeInfo.MaxAllowedInterval">
            <summary>
            间隔的最大阈值，如果超出这个阈值，则重新统计分段。
            默认值是观测采样间隔+1.
            </summary>
        </member>
        <member name="M:Gnsser.SatTimeInfo.Update(Geo.Times.Time)">
            <summary>
            更新
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.SatTimeInfo.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatTimeInfo.GetEpochCount(Geo.Times.Time)">
            <summary>
            历元数量
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatTimeInfo.AddTimePeriod(Geo.Times.Time)">
            <summary>
            添加观测时段.自动根据 间隔 Interval 生成区段
            </summary> 
            <param name="Time">时刻，自动根据 间隔 Interval 生成区段</param>
        </member>
        <member name="T:Gnsser.IFileGnssSolver">
            <summary>
            GNSS文件流计算器。
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.IsOutputResult">
            <summary>
            是否输出结果
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.Solver">
            <summary>
             计算
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.ParamNames">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.GnssResultBuilder">
            <summary>
            GNSS结果生成器。
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.CurrentGnssResult">
            <summary>
            当前计算结果。
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.TableTextManager">
            <summary>
            表格输出管理器
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.AioAdjustFileBuilder">
            <summary>
            平差详细表格
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.Name">
            <summary>
            名称同epochinfo的name
            </summary>
        </member>
        <member name="P:Gnsser.IFileGnssSolver.HasTableData">
            <summary>
            判断是否具有表格数据
            </summary>
        </member>
        <member name="M:Gnsser.IFileGnssSolver.WriteResultsToFileAndClearBuffer">
            <summary>
            写入文件并清空内存
            </summary>
        </member>
        <member name="M:Gnsser.IFileGnssSolver.WriteResultsToFile">
            <summary>
            写入文件并清空内存
            </summary>
        </member>
        <member name="M:Gnsser.IFileGnssSolver.ClearResultBuffer">
            <summary>
            清空内存
            </summary>
        </member>
        <member name="T:Gnsser.GnssResultBuilder">
            <summary>
            GNSS 结果构造器，按照GNSS结构构建。
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.#ctor(Gnsser.GnssProcessOption,Gnsser.DataSourceContext)">
            <summary>
            GNSS 结果构造器
            </summary> 
            <param name="context"></param>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.#ctor(Geo.ObjectTableManager,Geo.Algorithm.Adjust.AioAdjustFileBuilder,Geo.Algorithm.Adjust.AdjustEquationFileBuilder,Gnsser.GnssProcessOption,Gnsser.DataSourceContext)">
            <summary>
             GNSS 结果构造器
            </summary>
            <param name="TableTextManager"></param>
            <param name="AioAdjustFileBuilder"></param>
            <param name="Option"></param>
            <param name="context"></param>
            <param name="AdjustEquationFileBuilder"></param>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.EpochParamAnalyzer">
            <summary>
            结果分析器
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.TableTextManager">
            <summary>
            表格输出管理器
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.Option">
            <summary>
            GNSS计算选项
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.AioAdjustFileBuilder">
            <summary>
            平差文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.AdjustEquationFileBuilder">
            <summary>
            平差文件
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.PrevEpoch">
            <summary>
            上一个已经成功输出的历元
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.PrevResult">
            <summary>
            上一个结果
            </summary>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.OutputMinInterval">
            <summary>
            输出最小间隔,单位：秒。
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildFinalInfo(Gnsser.Service.SimpleGnssResult)">
            <summary>
            构建最终信息
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildOptionInfo(Gnsser.GnssProcessOption)">
            <summary>
            追加配置信息
            </summary> 
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildResultInfo(Gnsser.Service.SimpleGnssResult)">
            <summary>
            追加一个测量结果信息
            </summary>
            <param name="simpleResult"></param> 
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildAdjustInfo(System.Text.StringBuilder,Geo.Algorithm.Adjust.AdjustResultMatrix)">
            <summary>
            追加测站信息
            </summary>
            <param name="sb"></param>
            <param name="Adjustment"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildSiteInfo(System.Text.StringBuilder,Gnsser.ISiteInfo)">
            <summary>
            追加测站信息
            </summary>
            <param name="sb"></param>
            <param name="SiteInfo"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildContextInfo(System.Text.StringBuilder,Gnsser.DataSourceContext)">
            <summary>
            追加测站信息
            </summary>
            <param name="sb"></param>
            <param name="context"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildObsInfo(System.Text.StringBuilder,Gnsser.IObsInfo)">
            <summary>
            追加观测信息
            </summary>
            <param name="sb"></param>
            <param name="ObsInfo"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AppendLine(System.Text.StringBuilder,System.String,System.Object)">
            <summary>
            追加一行。
            </summary>
            <param name="sb"></param>
            <param name="title"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddEpochResult(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            输出结果
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="P:Gnsser.GnssResultBuilder.results">
            <summary>
            平差矩阵
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.WriteAdjustMatrixText">
            <summary>
             写平差矩阵文本信息
            </summary> 
        </member>
        <member name="M:Gnsser.GnssResultBuilder.BuildIonoResult(Gnsser.ISiteSatObsInfo,Geo.Algorithm.Adjust.AdjustResultMatrix,System.Collections.Generic.List{System.String})">
            <summary>
            构建电离层输出表格
            </summary>
            <param name="epoch"></param>
            <param name="Adjustment"></param>
            <param name="ParamNames"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.CheckAndAddIonoValueToMainTable(Geo.ObjectTableStorage,Geo.ObjectTableStorage,Gnsser.SatelliteNumber,System.String)">
            <summary>
            保存结果到总表中
            </summary>
            <param name="allInOneTable"></param>
            <param name="tableIonoParam"></param>
            <param name="prn"></param>
            <param name="typeName"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddSiteEpochSatInfo(Gnsser.ISiteSatObsInfo)">
            <summary>
            添加测站卫星信息
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddDop(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加DOP结果
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddAmbFixed(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            模糊度固定解
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddSecondParamRms(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加参数RMS到存储表
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddSecondParam(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加参数到存储表
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.CheckOrAddClockJump(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            添加钟跳结果
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddEpochParam(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加参数到存储表
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddParamRms(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加参数RMS到存储表
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddEpochCoord(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            增加坐标到存储表，主要用于导航解算
            </summary>
            <param name="epoch"></param>
            <param name="gnssResult"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddObservation(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            输出观测残差
            </summary>
            <param name="epoch"></param>
            <param name="gnssResult"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.AddResidual(Gnsser.ISiteSatObsInfo,Gnsser.Service.SimpleGnssResult)">
            <summary>
            输出算后残差
            </summary>
            <param name="epoch"></param>
            <param name="gnssResult"></param>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.Run">
            <summary>
            run
            </summary>
        </member>
        <member name="M:Gnsser.GnssResultBuilder.Complete">
            <summary>
            完毕
            </summary>
        </member>
        <member name="T:Gnsser.IntegralGnssFileSolver">
            <summary>
            多站观测数据集成解算器
            </summary>
        </member>
        <member name="M:Gnsser.IntegralGnssFileSolver.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.OutputFileName">
            <summary>
            输出文件名称
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.AmbiguityStoragePath">
            <summary>
            模糊度文件存储路径
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.AmbiguityManager">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.MultiSitePeriodInfoBuilder">
            <summary>
            多历元构建器，用于多历元差分
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.PeriodInformationBuilder">
            <summary>
            时段信息构建器
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.BaseSiteName">
            <summary>
            基准站名称
            </summary>
        </member>
        <member name="P:Gnsser.IntegralGnssFileSolver.HasTableData">
            <summary>
            是否具有表格数据
            </summary>
        </member>
        <member name="M:Gnsser.IntegralGnssFileSolver.Init(System.String[])">
            <summary>
            初始化
            </summary>
            <param name="pathes"></param>
        </member>
        <member name="M:Gnsser.IntegralGnssFileSolver.BuildOutFileNamePrefix(System.String[])">
            <summary>
            构建文件输出前缀
            </summary>
            <param name="pathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IntegralGnssFileSolver.Produce(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            处理一个历元
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="T:Gnsser.IObsFileProcessStreamer`1">
            <summary>
            接口方法
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gnsser.IObsFileProcessStreamer`1.PostRun">
            <summary>
            运行后激发
            </summary>
        </member>
        <member name="M:Gnsser.IObsFileProcessStreamer`1.PreProcess(`0)">
            <summary>
            预先处理
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IObsFileProcessStreamer`1.Process(`0)">
            <summary>
            处理历元
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="M:Gnsser.IObsFileProcessStreamer`1.ProducingRevise(`0)">
            <summary>
            数据检核和检校
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiSiteObsStreamer">
            <summary>
            多站观测数据遍历器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.#ctor(System.String)">
            <summary>
            构造函数
            </summary> 
            <param name="OutputDirectory"></param>
        </member>
        <member name="P:Gnsser.MultiSiteObsStreamer.Pathes">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStreamer.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStreamer.MultiSiteSatTimeInfoManager">
            <summary>
            多站卫星出现时间管理器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.Init(System.String[])">
            <summary>
            运行前调用
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.OnAfterMaterialCheckPassed(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            原料第一次进入
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildGnssOption">
            <summary>
            生成解算选项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildChecker">
            <summary>
            构建检核器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildRawReviser">
            <summary>
            初始校验器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildProducingReviser">
            <summary>
            构建矫正器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildBufferedStream">
            <summary>
            数据流
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.BuildDataSource">
            <summary>
            数据源加载
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.Equals(System.Object)">
            <summary>
            区别是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStreamer.GetHashCode">
            <summary>
            区别是否相等
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ApproxCoordSetter`1">
            <summary>
            近似坐标设置器。
            </summary>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.#ctor(Geo.BufferedStreamService{`0},Gnsser.GnssProcessOption,Gnsser.DataSourceContext)">
            <summary>
            构造函数
            </summary>
            <param name="BufferedStream"></param>
            <param name="Option"></param>
            <param name="Context"></param>
        </member>
        <member name="P:Gnsser.ApproxCoordSetter`1.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.ApproxCoordSetter`1.BufferedStream">
            <summary>
            数据流
            </summary>
        </member>
        <member name="P:Gnsser.ApproxCoordSetter`1.Option">
            <summary>
            设置
            </summary>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.CheckOrUpdateStationInfo">
            <summary>
            检查和设置测站信息
            </summary>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.TryUpdateStationInfo(Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            通过服务设置坐标
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.CheckOrSetApproxXyz">
            <summary>
            检查并设置近似坐标
            </summary>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.TrySetApproxXyzValue(Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            通过服务设置坐标
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.CheckOrSetDatasourceApproxXyz">
            <summary>
            检查数据源初始坐标是否合法，如果否，则采用伪距定位设置之。
            </summary>
        </member>
        <member name="M:Gnsser.ApproxCoordSetter`1.CheckAndSetApproxXyz(Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            检查数据源初始坐标是否合法，如果否，则采用伪距定位设置之。
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:Gnsser.ObsFileAdjustStreamer`2">
            <summary>
            GNSS 平差数据流处理器
            </summary>
            <typeparam name="TMaterial"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Gnsser.ObsFileAdjustStreamer`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileAdjustStreamer`2.CheckResult(`1)">
            <summary>
            检核结果。
            </summary>
            <param name="newResult"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SingleObservationStreamer">
            <summary>
            单站数据流处理器
            </summary>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary> 
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.SingleObservationStreamer.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.SingleObservationStreamer.Path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.SingleObservationStreamer.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:Gnsser.SingleObservationStreamer.SatTimeInfoManager">
            <summary>
            卫星时段统计器
            </summary>
        </member>
        <member name="P:Gnsser.SingleObservationStreamer.IsReversedDataSource">
             <summary>
            是否反向计算
             </summary>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.Init(System.String)">
            <summary>
            初始化
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.InitCheck">
            <summary>
            初始检核
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.BuildBufferedStream">
            <summary>
            数据流
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.OnMaterialBuffersFullOrEnd(Geo.IWindowData{Gnsser.Domain.EpochInformation})">
            <summary>
            缓存满了
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.Process(Gnsser.Domain.EpochInformation)">
            <summary>
            处理
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.PreProcess(Gnsser.Domain.EpochInformation)">
            <summary>
            预处理
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.ProducingRevise(Gnsser.Domain.EpochInformation)">
            <summary>
            执行前触发
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.Equals(System.Object)">
            <summary>
            区别是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleObservationStreamer.GetHashCode">
            <summary>
            区别是否相等
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsFileFixOption">
            <summary>
            观测文件探测与修复选项
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFixOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.BufferSize">
            <summary>
            缓存大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsAmendBigCs">
            <summary>
            是否修复大周跳
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableAlignPhase">
            <summary>
            启用相位对齐,采用第一次伪距对齐。
            当时间断裂，将采用第二次对齐。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableMinEpochCount">
            <summary>
            启用最小历元数量过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.MinEpochCount">
            <summary>
            最小历元数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableMinObsCodeAppearRatio">
            <summary>
            启用观测码按照出勤率过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.MinObsCodeAppearRatio">
            <summary>
            观测码出勤率
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsConvertPhaseToLength">
            <summary>
            是否将载波转成距离
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableObsTypes">
            <summary>
            是否启用观测类型过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.ObsTypes">
            <summary>
            观测类型过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableRemoveSats">
            <summary>
            是否移除指定卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.SatsToBeRemoved">
            <summary>
            待移除的卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableSatelliteTypes">
            <summary>
            是否过滤系统
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.SatelliteTypes">
            <summary>
            系统
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsRemoveZeroRangeSat">
            <summary>
            是否移除0值伪距卫星。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsRemoveZeroPhaseSat">
            <summary>
            是否移除0值载波卫星。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableTimePeriod">
            <summary>
            是否启用时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.MaxBreakCount">
            <summary>
            允许的最大断裂历元数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.ObsCodes">
            <summary>
            观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableObsCodes">
            <summary>
            启用观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.Interval">
            <summary>
            采样率，秒，注意：不可加密，直客稀疏，如果小于原始数据，则采样率不变。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsEnableInterval">
            <summary>
            启用采样率
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsDeleteVacantSat">
            <summary>
            删除数据为空的卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.NotVacantCodes">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.NotVacantCodeList">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.EnabledSection">
            <summary>
            观测分段，单位：分钟
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.IsReomveOtherCodes">
            <summary>
            是否移除其它代码，即只保留指定的代码。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.OnlyCodes">
            <summary>
            只保留指定的代码。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixOption.OnlyCodesString">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileFormaterOld">
            <summary>
            观测文件格式化转换。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.#ctor(Gnsser.ObsFileConvertOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ObsFileConvertOption"></param>
            <param name="inPath"></param>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.BufferSize">
            <summary>
            缓存大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.FileName">
            <summary>
            只是名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.ObsCodesToBeRemove">
            <summary>
            不需要的观测码，需要删除的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.Option">
            <summary>
            操作选项
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.FilePath">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.Writer">
            <summary>
            写入器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.IsHeaderWrited">
            <summary>
            是否写了头部
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.OldHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.CurrentHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.CurrentStartTime">
            <summary>
            当前时段起始时间。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.PrevEpochObs">
            <summary>
            上一历元观测数据,在写入前赋值。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.CurrentEpochObs">
            <summary>
            当前历元观测数据,在写入前赋值。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.InitSeconds">
            <summary>
            初始秒数，用于应对采样间隔。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.InputTimeInMinutes">
            <summary>
            文件的初始时长
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.WindowDataManager">
            <summary>
            管理窗口数据，判断是否连续
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.Inverval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.SubDirectory">
            <summary>
            输出的子目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.NumericalAlignerManagerPhaseA">
            <summary>
            载波对齐器，只对齐一个 A。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.NumericalAlignerManagerPhaseB">
            <summary>
            载波对齐器，只对齐一个 B。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.PhaseACycleSlipAmender">
            <summary>
            载波A周跳修理器
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BufferedStream_Completed">
            <summary>
            数据流结束了，还要一些判断的收尾工作要做
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.PrevOkEpoch">
            <summary>
            上一个历元
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormaterOld.LastEpoch">
            <summary>
            最后历元，不一定准确。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.GetInteval(Geo.IWindowData{Gnsser.Data.Rinex.RinexEpochObservation})">
            <summary>
            计算采用间隔。单位：秒。
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.RawRevise(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            初探
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.CheckAndFiltSmallSpan(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            过滤掉小历元时段，在缓存中操作，确保缓存大于断裂数量
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.JudgeAndFiltSmallSpanInBuffer(Geo.Times.Time,System.Boolean)">
            <summary>
            判断过滤
            </summary>
            <param name="currentTime"></param>
            <param name="isLastEpoch"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.Process(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            处理过程
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.WriteToFile(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            写到文件.判断是否分段写入
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.PostRun">
            <summary>
            写入
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BuildSectionFileName(Gnsser.Data.Rinex.RinexEpochObservation,Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            构建子时段名称，精确到分钟，以示区别。
            </summary>
            <param name="current"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BuildOutputHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            格式化输出的头部。
            </summary>
            <param name="OldHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.InitWriter(System.String)">
            <summary>
            初始化读取器
            </summary>
            <param name="outFilePath"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.WriteHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            写头部
            </summary>
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.GetObsCodeRatios(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,Geo.ObjectTableStorage})">
            <summary>
            统计各个系统，各个观测类型的出勤率。
            </summary>
            <param name="tables"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BuildObsCodeTables(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.List{System.String}})">
            <summary>
            通过缓存，按照系统类型，转换为表格，以便统计。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BuildBufferedStream">
            <summary>
            数据流。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.BuildDataSource">
            <summary>
            构建数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormaterOld.OnCompleted">
            <summary>
            是否完成
            </summary>
        </member>
        <member name="T:Gnsser.ClockJumpDetectAndRepairStreamer">
            <summary>
            观测文件预处理数据流
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpDetectAndRepairStreamer.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.ClockJumpDetectAndRepairStreamer.EpochRinexObsFileWriter">
            <summary>
            历元写
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpDetectAndRepairStreamer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpDetectAndRepairStreamer.Process(Gnsser.Domain.EpochInformation)">
            <summary>
            处理一个历元
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.ClockJumpDetectAndRepairStreamer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileSmoothRangeFormater">
            <summary>
            伪距平滑转换
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="OutputDirectory"></param>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater.EpochRinexObsFileWriter">
            <summary>
            历元写
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater.Process(Gnsser.Domain.EpochInformation)">
            <summary>
            处理一个历元
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileSmoothRangeFormater1">
            <summary>
            伪距平滑转换。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="smoothWindow">平滑窗口</param>
            <param name="inPath"></param>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.SmoothWindow">
            <summary>
            平滑窗口
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.BufferSize">
            <summary>
            缓存大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.FileName">
            <summary>
            只是名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.FilePath">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.Writer">
            <summary>
            写入器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.IsHeaderWrited">
            <summary>
            是否写了头部
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.OldHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.CurrentHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.CurrentStartTime">
            <summary>
            当前时段起始时间。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.CurrentEpochObs">
            <summary>
            当前历元观测数据,在写入前赋值。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.InputTimeInMinutes">
            <summary>
            文件的初始时长
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.Inverval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSmoothRangeFormater1.SubDirectory">
            <summary>
            输出的子目录
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.RawRevise(Gnsser.Domain.EpochInformation)">
            <summary>
            初探
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.Process(Gnsser.Domain.EpochInformation)">
            <summary>
            处理过程
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.WriteToFile(Gnsser.Domain.EpochInformation)">
            <summary>
            写到文件.判断是否分段写入
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.BuildSectionFileName(Gnsser.Domain.EpochInformation,Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            构建子时段名称，精确到分钟，以示区别。
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.InitWriter(System.String)">
            <summary>
            初始化读取器
            </summary>
            <param name="outFilePath"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.WriteHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            写头部
            </summary>
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.BuildBufferedStream">
            <summary>
            数据流。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileSmoothRangeFormater1.OnCompleted">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:Gnsser.ObsTypes">
            <summary>
            观测类型
            </summary>
        </member>
        <member name="F:Gnsser.ObsTypes.C">
            <summary>
            伪距粗码
            </summary>
        </member>
        <member name="F:Gnsser.ObsTypes.P">
            <summary>
            伪距精码
            </summary>
        </member>
        <member name="F:Gnsser.ObsTypes.L">
            <summary>
            载波
            </summary>
        </member>
        <member name="F:Gnsser.ObsTypes.D">
            <summary>
            多普勒频率
            </summary>
        </member>
        <member name="F:Gnsser.ObsTypes.S">
            <summary>
            信号强度
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileFormater">
            <summary>
            观测文件格式化转换。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormater.#ctor(Gnsser.ObsFileConvertOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ObsFileConvertOption"></param>
            <param name="inPath"></param>
        </member>
        <member name="P:Gnsser.ObsFileFormater.BufferSize">
            <summary>
            缓存大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.FileName">
            <summary>
            只是名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.ObsCodesToBeRemove">
            <summary>
            不需要的观测码，需要删除的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.Option">
            <summary>
            操作选项
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.FilePath">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.Writer">
            <summary>
            写入器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.IsHeaderWrited">
            <summary>
            是否写了头部
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.OldHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.CurrentHeader">
            <summary>
            原始头部文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.CurrentStartTime">
            <summary>
            当前时段起始时间。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.PrevEpochObs">
            <summary>
            上一历元观测数据,在写入前赋值。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.CurrentEpochObs">
            <summary>
            当前历元观测数据,在写入前赋值。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.InitSeconds">
            <summary>
            初始秒数，用于应对采样间隔。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.EphemerisService">
            <summary>
            星历服务，卫星高度角需要
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.InputTimeInMinutes">
            <summary>
            文件的初始时长
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.SubDirectory">
            <summary>
            输出的子目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.NumericalAlignerManagerPhaseA">
            <summary>
            载波对齐器，只对齐一个 A。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.NumericalAlignerManagerPhaseB">
            <summary>
            载波对齐器，只对齐一个 B。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.PhaseAAmenderAligner">
            <summary>
            数据对齐管理器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.PhaseACycleSlipAmender">
            <summary>
            载波A周跳修理器
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormater.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.PrevOkEpoch">
            <summary>
            上一个历元
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.LastEpoch">
            <summary>
            最后历元，不一定准确。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormater.RawRevise(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            数据刚刚进入，立即执行，最优先的执行，初探
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormater.Process(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            处理过程
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormater.WriteToFile(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            写到文件.判断是否分段写入
            </summary>
            <param name="current"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormater.PostRun">
            <summary>
            写入
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormater.BuildSectionFileName(Gnsser.Data.Rinex.RinexEpochObservation,Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            构建子时段名称，精确到分钟，以示区别。
            </summary>
            <param name="current"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.BuildOutputHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            格式化输出的头部。若启用 删除观测值为 0 的数据。 则需要缓存。
            </summary>
            <param name="OldHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.InitWriter(System.String)">
            <summary>
            初始化读取器
            </summary>
            <param name="outFilePath"></param>
        </member>
        <member name="P:Gnsser.ObsFileFormater.IsOverrite">
            <summary>
            是否覆盖已有
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFormater.FirstOutputPath">
            <summary>
            第一个输出路径
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFormater.WriteHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            写头部
            </summary>
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.ObsFileFormater.GetObsCodeRatios(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,Geo.ObjectTableStorage})">
            <summary>
            统计各个系统，各个观测类型的出勤率。
            </summary>
            <param name="tables"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.BuildObsCodeTables(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.List{System.String}})">
            <summary>
            通过缓存，按照系统类型，转换为表格，以便统计。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.BuildBufferedStream">
            <summary>
            数据流。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.BuildDataSource">
            <summary>
            构建数据源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileFormater.OnCompleted">
            <summary>
            是否完成
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileProcessStreamer`2">
            <summary>
            通用GNSS数据流执行器。
            </summary>
            <typeparam name="TMaterial"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.IsOutputResult">
            <summary>
            是否输出结果
            </summary>
        </member>
        <member name="E:Gnsser.ObsFileProcessStreamer`2.ResultProduced">
            <summary>
            产生一个产品
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.OnCompleted">
            <summary>
            完成
            </summary> 
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.Solver">
            <summary>
            计算器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.GnssResultBuilder">
            <summary>
            GNSS结果生成器。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.AioAdjustFileBuilder">
            <summary>
            平差详细表格
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.AdjustEquationFileBuilder">
            <summary>
            观测方程存储
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.EphemerisEndTime">
            <summary>
            星历结束时间
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.Option">
            <summary>
            GNSS计算选项，需要在 Init 函数之前设置
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.EpochChecker">
            <summary>
            数据检查
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.RawReviser">
            <summary>
            数据第一次加载（到缓存）时执行。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.ProducingReviser">
            <summary>
            矫正赋值器,在计算前一刻执行。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.CurrentGnssResult">
            <summary>
            当前计算结果
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.EphemerisDataSource">
            <summary>
            星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.ClockFile">
            <summary>
            钟差
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.IsInReversing">
            <summary>
            指示，当前是否正在正反算。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.DataStream">
            <summary>
            观测数据
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.IsReversedDataSource">
            <summary>
            当前是否数据源逆序
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.OrdinalAndReverseCount">
            <summary>
            正反算剩余计算次数
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildGnssOption">
            <summary>
            生成解算选项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.SetDataStreamAndInit">
            <summary>
            设置数据流并且初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildAndSetDataStream">
            <summary>
            构建并初始化观测数据流
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildContext(Gnsser.Data.Rinex.IObservationStream{`0})">
            <summary>
            构建数据上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildRolver(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            计算器
            </summary>
            <param name="DataSourceContext"></param>
            <param name="GnssOption"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildChecker">
            <summary>
            构建检核器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildRawReviser">
            <summary>
            构建初始矫正器，通常对数据进行简单的判断，注册等。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.BuildProducingReviser">
            <summary>
            构建精细矫正器，在即将生产之前。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.Run">
            <summary>
            正式运行
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.Running">
            <summary>
            运行中
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.Process(`0)">
            <summary>
            处理历元
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.SetResult(`1)">
            <summary>
            设置结果。
            </summary>
            <param name="newResult"></param>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.Produce(`0)">
            <summary>
            计算，返回计算结果，不要直接赋予给当前结果。
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.PostProcess(`1)">
            <summary>
            处理后执行
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.CheckResult(`1)">
            <summary>
            检核结果，如果成功则添加到当前否则不添加。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.PostRun">
            <summary>
            处理后执行
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.CheckAndRunReverseSove">
            <summary>
            检查并进行正反算
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.CheckMaterial(`0)">
            <summary>
            检核新读入数据是否合格，合格才加入缓存。
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.OnAfterMaterialCheckPassed(`0)">
            <summary>
            数据刚刚读入
            </summary>
            <param name="material"></param>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.IsRawReviseBreaked">
            <summary>
            初始矫正是否中断了。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileProcessStreamer`2.RawReviseBreakTime">
            <summary>
            初始矫正中断时间。
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.RawRevise(`0)">
            <summary>
            数据刚刚进入，尚未加入缓存时执行。
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.PreProcess(`0)">
            <summary>
            历元数据预处理
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.ProducingRevise(`0)">
            <summary>
            算前数据矫正
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.CheckLoop(`0)">
            <summary>
            循环条件检查，是否继续
            </summary>
            <param name="mEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.OutputEpochResult(Gnsser.ISiteSatObsInfo,`1)">
            <summary>
            输出结果
            </summary>
            <param name="epoch"></param>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.OnResultProduced(`1,Gnsser.ObsFileProcessStreamer{`0,`1})">
            <summary>
            产生了结果
            </summary>
            <param name="result"></param>
            <param name="streamer"></param>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.CheckOrOutputCycleSlipFile">
            <summary>
            检查和输出周跳文件
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.WriteResultsToFileAndClearBuffer">
            <summary>
            写入文件并清空内存
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.WriteResultsToFile">
            <summary>
            写入文件并清空内存
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.ClearResultBuffer">
            <summary>
            清空内存
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileProcessStreamer`2.FormatVector(Geo.Algorithm.IVector)">
            <summary>
            格式化
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsFileEpochRunner`1">
            <summary>
            通用文件数据流解析器。只处理观测数据，没有钟差、星历等其它信息。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Gnsser.ObsFileEpochRunner`1.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="E:Gnsser.ObsFileEpochRunner`1.InfoProduced">
            <summary>
            信息产生
            </summary>
        </member>
        <member name="E:Gnsser.ObsFileEpochRunner`1.EpochEntityProduced">
            <summary>
            产生一个实体
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.OnInfoProduced(System.String)">
            <summary>
            产生了信息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.OnEpochEntityProduced(`0)">
            <summary>
            实体产生了。即将进行处理 Process
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.ExtraStreamLoopCount">
            <summary>
            一次计算（正算或反算）的循环次数
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.IsClearTableWhenOutputted">
            <summary>
            当输出完毕后，是否清空结果表。默认清空，有的需要界面显示，则不清空。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.TableTextManager">
            <summary>
            表格输出管理器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.ParamNames">
            <summary>
            所有参数名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.RunnerFileExtension">
            <summary>
            运行文件的后缀名
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.InputFileManager">
            <summary>
            文件输入管理器
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.CurrentIndex">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.Current">
            <summary>
            当前
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.Previous">
            <summary>
            上一个
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.IsCancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileEpochRunner`1.BufferedStream">
            <summary>
            数据流
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.OnMaterialBuffersFullOrEnd(Geo.IWindowData{`0})">
            <summary>
            缓存已满。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.InitCheck">
            <summary>
            检查数据源是否合法，变量是否初始化完成等。
            在运行前检核。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.CheckMaterial(`0)">
            <summary>
            检核新读入数据是否合格，合格才加入缓存。
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.OnAfterMaterialCheckPassed(`0)">
            <summary>
            数据刚刚读入
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.RawRevise(`0)">
            <summary>
            数据刚刚进入，尚未加入缓存时执行。
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.BuildBufferedStream">
            <summary>
            构建数据流
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.PostRun">
            <summary>
            运行后调用
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Run">
            <summary>
            正式运行
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Run(`0)">
            <summary>
            执行一个
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Process(`0)">
            <summary>
            处理历元
            </summary>
            <param name="mEpochInfo"></param>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileEpochRunner`1.Complete">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:Gnsser.MultiObsFileFormatStreamer">
            <summary>
            观测文件预处理数据流
            </summary>
        </member>
        <member name="M:Gnsser.MultiObsFileFormatStreamer.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.MultiObsFileFormatStreamer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.MultiObsFileFormatStreamer.Process(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            处理一个历元
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.MultiObsFileFormatStreamer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.RinexNameType">
            <summary>
            命名类型
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileConvertOption">
            <summary>
            观测文件选择选项
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileConvertOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsUpperFileName">
            <summary>
            大写文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsUpperSiteName">
            <summary>
            大写测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsUseFileNameAsSiteName">
            <summary>
            是否用文件名称替代测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.SiteNameLength">
            <summary>
            测站名称长度
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsUseXCodeAsPLWhenEmpty">
            <summary>
            RINEX3转换2,是否采用其它码作为P2L2，当没有数据时
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.RinexNameType">
            <summary>
            命名方式
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IndicatedEphemeris">
            <summary>
            指定星历
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableRemoveIndicatedFrequence">
            <summary>
            是否移除指定的频率
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.FrequenceNumToBeRemoved">
            <summary>
            待移除的频率编号
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableRinexVertion">
            <summary>
            是否修改RINEX输出版本
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsAmendBigCs">
            <summary>
            是否修复大周跳
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableAlignPhase">
            <summary>
            启用相位对齐,采用第一次伪距对齐。
            当时间断裂，将采用第二次对齐。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableMinEpochCount">
            <summary>
            启用最小历元数量过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.MinEpochCount">
            <summary>
            最小连续历元数量，小于此，将过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableMinObsCodeAppearRatio">
            <summary>
            启用观测码按照出勤率过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.MinObsCodeAppearRatio">
            <summary>
            观测码出勤率
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsConvertPhaseToLength">
            <summary>
            是否将载波转成距离
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableObsTypes">
            <summary>
            是否启用观测类型过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.ObsTypes">
            <summary>
            观测类型过滤
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableRemoveSats">
            <summary>
            是否移除指定卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.SatsToBeRemoved">
            <summary>
            待移除的卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableSatelliteTypes">
            <summary>
            是否过滤系统
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsRemoveRedundantObsForIonoFree">
            <summary>
            是否移除对于无电离层组合多余的观测量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsRemoveIonoFreeUnavaliable">
            <summary>
            移除不能组成电离层组合的卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.SatelliteTypes">
            <summary>
            系统
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsRemoveZeroRangeSat">
            <summary>
            是否移除0值伪距卫星。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsRemoveZeroPhaseSat">
            <summary>
            是否移除0值载波卫星。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableTimePeriod">
            <summary>
            是否启用时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.MaxBreakCount">
            <summary>
            允许的最大断裂历元数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.ObsCodes">
            <summary>
            观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableObsCodes">
            <summary>
            启用观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.Interval">
            <summary>
            采样率，秒，注意：不可加密，只可稀疏，如果小于原始数据，则采样率不变。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsEnableInterval">
            <summary>
            启用采样率
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.SatCutOffAngle">
            <summary>
            是否启用卫星高度截止角过滤
            </summary> 
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsDeleteVacantSat">
            <summary>
            删除数据为空的卫星
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.NotVacantCodes">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.StrOfFrequenceNumToBeRemoved">
            <summary>
            待移除的频率编号
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.NotVacantCodeList">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.EnabledSection">
            <summary>
            观测分段，单位：分钟
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.IsReomveOtherCodes">
            <summary>
            是否移除其它代码，即只保留指定的代码。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.OnlyCodes">
            <summary>
            只保留指定的代码。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileConvertOption.OnlyCodesString">
            <summary>
            不可为空的观测码
            </summary>
        </member>
        <member name="T:Gnsser.ObsObjFormatStreamer">
            <summary>
            观测文件预处理数据流，采用GNSSer对象，非RINEX对象，主要用于数据预处理文件生成。
            </summary>
        </member>
        <member name="M:Gnsser.ObsObjFormatStreamer.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsObjFormatStreamer.EpochRinexObsFileWriter">
            <summary>
            历元写
            </summary>
        </member>
        <member name="P:Gnsser.ObsObjFormatStreamer.IsUseRangeCorrections">
            <summary>
            是否使用伪距改正
            </summary>
        </member>
        <member name="M:Gnsser.ObsObjFormatStreamer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsObjFormatStreamer.BuildProducingReviser">
            <summary>
            矫正器，此处只需进行模型改正了。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsObjFormatStreamer.Process(Gnsser.Domain.EpochInformation)">
            <summary>
            处理一个历元
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.ObsObjFormatStreamer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.Orbits.Orbit">
            <summary>
            This class accepts a single satellite's NORAD dayServices-line element
            set and provides information regarding the satellite's orbit 
            such as period, axis length, ECI coordinates, velocity, etc.
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.Orbit.#ctor(Gnsser.Orbits.TwoLineElement)">
            <summary>
            Standard constructor.
            </summary>
            <param name="tle">Two-line element orbital parameters.</param>
        </member>
        <member name="P:Gnsser.Orbits.Orbit.TwoLineElement">
            <summary>
            两行根数
            </summary>
        </member>
        <member name="P:Gnsser.Orbits.Orbit.Line1OfElement">
            <summary>
            第一行根数
            </summary>
        </member>
        <member name="P:Gnsser.Orbits.Orbit.Line2OfElement">
            <summary>
            第二行根数
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.Orbit.PositionEci(System.Double)">
            <summary>
            Calculate satellite ECI position/velocity for a given time.
            </summary>
            <param name="mpe">Target time, in minutes past the TLE epoch.</param>
            <returns>Kilometer-based position/velocity ECI coordinates.</returns>
        </member>
        <member name="M:Gnsser.Orbits.Orbit.PositionEci(System.DateTime)">
            <summary>
            Calculate ECI position/velocity for a given time.
            </summary>
            <param name="utc">Target time (UTC).</param>
            <returns>Kilometer-based position/velocity ECI coordinates.</returns>
        </member>
        <member name="M:Gnsser.Orbits.Orbit.GetPosition(System.Double)">
            <summary>
            Calculate satellite ECI position/velocity for a given time.
            </summary>
            <param name="mpe">Target time, in minutes past the TLE epoch.</param>
            <returns>Kilometer-based position/velocity ECI coordinates.</returns>
        </member>
        <member name="M:Gnsser.Orbits.Orbit.GetPosition(System.DateTime)">
            <summary>
            Calculate ECI position/velocity for a given time.
            </summary>
            <param name="utc">Target time (UTC).</param>
            <returns>Kilometer-based position/velocity ECI coordinates.</returns>
        </member>
        <member name="T:Gnsser.Orbits.TwoLineElement">
            <summary>
            This class encapsulates a single set of standard NORAD dayServices-line elements.
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.#ctor(System.String)">
            <summary>
            构造函数，以一个三行的两行根数字符串初始化。
            </summary>
            <param name="str">一个三行的两行根数字符串</param>
        </member>
        <member name="P:Gnsser.Orbits.TwoLineElement.OrbitAtEpoch">
            <summary>
            在轨圈数
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.GetField(Gnsser.Orbits.TwoLineElement.Field)">
            <summary>
            Returns the requested TLE satData field.
            </summary>
            <param name="fld">The field to return.</param>
            <returns>The requested field, in native form.</returns>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.GetField(Gnsser.Orbits.TwoLineElement.Field,Geo.Coordinates.AngleUnit)">
            <summary>
            Returns the requested TLE satData field as a type double.
            </summary>
            <remarks>
            The numeric return values are cached; requesting the same field 
            repeatedly incurs minimal overhead.
            </remarks>
            <param name="fld">The TLE field to retrieve.</param>
            <param name="units">Specifies the units desired.</param>
            <returns>
            The requested field's value, converted to the correct units if necessary.
            </returns>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.GetField(Gnsser.Orbits.TwoLineElement.Field,System.Boolean)">
            <summary>
            Returns the requested TLE satData field in native form as a text string.
            </summary>
            <param name="fld">The TLE field to retrieve.</param>
            <param name="appendUnits">If true, the native units are appended to 
            the end of the returned string.</param>
            <returns>The requested field as a string.</returns>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.ConvertUnits(System.Double,Gnsser.Orbits.TwoLineElement.Field,Geo.Coordinates.AngleUnit)">
            <summary>
            Converts the given TLE field to the requested units.
            </summary>
            <param name="valNative">Value to funcKeyToDouble (native units).</param>
            <param name="fld">Field ID of the value being converted.</param>
            <param name="units">Units to funcKeyToDouble to.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Gnsser.Orbits.TwoLineElement.IsValidFormat(System.String,Gnsser.Orbits.TwoLineElement.Line)">
            <summary>
            Determines if a given string has the expected format of a single 
            line of TLE satData.
            </summary>
            <param name="str">The input string.</param>
            <param name="line">The line ID of the input string.</param>
            <returns>True if the input string has the format of 
            the given line ID.</returns>
            <remarks>
            A valid satellite name is less than or equal to TLE_LEN_LINE_NAME
                 characters;
            A valid satData line must:
                 Have as the prevObj character the line number
                 Have as the second character a blank
                 Be TLE_LEN_LINE_DATA characters long
            </remarks>
        </member>
        <member name="T:Gnsser.Orbits.TwoLineElement.Field">
            <summary>
            两行根数的域。
            </summary>
        </member>
        <member name="T:Gnsser.Orbits.NoradBase">
            <summary>
            This class provides a base class for the NORAD SGP4/SDP4 orbit models.
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.NoradBase.FinalPosition(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算卫星位置
            </summary>
            <param name="incl">轨道倾角</param>
            <param name="omega"></param>
            <param name="e">轨道偏心率</param>
            <param name="a">轨道长半轴</param>
            <param name="xl"></param>
            <param name="xnode"></param>
            <param name="xn"></param>
            <param name="tsince">和参考时间的间隔（分钟）</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Orbits.NoradSDP4">
            <summary>
            NORAD SDP4 implementation.
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.NoradSDP4.GetPosition(System.Double)">
            <summary>
            Calculate satellite ECI position/velocity for a given time.
            </summary>
            <param name="tsince">Target time, in minutes-past-epoch format.</param>
            <returns>AU-based position/velocity ECI coordinates.</returns>
            <remarks>
            This procedure returns the ECI position and velocity for the satellite
            in the orbit at the given number of minutes since the TLE epoch time.
            The algorithm uses NORAD's Simplified General Perturbation 4 deep space 
            orbit model.
            </remarks>
        </member>
        <member name="T:Gnsser.Orbits.NoradSGP4">
            <summary>
            NORAD SGP4 implementation.
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.NoradSGP4.GetPosition(System.Double)">
            <summary>
            Calculate satellite ECI position/velocity for a given time.
            </summary>
            <param name="tsince">Target time, in minutes-past-epoch format.</param>
            <returns>AU-based position/velocity ECI coordinates.</returns>
            <remarks>
            This procedure returns the ECI position and velocity for the satellite
            in the orbit at the given number of minutes since the TLE epoch time.
            The algorithm uses NORAD's Simplified General Perturbation 4 near earth 
            orbit model.
            </remarks>
        </member>
        <member name="T:Gnsser.Orbits.OrbitUtils">
            <summary> 
            封装有用的轨道算法
            </summary>
        </member>
        <member name="M:Gnsser.Orbits.OrbitUtils.GetSatTopoCoord(Geo.Coordinates.TimedMotionState,Geo.Coordinates.GeoCoord)">
            <summary>
            根据卫星位置和测站位置计算其在站星坐标系中的位置。
            Returns the topo-centric (azimuth, elevation, etc.) coordinates for
            a target object described by the given ECI coordinates.
            </summary>
            <param name="satPos">The ECI coordinates of the target object.</param>
            <param name="siteCoord">The ECI coordinates of the 观测站</param>
            <returns>The look angle to the target object.</returns>
        </member>
        <member name="M:Gnsser.Orbits.OrbitUtils.GetMovingState(Geo.Coordinates.GeoCoord,Geo.Times.Julian,Geo.Referencing.Ellipsoid,System.Boolean)">
            <summary>
            由测站地心地固大地坐标计算在天球空间直角坐标的位置和速度。
            </summary>
            <param name="geo">大地坐标</param>
            <param name="date">时间</param>
            <param name="ellipsoid">参考椭球</param> 
            <param name="isKm">是否是千米</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Orbits.OrbitUtils.GetVelocityInCelestialSphere(Geo.Coordinates.XYZ)">
            <summary>
            通过固定在地球上的测站位置计算在天球坐标系中的速度，即地球自转的速度。
            </summary>
            <param name="pos">固定在地球上的测站位置</param>
            <returns>天球坐标系中的速度</returns>
        </member>
        <member name="T:Gnsser.SingleSiteGnssSolveStreamer">
            <summary>
            单站计算数据流解算器
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteGnssSolveStreamer.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteGnssSolveStreamer.HasTableData">
            <summary>
            是否具有表格数据
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteGnssSolveStreamer.PeriodInformationBuilder">
            <summary>
            单站多历元
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteGnssSolveStreamer.PeriodSatelliteBuilder">
            <summary>
            单站单星多历元
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteGnssSolveStreamer.Prn">
            <summary>
            用于单星计算
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteGnssSolveStreamer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteGnssSolveStreamer.Produce(Gnsser.Domain.EpochInformation)">
            <summary>
            处理一个历元
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="T:Gnsser.ObsAnalysisInfo">
            <summary>
            观测文件分析结果,可以在测站选择，基线等组合中使用。
            是分析的结果，也可以直接从观测文件头部读取。
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.#ctor(System.String)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.#ctor(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            构造函数
            </summary>
            <param name="header"></param>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfo.SiteObsInfo">
            <summary>
            文件基本信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfo.MultipathFactors">
            <summary>
            多路径分析结果
            </summary>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfo.HasMultipathFactor">
            <summary>
            是否具有多路径计算参数
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.BuildParamDics">
            <summary>
            待输出的参数。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.WriteAsRinexCommentFile(System.String)">
            <summary>
            写入文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.ParseRinexCommentFile(System.String)">
            <summary>
            解析
            </summary>
            <param name="rinexFile"></param>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfo.UpdateToRinexOFileHeader(System.String,System.String)">
            <summary>
            将统计结果更新写入到观测文件中。
            </summary>
            <param name="existOFilePath"></param>
            <param name="newOfilePath"></param>
        </member>
        <member name="T:Gnsser.ObsAnalysisInfoCollection">
            <summary>
            观测文件分析结果，逐个历元分析的集合
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfoCollection.#ctor(System.String)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfoCollection.#ctor(Gnsser.Data.Rinex.RinexObsFileHeader,System.String)">
             <summary>
            构造函数
             </summary>
             <param name="header"></param>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfoCollection.SiteObsInfo">
            <summary>
            文件基本信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfoCollection.FilePath">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsAnalysisInfoCollection.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfoCollection.BuildResult">
            <summary>
            创建结果。如统计多路径。
            </summary>
        </member>
        <member name="M:Gnsser.ObsAnalysisInfoCollection.GetMultipathFactors">
            <summary>
            多路径效应因子
            </summary>
        </member>
        <member name="T:Gnsser.EpochAnlysisInfo">
            <summary>
            历元统计分析结果。
            </summary>
        </member>
        <member name="T:Gnsser.EpochSatAnlysisInfo">
             <summary>
            当前历元的单卫星统计分析结果 
             </summary>
        </member>
        <member name="M:Gnsser.EpochSatAnlysisInfo.#ctor(Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数
            </summary>
            <param name="sat"></param>
        </member>
        <member name="P:Gnsser.EpochSatAnlysisInfo.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.EpochSatAnlysisInfo.MultipathFactors">
            <summary>
            多路径效应因子
            </summary>
        </member>
        <member name="P:Gnsser.EpochSatAnlysisInfo.InvalidCodes">
            <summary>
            无效的观测类型集合
            </summary>
        </member>
        <member name="M:Gnsser.EpochSatAnlysisInfo.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochSatAnlysisInfo.IsValid(System.Double)">
            <summary>
            是否有效
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochSatAnlysisInfo.GetMultpathFactorL1(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算载波1的多路径因子
            </summary>
            <param name="rangeA"></param>
            <param name="L1"></param>
            <param name="L2"></param>
            <param name="alfa"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochSatAnlysisInfo.GetMultpathFactorL2(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算载波2的多路径因子
            </summary>
            <param name="rangeB"></param>
            <param name="L1"></param>
            <param name="L2"></param>
            <param name="alfa"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsDataAnalystOption">
            <summary>
            观测文件分析选择选项
            </summary>
        </member>
        <member name="M:Gnsser.ObsDataAnalystOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.EnableBool">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.MinFrequencyCount">
            <summary>
            最小频率数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableMinFrequencyCount">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.MinSatCount">
            <summary>
            最小卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.MinRatioOfSatCount">
            <summary>
            最小卫星数量的比例
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableMinRatioOfSatCount">
            <summary>
            是否启用 最小卫星数量的比例
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.MinFileSizeMB">
            <summary>
            文件最小的大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableMinFileSizeMB">
            <summary>
            是否启用最小历元数。
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.MinEpochCount">
            <summary>
            最小历元数，少于此则历元数量。
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableMinEpochCount">
            <summary>
            是否启用最小历元数。
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableTimePeriod">
            <summary>
            是否启用时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.ObsCodes">
            <summary>
            观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableObsCodes">
            <summary>
            启用观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.CenterRegion">
            <summary>
            中心区域
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableCenterRegion">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IncludeSiteNames">
            <summary>
            应该包含的测站名
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableIncludeSiteNames">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.ExcludeSiteNames">
            <summary>
            应该包含的测站名
            </summary>
        </member>
        <member name="P:Gnsser.ObsDataAnalystOption.IsEnableExcludeSiteNames">
            <summary>
            启用+
            </summary>
        </member>
        <member name="T:Gnsser.ClockJumpReviser">
            <summary>
            钟跳修复器
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpReviser.#ctor(System.Double)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpReviser.ClockJumpCorrectManager">
            <summary>
            探测器
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpReviser.LastJumpTime">
            <summary>
            上一个跳跃时间
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpReviser.TotalCount">
            <summary>
            总共发生钟跳数量
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpReviser.MinDetectingRatio">
            <summary>
            最小探测率（探测到的各卫星钟跳发生率），如果大于此，则认为该历元发生了钟跳。
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpReviser.PrevEpochInfo">
            <summary>
            上一个历元信息 
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            探测
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpReviser.Detect(Gnsser.Domain.EpochInformation)">
            <summary>
            探测历元钟跳
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.ClockJumpReviser.Complete">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:Gnsser.ClockJumpCorrector">
            <summary>
            钟差探测与修复器
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpCorrector.#ctor(System.Double,System.Double)">
            <summary>
            钟差探测与修复器
            </summary>
            <param name="maxBreakingSecond"></param>
            <param name="jumpSpan">钟跳范围</param>
        </member>
        <member name="P:Gnsser.ClockJumpCorrector.Previous">
            <summary>
            上一个。
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpCorrector.MaxDiffer">
            <summary>
            最大允许误差阈值
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpCorrector.LastDifferVaue">
            <summary>
            上一个差分值，即平均径向速度
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpCorrector.Revise(Gnsser.Domain.EpochSatellite@)">
            <summary>
            探测，如果有，返回false。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ClockJumpCorrector2">
            <summary>
            钟差探测与修复器
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpCorrector2.#ctor(System.Double)">
            <summary>
            钟差探测与修复器
            </summary>
            <param name="maxBreakingSecond"></param>
        </member>
        <member name="P:Gnsser.ClockJumpCorrector2.Previous">
            <summary>
            上一个。
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpCorrector2.MaxRmsTimes">
            <summary>
            最大允许误差阈值
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileFixer">
            <summary>
            观测文件探测与修复器
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFixer.#ctor(Gnsser.ObsFileFixOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="FilePath"></param>
        </member>
        <member name="P:Gnsser.ObsFileFixer.FilePath">
            <summary>
            待分析的文件路径
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixer.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixer.EpochInfoToRinex">
            <summary>
            历元信息转换为RINEX
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixer.RawReviser">
            <summary>
            数据第一次加载（到缓存）时执行。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixer.ProducingReviser">
            <summary>
            矫正赋值器,在计算前一刻执行。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileFixer.RinexObsFileWriter">
            <summary>
            写RINEX
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFixer.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileFixer.BuildBufferedStream">
            <summary>
            缓存数据流
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsFileAnalyst">
            <summary>
            观测文件分析专家
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileAnalyst.#ctor(System.String,Gnsser.ObsDataAnalystOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="OutputDirectory"></param>
        </member>
        <member name="P:Gnsser.ObsFileAnalyst.FilePath">
            <summary>
            待分析的文件路径
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileAnalyst.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileAnalyst.ObsAnalysisInfoCollection">
            <summary>
            观测文件分析结果
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileAnalyst.BuildBufferedStream">
            <summary>
            缓存数据流
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsFileSelectOption">
            <summary>
            观测文件选择选项
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSelectOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsNavCopy">
            <summary>
            是否将对应的导航文件一起选择复制
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MultipathMp1">
            <summary>
            多路径设置
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MultipathMp2">
            <summary>
            多路径设置
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MinFrequencyCount">
            <summary>
            最小频率数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableMinFrequencyCount">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MinSatCount">
            <summary>
            最小卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MinRatioOfSatCount">
            <summary>
            最小卫星数量的比例
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableMinRatioOfSatCount">
            <summary>
            是否启用 最小卫星数量的比例
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MinFileSizeMB">
            <summary>
            文件最小的大小
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableMinFileSizeMB">
            <summary>
            是否启用最小历元数。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.MinEpochCount">
            <summary>
            最小历元数，少于此则历元数量。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableMinEpochCount">
            <summary>
            是否启用最小历元数。
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableTimePeriod">
            <summary>
            是否启用时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.SatelliteTypes">
            <summary>
            卫星系统类型选择
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableSatelliteTypes">
            <summary>
            卫星系统类型选择
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.ObsCodes">
            <summary>
            观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableObsCodes">
            <summary>
            启用观测码
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.CenterRegion">
            <summary>
            中心区域
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableCenterRegion">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IncludeSiteNames">
            <summary>
            应该包含的测站名
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableIncludeSiteNames">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.ExcludeSiteNames">
            <summary>
            应该包含的测站名
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelectOption.IsEnableExcludeSiteNames">
            <summary>
            启用+
            </summary>
        </member>
        <member name="T:Gnsser.ObsFileSelector">
            <summary>
            观测文件选择器
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSelector.#ctor(Gnsser.ObsFileSelectOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="OutputDirectory"></param>
        </member>
        <member name="M:Gnsser.ObsFileSelector.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelector.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelector.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFileSelector.FailedPathes">
            <summary>
            失败的路径集合
            </summary>
        </member>
        <member name="M:Gnsser.ObsFileSelector.Select(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            选择并复制文件
            </summary>
            <param name="inpathes"></param>
        </member>
        <member name="M:Gnsser.ObsFileSelector.Select(System.String,System.String)">
            <summary>
            选择并复制文件
            </summary>
            <param name="inpath"></param>
            <param name="subDirectory">子目录，若有</param>
        </member>
        <member name="M:Gnsser.ObsFileSelector.GetOutputPath(System.String,System.String)">
            <summary>
            输出路径
            </summary>
            <param name="inPath"></param>
            <param name="subDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileSelector.IsMatch(System.String)">
            <summary>
            是否符合要求
            </summary>
            <param name="inpath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileSelector.MathedCount(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            匹配数量
            </summary>
            <param name="list"></param>
            <param name="StartChar"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFileSelector.MathedCount(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            匹配数量
            </summary>
            <param name="list"></param>
            <param name="StartChar"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SingleSiteObsAdjustStreamer">
            <summary>
            单站数据流处理器
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.#ctor(System.String)">
            <summary>
            构造函数
            </summary> 
            <param name="outputDirectory"></param>
        </member>
        <member name="P:Gnsser.SingleSiteObsAdjustStreamer.Path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteObsAdjustStreamer.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:Gnsser.SingleSiteObsAdjustStreamer.SatTimeInfoManager">
            <summary>
            卫星时段统计器
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.Init(System.String)">
            <summary>
            初始化
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.InitCheck">
            <summary>
            初始检核
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.BuildBufferedStream">
            <summary>
            数据流
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.OnMaterialBuffersFullOrEnd(Geo.IWindowData{Gnsser.Domain.EpochInformation})">
            <summary>
            缓存满了
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.OnAfterMaterialCheckPassed(Gnsser.Domain.EpochInformation)">
            <summary>
            原料第一次进入
            </summary>
            <param name="material"></param>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.BuildRawReviser">
            <summary>
            初始矫正器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.BuildChecker">
            <summary>
            检核器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.BuildProducingReviser">
            <summary>
            矫正器，此处只需进行模型改正了。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.Equals(System.Object)">
            <summary>
            区别是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SingleSiteObsAdjustStreamer.GetHashCode">
            <summary>
            区别是否相等
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.PeriodSatelliteBuilder">
            <summary>
            多历元测站单星数据模型构建器
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatelliteBuilder.#ctor(Gnsser.SatelliteNumber,System.Int32,System.Boolean,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="Prn">卫星编号</param>
            <param name="AssignedEpochCount">历元大小</param>
            <param name="isSmoothEpcohes">历元是否滑动向前,则会出现重叠</param>
            <param name="MaxTimeSpan"> 最大时间间隔，超出后，则重新构建</param>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatelliteBuilder.#ctor(System.Int32,System.Boolean,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="AssignedEpochCount">历元大小</param>
            <param name="isSmoothEpcohes">历元是否滑动向前,则会出现重叠</param>
            <param name="MaxTimeSpan"> 最大时间间隔，超出后，则重新构建</param>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.Prn">
            <summary>
            当前卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.IsSmoothEpcohes">
            <summary>
            历元是否滑动向前,则会出现重叠
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.AssignedEpochCount">
            <summary>
            指定的历元数量，如果超过数量，则剔除第一历元。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.MaxTimeSpan">
            <summary>
            最大时间间隔，超出后，则重新构建
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.IsFull">
            <summary>
            是否已满
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatelliteBuilder.Option">
            <summary>
            差分定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatelliteBuilder.Add(Gnsser.Domain.EpochInformation)">
            <summary>
            增加一个,若满，则返回true。
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatelliteBuilder.Add(Gnsser.Domain.EpochSatellite)">
            <summary>
            增加一个,若满，则返回true。
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatelliteBuilder.Build">
            <summary>
            生成。如果历元不足，则标记 Enabled 为 false；果失败，则返回 null.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.PeriodSatellite">
             <summary>
            多历元卫星数据模型
             </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatellite.#ctor(System.Int32)">
            <summary>
            构造函数，初始化基本变量。
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.AssignedEpochCount">
            <summary>
            指定的历元数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.IsFull">
            <summary>
            是否已经满了。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.SiteInfo">
            <summary>
            测站信心
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.Enabled">
            <summary>
            指示是否满足计算条件。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.EpochCount">
            <summary>
            历元数量,743333
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.Epoches">
            <summary>
            历元（时间）列表
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatellite.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatellite.ReceiverTime">
            <summary>
            接收时间
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatellite.HasCycleSlip(Gnsser.SatelliteNumber)">
            <summary>
            是否有周跳。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.PeriodSatCombination">
            <summary>
            历元卫星组合值
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodSatCombination.#ctor(Geo.IBuffer{Gnsser.Domain.EpochSatellite})">
            <summary>
            多历元卫星观测原始值
            </summary>
            <param name="EpochSat">多历元卫星观测原始值</param>
        </member>
        <member name="P:Gnsser.Domain.PeriodSatCombination.EpochSats">
            <summary>
            多历元卫星观测原始值
            </summary>
        </member>
        <member name="T:Gnsser.Domain.EpochSatCombination">
            <summary>
            历元卫星组合值
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatCombination.#ctor(Gnsser.Domain.EpochSatellite)">
            <summary>
            历元卫星组合值
            </summary>
            <param name="EpochSat">历元卫星</param>
        </member>
        <member name="P:Gnsser.Domain.EpochSatCombination.EpochSat">
            <summary>
            历元卫星观测原始值
            </summary>
        </member>
        <member name="T:Gnsser.Domain.ICommonObservationCorrection">
            <summary>
            通用的观测改正
            </summary>
        </member>
        <member name="P:Gnsser.Domain.ICommonObservationCorrection.CommonCorrection">
            <summary>
            通用模型距离改正，同时适用于伪距和载波，如卫星钟差改正、对流层改正等。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.ICommonObservationCorrection.PhaseOnlyCorrection">
            <summary>
            相位距离改正，如电离层改正-
            </summary>
        </member>
        <member name="P:Gnsser.Domain.ICommonObservationCorrection.RangeOnlyCorrection">
            <summary>
            伪距特有距离改正，如电离层改正+
            </summary>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.GetCommonPhaseCorrection">
            <summary>
            获取站星层次的通用载波距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.GetCommonRangeCorrection">
            <summary>
            获取站星层次的通用伪距距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.AddPhaseCyleCorrection(System.String,System.Double)">
            <summary>
            添加相位改正。对所有的相位起作用。这里转换成相位观测值距离的改正数（Frequence.PhaseRange.Correction）。
            </summary>
            <param name="corrector">相位改正数，是相位</param>
            <param name="cycle">相位改正数，是相位</param>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.AddCommonCyleCorrection(System.String,System.Double)">
            <summary>
            通用周为单位的距离改正
            </summary>
            <param name="corrector"></param>
            <param name="cycle"></param>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.AddRangeCorrection(System.String,System.Double)">
            <summary>
            添加伪距距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.AddCommonCorrection(System.String,System.Double)">
            <summary>
            添加通用距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.AddPhaseCorrection(System.String,System.Double)">
            <summary>
            添加相位距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.ICommonObservationCorrection.ClearCorrections">
            <summary>
            移除所有的改正数，包括公共的和频率私有的。
            通常是为了重新计算。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.MultiSiteEpochInfoBuilder">
            <summary>
            多测站历元信息构建器
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfoBuilder.#ctor(System.Boolean,System.Boolean,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="IsAllSiteRequired">是否需要所有测站</param>
            <param name="IsSameSatRequired">是否需要相同卫星</param>
            <param name="MaxTimeDifferSecond">站间最大时间偏差</param>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.MaxTimeDiffer">
            <summary>
            最大时间偏差
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.Epoch">
            <summary>
            当前历元
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.BaseEpochInfo">
            <summary>
            基准测站的观测信息
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.IsSameSatRequired">
            <summary>
            是否需要卫星共视
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.IsAllSiteRequired">
            <summary>
            是否需要所有加入的测站
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfoBuilder.ListExceptBase">
            <summary>
            其它历元信息，除了基准信息
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfoBuilder.Add(Gnsser.Domain.EpochInformation,System.Boolean)">
            <summary>
            添加。
            </summary>
            <param name="EpochInformation"></param>
            <param name="isBase"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfoBuilder.Build">
            <summary>
            如果不指定基准，则默认以第一个为基准。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.MultiSiteEpochInfo">
            <summary>
            多测站单历元信息
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.#ctor(System.Boolean)">
            <summary>
            多站，同历元数据。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.Epoches">
            <summary>
            历元列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.IsRequireSameSats">
            <summary>
            是否需要相同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.EpochIndexOfDay">
            <summary>
            一天中的编号。依据主数据源历元的时间间隔和时间计算得出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.ReceiverTime">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.BaseEpochInfo">
            <summary>
            基准测站的观测信息
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.BaseSiteName">
            <summary>
            基准测站
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.OtherEpochInfo">
            <summary>
            除了基站信息的另一个测站信息，如果只有两个，则是另一个。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.ListExceptBase">
            <summary>
            其它历元信息，除了基准信息
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.List">
            <summary>
            列表。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.EnabledPrns">
            <summary>
            共同的启用的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.EnabledSatCount">
            <summary>
            启用卫星的数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.UnstablePrns">
            <summary>
            不稳定的卫星，通常为具有周跳的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.TotalPrns">
            <summary>
            所有出现过的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.RovSiteNames">
            <summary>
            流动站名称列表
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetBaseLineVector(System.String,System.String)">
            <summary>
            基线向量坐标
            </summary>
            <param name="fromSite"></param>
            <param name="toSite"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.RemoveSatWithoutEphemeris">
            <summary>
            去除没有卫星
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.RemoveUnStableMarkers">
            <summary>
            移除曾经标记为不稳定的标签。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.HasCycleSlip(Gnsser.SatelliteNumber,System.String)">
            <summary>
            指定卫星是否具有周跳，任一测站有，则有。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="siteName">测站名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.HasCycleSlip(Gnsser.SatelliteNumber)">
            <summary>
            如果有一个观测值具有周跳，则认为这颗有周跳。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.DisableOthers(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用其它卫星
            </summary>
            <param name="prns"></param>
        </member>
        <member name="P:Gnsser.Domain.MultiSiteEpochInfo.SatelliteTypes">
            <summary>
            可用卫星系统
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.Enable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            启用指定卫星
            </summary>
            <param name="prns"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.Disable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用指定卫星
            </summary>
            <param name="prns"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.DisableDifferSats">
            <summary>
            禁用不同的卫星
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteSinglePhaseDifferResidualVector(Gnsser.FrequenceType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的单差向量,相位观测值，浮动站站心残差减去参考站
            </summary>
            <param name="freqType">频率</param>
            <param name="prns">参与计算的卫星</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差,将其编号排列在第一位</param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteDoubleRangeDifferResidualVector(Gnsser.FrequenceType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的伪距双差残差向量
            </summary>
            <param name="freqType"></param>
            <param name="prns"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteSingleRangeDifferResidualVector(Gnsser.FrequenceType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的伪距单差残差向量
            </summary>
            <param name="freqType"></param>
            <param name="prns"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteDoublePhaseDifferResidualVector(Gnsser.FrequenceType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的载波双差残差向量.
            </summary>
            <param name="freqType">频率</param> 
            <param name="prns">参与计算的卫星</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差，将其编号排列在第一位</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteDoubleDifferResidualVector(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的双差残差向量.
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="prns">参与计算的卫星</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差，将其编号排列在第一位</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetTwoSiteSingleDifferResidualVector(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.SatelliteNumber)">
            <summary>
            本历元两个站的单差向量,浮动站站心残差减去参考站
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="prns">参与计算的卫星</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差,将其编号排列在第一位</param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetNetDoubleDifferResidualVectorBeweenSites(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.String,Gnsser.SatelliteNumber)">
            <summary>
            历元的多站网解双差残差向量.
            站间双差。【算法校验通过】
            对于双差，站间和星间相同。
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="baseSiteName">基准测站</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差，将其编号排列在第一位</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetNetDifferResidualVectorBetweenSites(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.String,Gnsser.SatelliteNumber)">
            <summary>
            历元的站间单差向量,每个浮动站站星残差依次减去参考站，单差后消除了卫星钟差，适用于单差星形网解基线。
            卫星数量不变，测站数量少一。
            站间单差（同一卫星对不同测站作差）。基准站信息被差分了，体现的都是流动站信息。 
            参数顺序：按照测站顺序变量，基准星排在各个测站的第一个。【算法核对无误】
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="baseSiteName">基准测站</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差,将其编号排列在第一位</param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetDoubleDifferResidualVectorBeweenSats(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.String,Gnsser.SatelliteNumber)">
            <summary>
            历元的多站双差残差向量.
            星间双差。【算法校验通过】
            对于双差，站间和星间相同。
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="baseSiteName">基准测站</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差，将其编号排列在第一位</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetNetDifferResidualVectorBeweenSats(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.String,Gnsser.SatelliteNumber)">
            <summary> 
            星间单差(以卫星为基准，对测站进行做差，需要指定一个基准测站，可以差分掉测站钟差，适用于定轨计算)。
            基准测站在第一梯队，双差时，将其差分掉。
            以一颗基准星的EpochSat为参考，纷纷与其作差。
            参数顺序：按照测站顺序变量，基准星排在各个测站的第一个。【算法校验通过】
            </summary>
            <param name="obsType">观测值</param>
            <param name="approxType">近似值</param>
            <param name="baseSiteName">基准测站</param>
            <param name="basePrn">基础卫星，所有卫星都与它做差,将其编号排列在第一位</param>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetDoubleDifferResidual(System.String,System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Gnsser.SatObsDataType,Gnsser.SatApproxDataType,System.Boolean)">
            <summary>
            对两个测站两个卫星残差做双差。【算法校验通过】
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="SatObsDataType"></param>
            <param name="SatApproxDataType"></param>
            <param name="isBeweenSiteOrSatFirst">站间差分，否则星间差分为先</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetDifferResidualBetweenSats(System.String,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber,Gnsser.SatObsDataType,Gnsser.SatApproxDataType)">
            <summary>
            同一测站两个卫星残差做双差。星间单差。
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <param name="SatObsDataType"></param>
            <param name="SatApproxDataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetDifferResidualBetweenSites(System.String,System.String,Gnsser.SatelliteNumber,Gnsser.SatObsDataType,Gnsser.SatApproxDataType)">
            <summary>
             同一卫星 对两个测站残差做差。站间单差。
            </summary>
            <param name="siteName"></param>
            <param name="baseSiteName"></param>
            <param name="prn"></param>
            <param name="SatObsDataType"></param>
            <param name="SatApproxDataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSiteEpochInfo.GetEpochSatWithEphemeris">
            <summary>
            具有星历的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.MultiSitePeriodInfoBuilder">
            <summary>
            多历元多测站数据构建器
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfoBuilder.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfoBuilder.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="AssignedEpochCount">历元数量</param>
            <param name="MaxTimeSpan"></param>
            <param name="MinCommonEnabledSatCount">最小的可用卫星数量</param> 
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.AssignedEpochCount">
            <summary>
            指定的历元数量，如果超过数量，则剔除第一历元。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.MinSatCount">
            <summary>
            最少卫星数量，如果少于此，则重新生成。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.MaxTimeSpan">
            <summary>
            最大时间间隔，超出后，则重新构建
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.IsFull">
            <summary>
            历元是否满足要求
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.IsRequireSameSats">
            <summary>
            s是否需要相同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfoBuilder.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfoBuilder.Add(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            添加一个。
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfoBuilder.Build">
            <summary>
            生成。如果历元不足，则标记 Enabled 为 false；果失败，则返回 null.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.PeriodInformationBuilder">
            <summary>
            多历元测站数据模型
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.IsFull">
            <summary>
            是否已经满了。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.AssignedEpochCount">
            <summary>
            指定的历元数量，如果超过数量，则剔除第一历元。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.MinSatCount">
            <summary>
            最少卫星数量，如果少于此，则重新生成。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.IsNeedSameSat">
            <summary>
            是否需要相同的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.MaxTimeSpan">
            <summary>
            最大时间间隔，超出后，则重新构建
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformationBuilder.Option">
            <summary>
            差分定位选项
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodInformationBuilder.Build">
            <summary>
            生成。如果历元不足，则标记 Enabled 为 false；果失败，则返回 null.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.PeriodInformation">
             <summary>
            多历元测站数据模型,数据不应该更改 EpochInformation 本身。
             </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodInformation.#ctor(System.Boolean,System.Int32)">
            <summary>
            构造函数，初始化基本变量。
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.AssignedEpochCount">
            <summary>
            指定的历元数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.IsFull">
            <summary>
            是否已经满了。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.SiteInfo">
            <summary>
            测站信心
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.IsRequireSameSats">
            <summary>
            是否需要相同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.Enabled">
            <summary>
            指示是否满足计算条件。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.EpochCount">
            <summary>
            历元数量,743333
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.Epoches">
            <summary>
            历元（时间）列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.EnabledSatCount">
            <summary>
            可以计算的卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.EnabledPrns">
            <summary>
            参与计算的卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.UnstablePrns">
            <summary>
            不稳定的卫星，通常为具有周跳的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PeriodInformation.SatelliteTypes">
            <summary>
            可用卫星系统
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PeriodInformation.GetEpochSatWithEphemeris">
            <summary>
            具有星历的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.MultiSitePeriodInfo">
             <summary>
            多历元多测站数据模型
             </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.#ctor">
            <summary>
            构造函数，初始化基本变量。
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.Enabled">
            <summary>
            指示是否满足计算条件。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.EpochCount">
            <summary>
            历元数量,743333
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.ReceiverTime">
            <summary>
            最新一个历元的时间。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.Epoches">
            <summary>
            历元（时间）列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.EnabledSatCount">
            <summary>
            共同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.EnabledPrns">
            <summary>
            参与计算的卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.UnstablePrns">
            <summary>
            不稳定的卫星，通常为具有周跳的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.TotalPrns">
            <summary>
            所有出现过的卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.DisableOthers(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用其它卫星
            </summary>
            <param name="prns"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.Disable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用指定卫星
            </summary>
            <param name="differs"></param>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.Enable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            启用
            </summary>
            <param name="prns"></param>
        </member>
        <member name="P:Gnsser.Domain.MultiSitePeriodInfo.SatelliteTypes">
            <summary>
            可用卫星系统
            </summary>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.HasCycleSlip(Gnsser.SatelliteNumber)">
            <summary>
            指定卫星是否具有周跳，任一历元有，则有。
            </summary>
            <param name="prn">卫星编号</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetVector(System.String,Gnsser.SatelliteNumber,Gnsser.SatObsDataType,System.Double)">
            <summary>
            获取指定测站，指定卫星的多历元数据向量。
            名称为时间。
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <param name="dataType"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetEpochSatellites(System.String,Gnsser.SatelliteNumber)">
            <summary>
            返回测站卫星列表。
            </summary>
            <param name="siteName"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetSingleDifferResidualVector(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,Gnsser.SatelliteNumber)">
            <summary>
            单差的观测值平差向量，观测值减去估计值。参数顺序为先坐标参数x y z，再钟差，最后模糊度。
            </summary>
            <param name="dataType">观测类型</param>
            <param name="approxType">近似类型</param>
            <param name="basePrn">基准卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetDoubleDifferResidualVector(Gnsser.SatObsDataType,Gnsser.SatApproxDataType,Gnsser.SatelliteNumber)">
            <summary>
            双差平差残差
            </summary>
            <param name="dataType">观测类型</param>
            <param name="approxType">近似类型</param>
            <param name="basePrn">基准卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.ToString">
            <summary>
            显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetTabTitles">
            <summary>
            获取标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetTabValues">
            <summary>
            获取表格值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.MultiSitePeriodInfo.GetEpochSatWithEphemeris">
            <summary>
            具有星历的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.Combination">
            <summary>
            组合值.与观测值雷同。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.Combination.#ctor(System.Double)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param> 
        </member>
        <member name="T:Gnsser.Domain.ICombinateValue">
            <summary>
            组合值
            </summary>
        </member>
        <member name="T:Gnsser.Domain.IonoFreeAmbiguityMgr">
            <summary>
            无电离层模糊度计算，
            </summary>
        </member>
        <member name="M:Gnsser.Domain.IonoFreeAmbiguityMgr.#ctor">
            <summary>
            无电离层模糊度计算
            </summary>
        </member>
        <member name="M:Gnsser.Domain.IonoFreeAmbiguityMgr.SetIonoFreeCombination(Gnsser.Service.PppResult)">
            <summary>
            设置无电离层组合
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:Gnsser.Domain.IonoFreeCombination">
            <summary>
            电离层无关频率组合.
             采用宽项组合固定模糊度。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.IonoFreeCombination.#ctor(Gnsser.Domain.PhaseRangeObservation,Gnsser.Domain.PhaseRangeObservation)">
            <summary>
            构造函数。采用两个频率初始化。
            </summary>
            <param name="A">频率A</param>
            <param name="B">频率B</param>
        </member>
        <member name="P:Gnsser.Domain.IonoFreeCombination.WidePhase">
            <summary>
            宽巷.相位A - 相位B。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.IonoFreeCombination.NarrowPhase">
            <summary>
            窄巷.相位A。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.IonoFreeCombination.WideFactor">
            <summary>
            模糊度系数，相位A。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.IonoFreeCombination.NarrowFactor">
            <summary>
            模糊度系数，相位A - 相位B。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.IonoFreeCombination.SetAmbiguity(System.Double)">
            <summary>
            直接取整。设置属性。
            </summary>
            <param name="length">数值</param>
        </member>
        <member name="T:Gnsser.Domain.PhaseValue">
            <summary>
            频率相位
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseValue.#ctor(System.Double,Gnsser.Frequence)">
            <summary>
            构造函数。
            </summary>
            <param name="phase">相位</param>
            <param name="Frequence">频率</param>
        </member>
        <member name="P:Gnsser.Domain.PhaseValue.Ambiguity">
            <summary>
            模糊度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseValue.Phase">
            <summary>
            相位值
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseValue.Frequence">
            <summary>
            组合成新的频率,但并不是真实的频率。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseValue.PhaseRange">
            <summary>
            频率相位值代表的距离。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.PhaseCombination">
            <summary>
            相位组合。
            通常是一颗卫星的观测值，主要是载波相位的组合，因此输入卫星观测值。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombination.#ctor(System.Double,Gnsser.Frequence)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombination.Frequence">
            <summary>
            组合成新的频率,但并不是真实的频率。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.PhaseCombinationBuilder">
            <summary>
            载波相位组合构造器,构造常见的在载波或伪距组合值。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.#ctor(Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数。
            </summary>
            <param name="epochSatellite">站星线段</param>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.EpochSat">
            <summary>
            站星线段。一颗卫星的观测值。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.IonoFreeRange">
            <summary>
            无电离层双频伪距组合。第一和第二频率。
            消电离层组合，如果只有一个频率有值，则返回一个频率的伪距。
            如果都为0，则返回 0 值，请调用时判断！！。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.IonoFreePhaseRange">
            <summary>
            无电离层双频载波相位组合,单位：米。第一和第二频率。原始数据，未对齐。
            若有一个值为0，则不再组合，直接返回 0！！！！！
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeRange(Gnsser.FreqCombinationType,System.Boolean)">
            <summary>
            无电离层距离距值
            </summary>
            <param name="FreqCombinationType"></param>
            <param name="isPsuedoOrPhaseRange">是否伪距或相位</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.LiPhaseComb">
            <summary>
            LI双频载波相位组合
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.XBandPhaseComb">
             <summary>
            宽项组合，B频段的电离层效应下降 20%
             </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.WideBandPhaseCycleComb">
             <summary>
            宽项组合，B频段的电离层效应下降 40%
             </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.NarrowBandPhaseCycleComb">
             <summary>
            窄项组合
             </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.MwPhaseCombinationValue">
            <summary>
            MW组合值，单位：周。原始组合，改正了P1C1（若有）
            通常作为具有卫星和接收机硬件延迟的宽巷模糊度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.MwRangeCombination">
            <summary>
            MW双频载波相位组合，单位：米(宽项)，改正了P1C1（若有）,MW 组合观测量定义为宽巷载波与窄巷伪距之差,组合后，只剩下模糊度参数。
            主要用于探测周跳和求宽项模糊度值。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetMwValue(System.Double,System.Double,System.Double,System.Double,Gnsser.SatelliteType)">
            <summary>
            MW 值。
            </summary>
            <param name="L1"></param>
            <param name="L2"></param>
            <param name="P1"></param>
            <param name="P2"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetMwValue(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            MW组合值
            </summary>
            <param name="f1"></param>
            <param name="f2"></param>
            <param name="L1"></param>
            <param name="L2"></param>
            <param name="P1"></param>
            <param name="P2"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.MwTriFreqCombination">
            <summary>
            MW3频码相无电离层无几何组合，单位：周(宽项)。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.TriFreqBasedOnGF1Combination">
            <summary>
            三频，单位：m。相位无几何[1,-1,0]
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.TriFreqBasedOnGF2Combination">
            <summary>
            三频，单位：m。相位无几何[1,0,-1]
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.IonoFreeRangeThreeFrequency">
            <summary>
            无电离层3频伪距组合
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseCombinationBuilder.IonoFreePhaseRangeThreeFrequency">
            <summary>
            无电离层3频载波相位组合
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeRangeCombination(System.Double,System.Double,Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            无电离层距离组合
            </summary>
            <param name="range1">距离1</param>
            <param name="range2">距离2</param>
            <param name="A">频率1</param>
            <param name="B">频率2</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreePhaseCycleCombination(System.Double,System.Double,Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            无电离层相位组合，单位:周。
            </summary>
            <param name="phaseA"></param>
            <param name="phaseB"></param>
            <param name="A"></param>
            <param name="B"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeRangeOf(Gnsser.FrequenceType,Gnsser.FrequenceType,System.Boolean)">
            <summary>
            获取无电离层组合量,双频无电离层距离组合,返回已改正后的值。s
            </summary>
            <param name="type1"></param>
            <param name="type2"></param>
            <param name="isPsuedoOrPhaseRange">是否伪距或相位距离</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeComPhaseFrequence(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            无电离层的等效组合频率（非真的频率）。
            单位为周的频率。
            </summary>
            <param name="bandA">频率1</param>
            <param name="bandB">频率2</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeRangeCombFactors(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            两个频率的无电离层组合参数。适用于距离组合计算。
            含伪距距离，也包含载波对应的距离。
            若是GPS L1 和 L2 ，数值为 2.54 和 -1.54
            </summary>
            <param name="A">频率A</param>
            <param name="B">频率B</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeFrequence(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            无电离层组合频率，参加许老师《GPS理论算法与应用》P85
            </summary>
            <param name="A"></param>
            <param name="B"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.KycGetIonoFreeRangeCombFactors(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
             kyc:双频载波相位平滑伪距中两个频率的无电离层组合参数。适用于距离组合计算。
             含伪距距离，也包含载波对应的距离。
            </summary>
            <param name="A"></param>
            <param name="B"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreePhaseCycleCombFactors(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            2015.1.9 ，崔阳， 增加 以周为单位的无电离层组合的系数，只有以周为单位才能计算波长！！！！
            载波线性组合法的两个参数。 m和n。 P = m * p1 + n * p2. 
            系统前两个频率的无电离层组合系数。对于北斗是 L1=E2，L2=E6的组合。
            相位组合（以周为单位）.
            备注：这是以轴为单位的组合。
            整周未知数的系数,组合值为加号。
            分解为：N1 和 delta N = N1 - N2。
            见李征航 GPS测量数据处理 P101。
            若是GPS L1 和 L2，数值为 2.54 和 -1.98
            </summary>
            <param name="bandA">频率1</param>
            <param name="bandB">频率2</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeComValue(System.Double,System.Double,System.Double,Gnsser.Domain.EpochSatellite)">
            <summary>
            3频无电离层组合,返回已改正后的值。
            </summary>
            <param name="range1">载波或伪距1</param>
            <param name="range2">载波或伪距2</param>
            <param name="range3">载波或伪距3</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeCompositBandThreeFrequency(Gnsser.Domain.EpochSatellite,System.String)">
            <summary>
            指定系统的无电离层组合
            </summary>
            <param name="type">系统类型</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetCompositFreqenceBandThreeFrequency(System.Double,Gnsser.Frequence,System.Double,Gnsser.Frequence,System.Double,Gnsser.Frequence,System.String)">
            <summary>
            3个频率组成新的频率。
            </summary>
            <param name="factorA"></param>
            <param name="bandA"></param>
            <param name="factorB"></param>
            <param name="bandB"></param>
            <param name="factorC"></param>
            <param name="bandC"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeCombFactorsThreeFrequency2(Gnsser.Domain.EpochSatellite)">
            <summary>
            三频无电离层组合
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeCombFactorsThreeFrequency(Gnsser.Domain.EpochSatellite)">
            <summary>
            三频无电离层组合系数
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetDoublePhaseRangeCombination(Gnsser.Domain.EpochSatellite,System.Double,System.Double,System.String)">
            <summary>
            双频载波距离组合生成,返回相位组合，单位为米，如LI组合等。
            </summary>
            <param name="epochSat">卫星</param>
            <param name="factor1">系数</param>
            <param name="factor2">系数</param>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetIonoFreeRangeValue(System.Double,System.Double,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            提供便捷的AB频率无电离层组合。
            </summary>
            <param name="rangeA">伪距或载波距离</param>
            <param name="rangeB">伪距或载波距离</param>
            <param name="prn"></param>
            <param name="receiverTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetDoubleCompositFreqence(Gnsser.Domain.EpochSatellite,System.Double,System.Double,System.String)">
            <summary>
            双频组合后的频率
            </summary>
            <param name="epochSat"></param>
            <param name="factorA">载波相位系数</param>
            <param name="factorB">载波相位系数</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetCompositFreqence(System.Double,Gnsser.Frequence,System.Double,Gnsser.Frequence,System.String)">
            <summary>
            两个频率组成新的频率。简单的线性组合
            频率和载波相位都可以直接相加，而距离需要转换。
            </summary>
            <param name="factorA">系数A</param>
            <param name="bandA">频率A</param>
            <param name="factorB">系数B</param>
            <param name="bandB">频率B</param>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.PhaseCombinationBuilder.GetCombinationValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            两个数组成新的数。简单的线性组合
            </summary>
            <param name="factorA">系数A</param>
            <param name="valA">数值A</param>
            <param name="factorB">系数B</param>
            <param name="valB">数值B</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.AliningIonoFreePhaseProcessor">
            <summary>
            无电离层载波相位组合对齐器。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.AliningIonoFreePhaseProcessor.#ctor">
            <summary>
            无电离层载波相位组合对齐器。构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.AliningIonoFreePhaseProcessor.SatIonoFreeAmbiguityManager">
            <summary>
            无电离层的对齐模糊度，伪模糊度
            </summary>
        </member>
        <member name="T:Gnsser.Domain.EpochDataSourceWalker">
            <summary>
            RINEX 观测值数据源游走器/遍历器。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochDataSourceWalker.#ctor(System.Collections.Generic.IEnumerable{Gnsser.Domain.EpochInformation})">
            <summary>
            数据遍历处理器，构造函数。
            </summary>
            <param name="satData"></param>
        </member>
        <member name="T:Gnsser.Domain.EpochInfoToRinex">
            <summary>
            由EpochInformation转换为RINEX对象
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInfoToRinex.#ctor(System.Double,System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="rinexVersion"></param>
            <param name="ignoreDisabled"></param>
            <param name="IsUseCorrectedOfRange"></param>
        </member>
        <member name="P:Gnsser.Domain.EpochInfoToRinex.IgnoreDisabled">
            <summary>
            标记为未启用的，如数据不全、断断续续等，则不用输出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInfoToRinex.RinexVersion">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInfoToRinex.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInfoToRinex.IsUseCorrectedOfRange">
            <summary>
            是否采用伪距改正数，若有，需改正观测码
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInfoToRinex.Build(Gnsser.Domain.EpochInformation)">
            <summary>
            创建观测信息对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInfoToRinex.BuildHeader(Gnsser.Domain.EpochInformation)">
            <summary>
            生成头部文件。此处采用一个观测历元生成是有缺陷的！！后续观测可能会增加卫星！czs, 2015.12.25
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInfoToRinex.BuildObsCodes(Gnsser.Domain.EpochInformation)">
            <summary>
            由Gnsser历元观测类型创建RINEX观测码。由这一个历元的观测数据生成。
            </summary>
            <param name="epcohInfo"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.RinexEpochInfoBuilder">
            <summary>
            标准RINEX对象创建EpochInformation
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochInfoBuilder.#ctor(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            构造函数
            </summary>
            <param name="header"></param> 
        </member>
        <member name="M:Gnsser.Domain.RinexEpochInfoBuilder.#ctor(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            构造函数
            </summary>
            <param name="SatelliteTypes"></param>
        </member>
        <member name="P:Gnsser.Domain.RinexEpochInfoBuilder.RinexVersion">
            <summary>
            RINEX 版本
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochInfoBuilder.SetSatelliteTypes(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            系统类型
            </summary>
            <param name="SatelliteTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochInfoBuilder.Build(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            创建观测信息对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.RinexEpochSatBuilder">
            <summary>
            采用RINEX数据模型的 历元单卫星信息构造器
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.#ctor(Gnsser.Domain.RinexFreqObsBuilder)">
            <summary>
            构造函数
            </summary>
            <param name="FreqObsBuilder"></param>
        </member>
        <member name="P:Gnsser.Domain.RinexEpochSatBuilder.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.SetTime(Geo.Times.Time)">
            <summary>
            卫星编号
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.SetPrn(Gnsser.SatelliteNumber)">
            <summary>
            卫星编号
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.SetEpochInfo(Gnsser.Domain.EpochInformation)">
            <summary>
            设置历元信息
            </summary>
            <param name="EpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexEpochSatBuilder.Build(Gnsser.Data.Rinex.RinexSatObsData)">
            <summary>
            构建，如果可以，默认支持3个频率
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.EpochSatToRinex">
            <summary>
            Gnsser 站星对象转换为RINEX对象。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatToRinex.#ctor(System.Double,System.Boolean)">
            <summary>
            构造函数。 Gnsser 频率标识码转换到RINEX观测标识。
            </summary>
            <param name="rinexVersion"></param>
            <param name="IsUseCorrectedOfRange">是否将伪距观测值改正加入，包括平滑伪距，DCB等，注意DCB改正后，应该修改对应的观测码，
            如P1C1改正后应该将C1C修改为C1W，如果觉得麻烦，则不要勾选P1C1修改。</param> 
        </member>
        <member name="P:Gnsser.Domain.EpochSatToRinex.RinexVersion">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatToRinex.IsUseCorrectedOfRange">
            <summary>
            是否采用伪距改正数，若有，需改正观测码
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatToRinex.Build(Gnsser.Domain.EpochSatellite)">
            <summary>
            创建，转换为RINEX格式
            </summary>
            <param name="epochSat"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.RinexFreqObsBuilder">
            <summary>
            频率观测文件构造器。基于RINEX观测文件，构建GNSSer内部存储器。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Domain.RinexFreqObsBuilder.RinexFrequenceNumber">
            <summary>
            RINEX 编号，注意：有的并不一致，如北斗 L1 频率有的数字为 2，因此需要指定。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.RinexFreqObsBuilder.Frequence">
            <summary>
            频率
            </summary>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.SetFrequenceType(Gnsser.FrequenceType)">
            <summary>
            设置频率类型
            </summary>
            <param name="FrequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.SetRinexFrequenceNumber(System.Int32)">
            <summary>
            RINEX 频率数字，必须设置！
            </summary>
            <param name="RinexFrequenceNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.SetSatObsData(Gnsser.Data.Rinex.RinexSatObsData)">
            <summary>
            设置观测数据
            </summary>
            <param name="SatObsData"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.SetFrequence(Gnsser.Frequence)">
            <summary>
            设置Frequence
            </summary>
            <param name="Frequence"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.RinexFreqObsBuilder.Build(Gnsser.Data.Rinex.RinexSatObsData)">
            <summary>
            创建
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.EpochState">
            <summary>
            历元标记，对应于 RINEX EpochFlag
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.Ok">
            <summary>
            OK
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.PowerFailure">
            <summary>
             1: power failure between previous and current epoch
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.StartMoving">
            <summary>
            2: start moving antenna 
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.NewSiteOccupation">
            <summary>
            3: new site occupation (end of kinem. satData) (at least MARKER NAME record follows)  
            </summary>  
        </member>
        <member name="F:Gnsser.Domain.EpochState.HeaderInformationFollows">
            <summary>
            4: header information follows               
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.ExternalEvent">
            <summary>
            5: external event (epoch is significant, same time frame as observation time tags)
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.CycleSlip">
             <summary>
            表明为修复周跳的记录，根据LLI判读，信号强度指示为 0 或没有。
             If epoch flag = 6: 
            6: cycle slip records follow to optionally  report detected and repaired cycle slips 
            (same format as OBSERVATIONS records; 
            slip instead of observation;
            LLI and  signal strength blank or zero)    
             </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.ClockJumped">
            <summary>
            GNSSer 标记，此历元具有钟跳，且载波和伪距都发生了钟跳。
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.ClockJumpedPhaseOnly">
            <summary>
            只有相位发生了钟跳
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.ClockJumpedRangeOnly">
            <summary>
            只有伪距发生了钟跳
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochState.Disabled">
            <summary>
            Gnsser 标记，此历元是否可用，同 Unable, disabled
            如，若此历元不可用。
            </summary>
        </member>
        <member name="F:Gnsser.Domain.ClockJumpState.ClockJumped">
            <summary>
            GNSSer 标记，此历元具有钟跳，且载波和伪距都发生了钟跳。
            </summary>
        </member>
        <member name="F:Gnsser.Domain.ClockJumpState.ClockJumpedPhaseOnly">
            <summary>
            只有相位发生了钟跳
            </summary>
        </member>
        <member name="F:Gnsser.Domain.ClockJumpState.ClockJumpedRangeOnly">
            <summary>
            只有伪距发生了钟跳
            </summary>
        </member>
        <member name="T:Gnsser.Domain.EpochInformation">
            <summary>
            历元全信息。
            一个历元测站观测到一颗卫星的数据信息，是计算数据基本的存储类，是一个线段和两个点的信息。一个指定时刻的观测信息 和 对应的星历信息。
            一个该类的对象就可以进行定位。
            注意：这是本程序内部核心的数据存储模型，各种数据格式都需要转换为本模型后，再开展计算工作。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.#ctor">
            <summary>
            构造函数，初始化基本变量。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Epoches">
            <summary>
            历元列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EpochIndexOfDay">
            <summary>
            历元编号，一天之内的，通过时间和采样率计算出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.NumeralCorrections">
            <summary>
            测站相关的单值改正数或误差项，如对流层天顶距方向，电离层，钟差改正等。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.SiteName">
            <summary>
            测站名称 MarkerName,通常为4-8个字符的字符串
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Name">
            <summary>
            通常为文件名称，如 BJFS002.16O，作为不同测站之间的标识。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.TryUpdateObsWithCorrections">
            <summary>
            尝试更新观测码改正，已经包括了 C1C2 P1P2
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.SiteInfo">
            <summary>
            GNSS 测站固定信息，包括接收机和天线信息。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.ObsInfo">
            <summary>
            快速获取整个观测信息。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EpochState">
             <summary>
             历元标记，对应于 RINEX EpochFlag
             历元标志：0表示正常，1表示在前一历元与当前历元之间发生了电源故障，>1为事件标志
             If EVENT FLAG record (epoch flag > 1):         
             - Event flag:                                
             2: start moving antenna                     
             3: new site occupation (end of kinem. satData) (at least MARKER NAME record follows)   
             4: header information follows             
             5: external event (epoch is significant,same time frame as observation time tags)
             6: cycle slip records follow to optionally  report detected and repaired cycle slips (same format as OBSERVATIONS records;  
            slip instead of observation; LLI and signal strength blank)  
             </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.SatelliteTypes">
            <summary>
            支持的系统
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.CorrectableNeu">
            <summary>
            测站的本地NEU坐标。通常由各种改正数改正而来。
            具有时效性，每个历元都是一个独立的对象。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.CorrecedXYZ">
            <summary>
            估值坐标加上NEU改正
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Item(System.Int32)">
            <summary>
            通过数字编号来获取测站卫星向量。
            </summary>
            <param name="i">编号</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.ReceiverTime">
            <summary>
            历元观测时间，接收机钟面时，原始观测时间，没有经过改正。
            虽然本时间不够精确，但是我是一成不变的，这是我的优势，哈哈哈哈！！！
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.CorrectedTime">
            <summary>
            接收机钟改正后的历元。更加精确，但是改正一次就变化一次，不可以用作字典关键字Key。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Time">
            <summary>
            接收机观测时间。具有改正数。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetCycleSlipedPrns(System.Boolean)">
            <summary>
            具有周跳标记的卫星列表。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.TotalPrns">
            <summary>
            本历元所观测到的所有的卫星编号列表。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EnabledPrns">
            <summary>
            可用卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EnabledSatelliteTypes">
            <summary>
            可用卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.DisabledPrns">
            <summary>
            不可用卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.UnstablePrns">
            <summary>
            不稳定的卫星，通常为具有周跳的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.TotalSatCount">
            <summary>
            所有的卫星数量。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EnabledSatCount">
            <summary>
            可用的卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.EnabledSats">
            <summary>
            返回所有未禁用的卫星
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.SlipedPrns">
            <summary>
            具有周跳的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.TotalEphemerises">
            <summary>
            所有卫星星历集合，方便查看
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.OrderedProperties">
            <summary>
            排好序的属性名称
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Properties">
            <summary>
            排好序的属性名称
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Message">
            <summary>
            对象信息，如果对象停用了，一般给出其原因。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.Enabled">
            <summary>
            是否可用，是否启用。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochInformation.MWs">
            <summary>
            MW 值
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Contains(Gnsser.SatelliteType)">
            <summary>
            是否包含指定系统
            </summary>
            <param name="SatelliteType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.IsRecordedCycleSlipe">
            <summary>
            观测数据（接收机），或则某一卫星，是否标记发生了周跳或信号失锁。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetAdjustVector(Gnsser.SatObsDataType,System.Boolean)">
            <summary>
             返回的是残差值, 观测伪距向量，包含了观测值和近似值，可以直接用于计算，也可以拆分后计算。
            </summary>
            <param name="obsDataType">数据类型</param>
            <param name="isPhase">是否为载波</param>
            <param name="enabledSatOnly">是否只采用未禁用的卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetApproxRangeVector(Gnsser.SatObsDataType,System.Boolean)">
            <summary>
            获取近似距离向量
            </summary>
            <param name="obsDataType"></param>
            <param name="enabledSatOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetObsVector(Gnsser.SatObsDataType,System.Boolean)">
            <summary>
             观测向量或由观测值组合的向量.对伪距观测值加DCB改正，对载波相位观测值加天线相位缠绕
            </summary>
            <param name="obsDataType">数据类型</param> 
            <param name="enabledSatOnly">是否只采用未禁用的卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.HasCycleSlip(Gnsser.SatelliteNumber)">
            <summary>
            如果有该卫星，就如实返回，如果没有则返回false。
            </summary>
            <param name="prn">卫星编号</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.ClearCorrections">
            <summary>
            清除所有改正数。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetMaxElevationPrn(System.Boolean)">
            <summary>
            获取高度角最大的卫星编号
            </summary>
            <param name="isEnabledOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetMaxElevationPrns(System.Boolean)">
            <summary>
            获取高度角最大的卫星编号列表
            </summary>
            <param name="isEnabledOnly"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Enable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            启用
            </summary>
            <param name="prns"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.DisableOthers(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用未指定卫星的观测数据。
            </summary>
            <param name="enabledPrns">启用的集合</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Disable(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            禁用指定卫星的观测数据。
            </summary>
            <param name="tobeDisabledPrns">待删除的卫星集合</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Remove(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Boolean,System.String)">
            <summary>
            移除指定的卫星
            </summary>
            <param name="tobeRemovedPrns"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.RemoveIonoFreeUnavailable">
            <summary>
            移除不可以做无电离层组合的卫星
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Remove(Gnsser.SatelliteNumber,System.String)">
            <summary>
            移除,并且说明移除的原因
            </summary>
            <param name="prn"></param>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Remove(Gnsser.SatelliteNumber)">
            <summary>
            移除
            </summary>
            <param name="prn"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.RemoveOtherGnssSystem(Gnsser.SatelliteType)">
            <summary>
            移除未包含的卫星系统
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.RemoveOtherGnssSystem(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            移除未包含的卫星系统
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.DisableNoEphemeris">
            <summary>
            删除没有星历的观测信息。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.RemoveNoEphemeris">
            <summary>
            删除没有星历的观测信息。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.DisableAndEnableOthers(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            给指定卫星添加停用标记，而其余的标记为启用。这种卫星将不参与计算。
            </summary>
            <param name="tobeDisables">待停用卫星</param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.ValueClone">
            <summary>
            所有数据内容都克隆一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.CorrectClockJump(System.Double,Gnsser.Domain.ClockJumpState)">
            <summary>
            改正钟跳，只改正数值，不改正钟。
            </summary>
            <param name="ClockJumpCorretion"></param>
            <param name="ClockJumpState"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.Parse(Gnsser.Data.Rinex.RinexEpochObservation,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            快速生成
            </summary>
            <param name="epochObs"></param>
            <param name="SatelliteTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.ToString">
            <summary>
            打印输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.ToShortString">
            <summary>
            简短显示历元信息，包括名称和时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetTabTitles">
            <summary>
            获取表格分开的标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetTabValues">
            <summary>
            获取表格分开的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.RemoveZeroObsSat(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            移除0值卫星。
            </summary>
            <param name="isRemoveZeroRange"></param>
            <param name="isRemoveZeroPhase"></param>
            <param name="freqCount"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochInformation.GetEpochSatWithEphemeris">
            <summary>
            具有星历的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.EpochSatellite">
            <summary>
            包含一颗卫星和测站这个向量的数据，包括：观测数据、星历数据、卫星元数据、测站信息等，是本程序的核心存储模型。
            本类由观测数据进行初始化，
            再由模型进行误差改正，
            最后参与计算。
            大部分的前期计算工作,如：粗差探测、
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.#ctor(Gnsser.Domain.EpochInformation,Gnsser.SatelliteNumber)">
            <summary>
            默认构造函数
            </summary>
            <param name="epochInfo">历元观测信息</param>
            <param name="prn">卫星编号</param>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ReceiverTime">
            <summary>
            接收时刻
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Enabled">
            <summary>
            标记是否启用。如孤立观测值，或者数据不完整等。可以将其屏蔽，不参与计算。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Time">
            <summary>
            接收机观测时间。具有改正数。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Combinations">
            <summary>
            组合值创建器。组合值存在于观测值的组合，应该实时创建的。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.StdDevOfRange">
            <summary>
            观测伪距标准差，默认为1米。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ArcMarker">
            <summary>
            卫星弧段编号或时段编号，通常标定卫星所在的弧段（如周跳的分段）。
            Satellite arc number
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.SiteInfo">
            <summary>
            测站信息。//2015.05.14，czs, 迟早分离出去！
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.EpochInfo">
            <summary>
            测站历元信息
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.RecevingTime">
            <summary>
            信号接收时刻，这是系统时间，通常是由接收机钟面时改正而来
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.EmissionTime">
            <summary>
            信号发射时刻,来自星历计算后的时间
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetTransitTime">
            <summary>
            根据伪距计算卫星信号传输时间，单位秒。有卫星钟差和相对论时间改正会更精确。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Ephemeris">
            <summary>
            卫星发射时刻的星历。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.HasEphemeris">
            <summary>
            是否具有星历信息。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetIntersectionXyz(System.Double)">
            <summary>
            获取相交点、穿刺点，如电离层
            </summary>
            <param name="geoHeight">距离地球平均表面的距离 m, 默认 450 000 m</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AverageDopplorSpeed">
            <summary>
            求平均后的卫星相对接收机的速度， 单位：米/秒。相向为负，反向为正。注意：与多普勒频率大小相反。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FrequencyCount">
            <summary>
            频率数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.GeoElevation">
            <summary>
            卫星大地高度角，度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.SphereElevation">
            <summary>
            卫星球坐标高度角，度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.SpherePolar">
            <summary>
            站星球面极坐标（基于球面）。单位：度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Polar">
            <summary>
            站星大地极坐标（基于椭球面）。单位：度。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.HasAvailablePseudoRange">
            <summary>
            是否具有可用的伪距
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AvailablePseudoRange">
            <summary>
            返回一个可用的伪距，如果没有，则返回 0 。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FirstAvailable">
            <summary>
            载波 A 的观测量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FrequenceA">
            <summary>
            载波 A 的观测量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FrequenceB">
            <summary>
            载波 B 的观测量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FrequenceC">
            <summary>
            载波 C 的观测量。如 GPS 的 L5，北斗的第三频率。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.FrequenceTypes">
            <summary>
            卫星频率类型。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.RinexSatFrequences">
            <summary>
            RINEX格式的卫星频率列表。一个频率可能对应多个RINEX编号。如北斗C1->C1,C2
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IonoLenOfL1ByDifferL1L2">
            <summary>
            通过载波作差获取的电离层距离（含可以视为常数的硬件延迟和模糊度的倍数（GPS为1.54倍））
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IonoLenOfL2ByDifferL1L2">
            <summary>
            通过载波作差获取的电离层距离（含可以视为常数的硬件延迟和模糊度的倍数（GPS为2.54倍））
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetIonoLenByDifferPhase(Gnsser.FrequenceType)">
            <summary>
            通过载波作差获取的电离层距离（含可以视为常数的硬件延迟和模糊度的倍数（GPS为1.54或2.54倍））
            </summary>
            <param name="FrequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.TryUpdateObsWithCorrections">
            <summary>
            更新改正数， 如果有C1C2 的DCB改正，则会改正观测码 为 P1 P2
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.TryUpdateC1C2ToP1P2IfDcbCorrected">
            <summary>
            更新C1C2,并将改正数直接改正到原始数据上，同时移除P1C1等标记。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.HasP1">
            <summary>
            是否具有P1码
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.HasP2">
            <summary>
            是否具有P1码
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.HasCodeP(Gnsser.FrequenceType)">
            <summary>
            是否具有精码
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetPsuedoRangeCount(Gnsser.FrequenceType)">
            <summary>
            获取指定频率伪距数量。
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetApproxAmbiguityDistance(Gnsser.FrequenceType,System.Boolean)">
            <summary>
            获取某一频率的近似模糊度距离。
            </summary>
            <param name="frequencyType"></param>
            <param name="isTryIonoFree"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.Contains(Gnsser.RinexSatFrequency)">
            <summary>
            是否包含指定的卫星类型和频率
            </summary>
            <param name="satFreq">卫星类型和频率</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Item(Gnsser.SatObsDataType)">
            <summary>
            获取数值。
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.CommonCorrection">
            <summary>
            通用模型距离改正，同时适用于伪距和载波，如卫星钟差改正、对流层改正等。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.PhaseOnlyCorrection">
            <summary>
            相位距离改正，如电离层改正-
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.RangeOnlyCorrection">
            <summary>
            伪距特有距离改正，如电离层改正+
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetCommonPhaseCorrection">
            <summary>
            获取站星层次的通用载波距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetCommonRangeCorrection">
            <summary>
            获取站星层次的通用伪距距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.AddPhaseCyleCorrection(System.String,System.Double)">
            <summary>
            添加相位改正。对所有的相位起作用。这里转换成相位观测值距离的改正数（Frequence.PhaseRange.Correction）。
            </summary>
            <param name="corrector">相位改正数，是相位</param>
            <param name="phaseCorrection">相位改正数，是相位</param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.AddCommonCyleCorrection(System.String,System.Double)">
            <summary>
            添加周为单位的相位改正。对所有的观测值起作用。这里转换成观测值距离的改正数
            </summary>
            <param name="corrector">相位改正数，是相位</param>
            <param name="cycle">相位改正数，是相位</param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.AddCommonCorrection(System.String,System.Double)">
            <summary>
            添加本对象通用距离改正数
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.SetCommonCorrection(System.String,System.Double)">
            <summary>
            添加本对象通用距离改正数
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.AddRangeCorrection(System.String,System.Double)">
            <summary>
            添加伪距距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.AddPhaseCorrection(System.String,System.Double)">
            <summary>
            添加相位距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.ClearCorrections">
            <summary>
            移除所有的改正数，包括公共的和频率私有的。
            通常是为了重新计算。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetApproxReceiverTimeErrorDistance(Geo.Coordinates.XYZ)">
            <summary>
            估计测站钟差对距离的影响.此处认为距离受卫星和接收机钟差影响
            </summary>
            <param name="revPos">接收机位置</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IsIonoFreeAvailable">
            <summary>
            是否可以做电离层组合
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ObsCorrectionNames">
            <summary>
            观测值改正名称
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetPseudoRange(Gnsser.RangeType)">
            <summary>
            获取伪距数据量
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetPhaseRange(Gnsser.RangeType)">
            <summary>
            获取伪距数据量
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetDataValue(Gnsser.SatObsDataType)">
            <summary>
            获取指定了数值。
            </summary>
            <param name="dataType">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetResidual(Gnsser.SatObsDataType,Gnsser.SatApproxDataType)">
            <summary>
            获取残差。观测值减去近似值。
            </summary>
            <param name="obsType">观测值类型</param>
            <param name="approxType">近似值类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetDataValue(Gnsser.SatApproxDataType)">
            <summary>
            获取指定了数值。
            </summary>
            <param name="dataType">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.CorrectClockJump(System.Double,Gnsser.Domain.ClockJumpState)">
            <summary>
            钟跳改正
            </summary>
            <param name="clockJumpCorretion">单位：秒</param>
            <param name="clockJumpState"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.ValueClone">
            <summary>
            数值克隆
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxVector">
            <summary>
            测站到卫星估值向量,由测站概略值坐标计算而出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.EstmatedVector">
            <summary>
            测站到卫星估值向估计量,由测站估值坐标计算而出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IonoFreeApproxPseudoRange">
            <summary>
            通过卫星和测站估值坐标计算出的距离结果,以及所有改正数的集合。
            各个频率的改正结果，也应该加在这上面。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IonoFreeApproxPhaseRange">
            <summary>
            通过卫星和测站估值坐标计算出的距离结果,以及所有改正数的集合。
            各个频率的改正结果，也应该加在这上面。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AvailableApproxPseudoRange">
            <summary>
            遍历，返回一个可用的近似伪距
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPseudoRangeA">
            <summary>
            频率A的近似伪距值
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPseudoRangeB">
            <summary>
            频率B的近似伪距值
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPseudoRangeC">
            <summary>
            频率C 的近似伪距值
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPhaseRangeA">
            <summary>
            基于频率A的伪距，增加了部分关于频率A的改正
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPhaseRangeB">
            <summary>
            基于频率B的伪距，增加了部分关于频率B的改正
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPhaseRangeC">
            <summary>
            基于频率C的伪距，增加了部分关于频率C的改正
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetApproxPseudoRange(Gnsser.FrequenceType)">
            <summary>
            获取某一频率的近似伪距，包括改正数。
            注意：这里通常不包括接收机钟差改正。
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetApproxPhaseRange(Gnsser.FrequenceType)">
            <summary>
            获取某一频率的伪距，及其所有改正数。
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPseudoRangeOfTriFreq">
            <summary>
            通过卫星和测站估值坐标计算出的距离结果,以及所有改正数的集合。
            各个频率的改正结果，也应该加在这上面。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.ApproxPhaseRangeOfTriFreq">
            <summary>
            通过卫星和测站估值坐标计算出的距离结果,以及所有改正数的集合。
            各个频率的改正结果，也应该加在这上面。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AlignedIonoFreePhaseRange">
            <summary>
            对其后的相位观测量。改正后的相位值。是组合观测值和改正值之和
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AlignedIonoFreePhaseRangeOfTriFreq">
            <summary>
            对其的三频无电离层组合
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AmbiguityOfIonoFreePhase">
            <summary>
            相位模糊度。检查并获取相位组合值与伪距对齐的模糊度。模糊度准确才能保证计算的准确性!!!!！！！！！
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AmbiguityOfIonoFreePhaseOfTriFreq">
            <summary>
            相位模糊度。检查并获取相位组合值与伪距对齐的模糊度。模糊度准确才能保证计算的准确性!!!!！！！！！
            </summary> 
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.IsUnstable">
            <summary>
            当前数值是否稳定标记，如是否具有周跳。模糊度是否已经固定。而非采用伪距改正的值。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.SetCycleSlip(System.Boolean)">
            <summary>
            设置所有频率的周跳情况,设置频率的 IsCycleSliped 属性。
            </summary>
            <param name="trueOrFalse"></param>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.IsRecordedCycleSlipe">
            <summary>
            观测数据（接收机）某一频率是否标记发生了周跳或信号失锁。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.ToString">
            <summary>
            简要字符描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetTabTitles">
            <summary>
            表格的题目
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetTabValues">
            <summary>
            表格的行
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.WetMap">
            <summary>
            对流层湿延迟——系数，中对流层矫正器的时候赋值。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AppriorTropDelay">
            <summary>
            当前历元的对流层天顶延迟，直接计算而出，可以用于无对流参数的伪距定位。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.AppriorWetDelay">
            <summary>
            当前历元的天顶对流层湿延迟
            </summary>
        </member>
        <member name="F:Gnsser.Domain.EpochSatellite.WetMap_ZTD">
            <summary>
            天顶方向映射函数
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Vmf1WetMap">
            <summary>
            VMF1的湿分量映射函数
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.DcbP1C1">
            <summary>
            DCB-P1C1
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetAdjustValue(Gnsser.SatObsDataType)">
            <summary>
            平差观测值获取
            </summary>
            <param name="obsDataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetObsValue(Gnsser.SatObsDataType)">
            <summary>
            观测值
            </summary>
            <param name="obsDataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetApproxRange(Gnsser.SatObsDataType)">
            <summary>
            获取近似距离
            </summary>
            <param name="obsDataType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetRawPhaseRangeResidual(Gnsser.FrequenceType)">
            <summary>
            原始载波距离减去站星距离
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetRawRangeResidual(Gnsser.FrequenceType)">
            <summary>
            原始伪距距离减去站星距离
            </summary>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.MwCycle">
            <summary>
            MW值，仅对C1改正
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Mp1">
            <summary>
            mp1，多路径指标
            </summary>
        </member>
        <member name="P:Gnsser.Domain.EpochSatellite.Mp2">
            <summary>
            mp2，多路径指标
            </summary>
        </member>
        <member name="M:Gnsser.Domain.EpochSatellite.GetObservationCodes">
             <summary>
            获取这颗卫星的观测类型
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.IValueClone`1">
            <summary>
            数值克隆
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gnsser.Domain.IValueClone`1.ValueClone">
            <summary>
            数值克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.SameTypeObservations">
            <summary>
            支持不同属性的观测数据
            </summary>
        </member>
        <member name="M:Gnsser.Domain.SameTypeObservations.#ctor(Gnsser.ObservationType)">
            <summary>
            默认构造函数
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Gnsser.Domain.SameTypeObservations.ObservationType">
            <summary>
            观测码类型
            </summary>
        </member>
        <member name="P:Gnsser.Domain.SameTypeObservations.ObsCorrectionNames">
            <summary>
            观测值改正名称
            </summary>
        </member>
        <member name="M:Gnsser.Domain.SameTypeObservations.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.SameTypeObservations.ValueClone">
            <summary>
            数值克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.SameTypeObservations.UpdateValueWithCorrections">
            <summary>
            更观测值，并清空改正数。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.FreqenceObservation">
            <summary>
            载波上的观测量，载波相位观测量类，包含指定频段载波上的所有的观测值，包含了伪距观测值和载波观测值，多普勒观测值（待实现）等。
            本类是观测值类，数据一旦确定就不应该更改！
            </summary>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.#ctor(Gnsser.Frequence,Gnsser.FrequenceType)">
            <summary>
            通用构造函数
            </summary>
            <param name="band">频率</param>
            <param name="FrequenceType">频率类型</param>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.Enabled">
            <summary>
            标记是否启用。如孤立观测值，或者数据不完整等。可以将其屏蔽，不参与计算。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.Message">
            <summary>
            对象信息，如果对象停用了，一般给出其原因。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.FrequenceType">
            <summary>
            频率类型
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.Frequence">
            <summary>
            频率。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.IsPhaseLossedLock">
            <summary>
            信号是否失锁，如载波重新计数。 根据观测信息LLI参数，指示是否具有周跳。算法有待考虑。？？？2014.09.13
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.IsCycleSliped">
            <summary>
            外部标记，是否发生了周跳
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.DopplerShift">
            <summary>
            多普勒频移。单位：Hz，每秒频率移动的次数。
            注意：这里的方向与RINEX定义相同，如果为负数，则表示远离测站，如果为正数，则表示靠近Approach测站。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.DopplerSpeed">
            <summary>
            根据多普勒频移计算出的卫星相对接收机的径向速度。
            这是一个一维坐标，原点在测站，速度方向远离测站为正，靠近测站为负数。注意与多普勒频移的区别。 
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.PseudoRange">
            <summary>
            载波上的伪距。默认伪距，优先返回 P 码。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetPseudoRanges">
            <summary>
            返回所有的伪距观测值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.PhaseRange">
            <summary>
            相位观测值等效的距离，单位：米。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.LossLockIndicator">
            <summary>
            失锁指示.值同Rinex定义0 为OK。
            Loss of lock indicator (LLI). Range: 0-7   0 or blank: OK or not known     
            如果值是 1，3，5，7 则表示有失锁或周跳。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.SignalStrength">
            <summary>
            信号强度，值同Rinex定义Signal strength projected into interval 1-9:   
            1: minimum possible signal strength     
            5: threshold for good S/N ratio    
            9: maximum possible signal strength   
            0 or blank: not known, don't care   
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.ApproxAmbiguityLength">
            <summary>
            近似模糊度长度。由伪距计算出。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.TempAmbiguity">
            <summary>
            用于暂存模糊度参数。根据程序约定，自动设置值，如单位可以为米，周。可以包含其他误差，如电离层。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.TempAmbiguityAndIonoLength">
            <summary>
            暂存模糊度和电离层之和
            Y 包含了当前历元的电离层和一半的模糊度距离
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.TempIonoLength">
            <summary>
            临时的电离层改正
            </summary>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetTotalRangeCorrection">
            <summary>
            本频率伪距的所有的改正数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetTotalPhaseCorrection">
            <summary>
            本频率伪距的所有的改正数,距离
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.CommonCorrection">
            <summary>
            本频率通用距离改正数，同时适用于载波相位和伪距，用于计算观测近似值。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.PhaseOnlyCorrection">
            <summary>
            本频率相位距离改正数，只适用于载波相位，用于计算观测近似值。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.RangeOnlyCorrection">
            <summary>
            伪距特有距离改正，如电离层改正+
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.PsuedoRangeCount">
            <summary>
            伪距数量
            </summary>
        </member>
        <member name="P:Gnsser.Domain.FreqenceObservation.ObsCorrectionNames">
            <summary>
            观测值改正名称
            </summary>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetCommonPhaseCorrection">
            <summary>
            获取本频率与相位相关的距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetCommonRangeCorrection">
            <summary>
            获取站星层次的通用伪距距离改正
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.AddRangeCorrection(System.String,System.Double)">
            <summary>
            添加伪距距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.AddPhaseCorrection(System.String,System.Double)">
            <summary>
            添加相位距离改正
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.AddPhaseCyleCorrection(System.String,System.Double)">
            <summary>
            添加相位改正。对所有的相位起作用。这里转换成相位观测值距离的改正数（Frequence.PhaseRange.Correction）。
            </summary>
            <param name="corrector">相位改正数，是相位</param>
            <param name="cycle">相位改正数，是相位</param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.AddCommonCyleCorrection(System.String,System.Double)">
            <summary>
            添加周为单位的相位改正。对所有的观测值起作用。这里转换成观测值距离的改正数
            </summary>
            <param name="corrector">相位改正数，是相位</param>
            <param name="cycle">相位改正数，是相位</param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.AddCommonCorrection(System.String,System.Double)">
            <summary>
            添加本频率通用距离改正数
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.Set(Gnsser.ObservationType,Gnsser.Domain.Observation)">
            <summary>
            设置
            </summary>
            <param name="ObservationType"></param>
            <param name="Observation"></param>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.ClearCorrections">
            <summary>
            移除所有改正，通常是为了重新改正。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.ToString">
            <summary>
            改正后的字符串
            </summary>
            
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetTabValues">
            <summary>
            以制表位分割属性，利用导入到Excel中分析。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.GetTabTitles">
            <summary>
            以制表位为分隔符的元素标题。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.FreqenceObservation.DataClone">
            <summary>
            数值克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Domain.IObservation">
            <summary>
            观测量，包含载波、伪距、多普勒，观测值得组合观测值等。
            观测量由观测值和其改正组数成。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.Observation">
            <summary>
            观测量，包含载波、伪距、多普勒，观测值得组合观测值等。
            观测量由观测值和其改正组数成。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.Observation.#ctor(System.Double,Gnsser.ObservationCode)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">数值</param> 
            <param name="ObservationCode"> RINEX 码类型</param>
        </member>
        <member name="P:Gnsser.Domain.Observation.GnssCodeType">
            <summary>
            GNSSer 波、码的类型。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.Observation.ObservationCode">
            <summary>
            RINEX 波、码的类型。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.Observation.AddCorrection(Gnsser.Correction.CorrectionNames,System.Double)">
            <summary>
            增加改正
            </summary>
            <param name="name"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Domain.Observation.SetCorrection(Gnsser.Correction.CorrectionNames,System.Double)">
            <summary>
            增加改正
            </summary>
            <param name="name"></param>
            <param name="val"></param>
        </member>
        <member name="P:Gnsser.Domain.Observation.CorrectionNames">
            <summary>
            观测值改正名称
            </summary>
        </member>
        <member name="M:Gnsser.Domain.Observation.ValueClone">
            <summary>
            数值克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Domain.Observation.UpdateValueWithCorrections">
            <summary>
            将改正数更新到数值，并清空改正数。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.IUpdateValueWithCorrections">
            <summary>
            将改正数更新到数值，并清空改正数。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.IUpdateValueWithCorrections.UpdateValueWithCorrections">
            <summary>
            将改正数更新到数值，并清空改正数。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.ObservationWithCommonCorrection">
            <summary>
            观测量，包含载波、伪距、多普勒，观测值得组合观测值等。
            观测量由观测值和其改正组数成。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.ObservationWithCommonCorrection.#ctor(System.Double,Geo.Correction.NumerialCorrectionDic,Gnsser.ObservationCode)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param>
            <param name="CommonCorrection">改正器，也可以后来赋值</param>
        </member>
        <member name="P:Gnsser.Domain.ObservationWithCommonCorrection.CommonCorrection">
            <summary>
            外部公共改正数。
            </summary>
        </member>
        <member name="T:Gnsser.Domain.PhaseRangeObservation">
            <summary>
            相位距离观测量。
            //czs, 2015.05.14, 本类是否该继承自 相位的 ObsValue ????有待考虑。
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseRangeObservation.#ctor(Gnsser.Data.Rinex.RinexObsValue,Gnsser.Frequence)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="phaseValue">相位观测值</param>
            <param name="Frequence">频率</param> 
        </member>
        <member name="M:Gnsser.Domain.PhaseRangeObservation.#ctor(System.Double,Gnsser.ObservationCode,Gnsser.Frequence,System.Int32,Gnsser.Data.Rinex.LossLockIndicator)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="rawPhaseValue">相位观测值</param>
            <param name="Frequence">频率</param> 
            <param name="ObservationCode"></param> 
            <param name="LossLockIndicator"></param> 
            <param name="SignalStrength"></param> 
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.LossLockIndicator">
            <summary>
            信号失锁标记。此数据不应该赋值，只应该由观测数据决定
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.OffsetCycle">
            <summary>
            模糊度。接收时刻的相位等于发射时刻的相位（Remondi，1984；Leick，1995）。
            那么中间就差个整周数。？？？
            或者直接放在改正数里面？？？？
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.AlinedCorrectedRange">
            <summary>
            等效的距离， 为 偏差距离改正数 + 改正后的距离。
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.Frequence">
            <summary>
            频率
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.SignalStrength">
            <summary>
            信号强度
            </summary>
        </member>
        <member name="P:Gnsser.Domain.PhaseRangeObservation.RawPhaseValue">
            <summary>
            原始相位观测值,单位：周.
            </summary>
        </member>
        <member name="M:Gnsser.Domain.PhaseRangeObservation.SetRawValue(System.Double)">
            <summary>
            设置更新相位值
            </summary>
            <param name="rawVal"></param>
        </member>
        <member name="M:Gnsser.Domain.PhaseRangeObservation.AddPhaseRange(System.Double)">
             <summary>
            加上一个相位距离，单位：m
             </summary>
             <param name="range"></param>
        </member>
        <member name="M:Gnsser.Domain.PhaseRangeObservation.AddPhaseCycle(System.Double)">
             <summary>
            加上一个相位，单位：周
             </summary>
             <param name="cycle"></param>
        </member>
        <member name="T:Gnsser.Correction.SatAntennaPcoCorrector">
            <summary>
            卫星PCO改正
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcoCorrector.#ctor(Gnsser.DataSourceContext)">
            <summary>
            构造函数
            </summary>
            <param name="DataSouceProvider"></param>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcoCorrector.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcoCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="epochSatellite"></param>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcoCorrector.GetSatAntOff(Gnsser.SatelliteNumber,Gnsser.RinexSatFrequency,Gnsser.IEphemeris,Geo.Times.Time)">
            <summary>
            根据太阳计算卫星偏差
            </summary>
            <param name="prn"></param>
            <param name="eph"></param>
            <param name="emissionTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.SatAntennaPcvCorrector">
            <summary>
            卫星天线对频率观测值的改正
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.#ctor(Gnsser.DataSourceContext)">
            <summary>
            接收机天线对频率观测值的改正误差改正
            antenna excentricity，difference in phase centers
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcvCorrector.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcvCorrector.AntennaDataSource">
            <summary>
            天线数据源
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcvCorrector.UniverseObjectProvider">
            <summary>
            宇宙计算
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcvCorrector.ErpDataService">
            <summary>
            ERP 服务
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SatAntennaPcvCorrector.SatInfoService">
            <summary>
            卫星信息
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="epochSatellite"></param>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.GetSatPhaseCenterCorectValue(Gnsser.SatelliteNumber,Gnsser.RinexSatFrequency,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.GeoCoord,Geo.Coordinates.XYZ,Gnsser.Data.SatInfoFile,Gnsser.Data.IAntenna)">
            <summary>
            计算卫星相位中心改正值。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="freq">频率</param>
            <param name="time">历元</param>
            <param name="satPos">卫星位置</param>
            <param name="sunPosition">太阳位置</param>
            <param name="ReceiverPosition">接收机位置</param>
            <param name="StationLonLatHeight">测站位置</param>
            <param name="satData">Name of "PRN_GPS"-like file containing satellite satData.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.GetPhaseCorrection(Gnsser.SatelliteNumber,Gnsser.RinexSatFrequency,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double,Gnsser.Data.IAntenna)">
            <summary>
            卫星天线相位中心改正，参照GPSTK模块
            </summary>
            <param name="prn"></param>
            <param name="satPos"></param>
            <param name="ReceiverPosition"></param>
            <param name="sunPosition"></param>
            <param name="svPCcorr"></param>
            <param name="antenna"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.GetPhaseCorrection1(Gnsser.SatelliteNumber,Gnsser.RinexSatFrequency,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.GeoCoord,Geo.Coordinates.XYZ,System.Double,Gnsser.Data.IAntenna)">
            <summary>
            卫星天线相位中心改正，参照RTKLIB
            </summary>
            <param name="prn"></param>
            <param name="freq"></param>
            <param name="satPos"></param>
            <param name="ReceiverPosition"></param>
            <param name="sunPosition"></param>
            <param name="svPCcorr"></param>
            <param name="antenna"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPcvCorrector.DefautSatPhaseCorrector(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.Data.SatInfoFile)">
            <summary>
            默认的卫星天线相位改正。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="satPos"></param>
            <param name="ReceiverPosition"></param>
            <param name="sunPosition"></param>
            <param name="satData"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.SingleFreqSelfIonoRangeReviser">
            <summary>
            单频电离层自我改正
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="processOption"></param>
        </member>
        <member name="M:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.#ctor(System.Boolean,Gnsser.SatObsDataType,System.Int32,System.Boolean,Gnsser.FrequenceType,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="IsUseGNSSerSmoothRangeMethod"></param>
            <param name="ObsDataType"></param>
            <param name="WindowSize"></param>
            <param name="isWeighted"></param>
            <param name="FrequenceType"></param>
            <param name="isDeltaIonoFit"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="BufferSize"></param>
            <param name="ionoFitEpochCount"></param>
            <param name="SmoothRangeType"></param>
            <param name="IndicatedIonoDeltaFilePath"></param>
        </member>
        <member name="M:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.#ctor(System.Boolean,Gnsser.SatObsDataType,System.Int32,System.Boolean,System.Collections.Generic.List{Gnsser.FrequenceType},Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="IsUseGNSSerSmoothRangeMethod"></param>
            <param name="ObsDataType"></param>
            <param name="WindowSize"></param>
            <param name="isWeighted"></param>
            <param name="FrequenceTypes"></param>
            <param name="isDeltaIonoFit"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="BufferSize"></param>
            <param name="ionoFitEpochCount"></param>
            <param name="SmoothRangeType"></param>
            <param name="IndicatedIonoDeltaFilePath"></param>
        </member>
        <member name="P:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.ObsDataType">
            <summary>
            观测值类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.IsDualIonoFree">
            <summary>
            是否双频
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.FrequenceTypes">
            <summary>
            单频改正的类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.PhaseSmoothedRangeBuilderManager">
            <summary>
            平滑器
            </summary>
        </member>
        <member name="P:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.PrevMaterial">
            <summary>
            上一个材料
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SingleFreqSelfIonoRangeReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.PhaseSmoothRangeReviser">
            <summary>
            缓存多项式伪距拟合平滑。
            根据观测类型进行改正。支持双频。
            需要在周跳探测后使用。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="processOption"></param>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="isUseingApprovedMethod"></param>
            <param name="isIonoFreeDualFreq"></param>
            <param name="WindowSize"></param>
            <param name="isWeighted"></param>
            <param name="ionoDifferCorrectionType"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="BufferSize"></param>
            <param name="ionoFitEpochCount"></param>
            <param name="SmoothRangeType"></param>
            <param name="ionoDeltaFilePath"></param>
        </member>
        <member name="P:Gnsser.Correction.PhaseSmoothRangeReviser.IsNeedBuffer">
            <summary>
            是否需要缓存，用于拟合电离层变化
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseSmoothRangeReviser.IonoDeltaTable">
            <summary>
            电离层延迟表格。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseSmoothRangeReviser.InputedIonoDelta">
            <summary>
            外部输入电离层变化数据，用以改正电离层。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseSmoothRangeReviser.IsDualIonoFree">
            <summary>
            是否双频
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseSmoothRangeReviser.PhaseSmoothedRangeBuilderManager">
            <summary>
            平滑器
            </summary>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.RevisedEachFrequence(Gnsser.Domain.EpochInformation)">
            <summary>
            单频逐个改正
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.ReviseOneFreq(Gnsser.Domain.EpochSatellite,Gnsser.FrequenceType,Gnsser.Domain.FreqenceObservation)">
            <summary>
            校正其中一个。
            </summary>
            <param name="sat"></param>
            <param name="freq"></param>
            <param name="obsFreq"></param>
        </member>
        <member name="M:Gnsser.Correction.PhaseSmoothRangeReviser.ReviseDualIonoFree(Gnsser.Domain.EpochInformation)">
            <summary>
            双频无电离层组合校正
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:Gnsser.Correction.BufferPolyRangeSmoothReviser">
            <summary>
            缓存多项式伪距拟合平滑
            </summary>
        </member>
        <member name="M:Gnsser.Correction.BufferPolyRangeSmoothReviser.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="processOption"></param>
        </member>
        <member name="P:Gnsser.Correction.BufferPolyRangeSmoothReviser.WindowSize">
             <summary>
            窗口
             </summary>
        </member>
        <member name="P:Gnsser.Correction.BufferPolyRangeSmoothReviser.HalfWindowSize">
            <summary>
            一半窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.Correction.BufferPolyRangeSmoothReviser.LastWindowDataManager">
            <summary>
            过去的数据
            </summary>
        </member>
        <member name="M:Gnsser.Correction.BufferPolyRangeSmoothReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.BufferPolyRangeSmoothReviser.SetPolyFitCorrection(Gnsser.Domain.EpochSatellite,Gnsser.FrequenceType)">
            <summary>
            设置改正的误差
            </summary>
            <param name="sat"></param>
            <param name="frequenceType"></param>
        </member>
        <member name="M:Gnsser.Correction.BufferPolyRangeSmoothReviser.GetBufferValues(Gnsser.SatelliteNumber,Gnsser.FrequenceType)">
            <summary>
            获取窗口
            </summary>
            <param name="prn"></param>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.IonoDcbP1Corrector">
            <summary>
            电离层 DCB P1 距离改正, 也可以直接改正IGS钟差产品
            </summary>
        </member>
        <member name="M:Gnsser.Correction.IonoDcbP1Corrector.#ctor(Gnsser.Data.IGridIonoFileService)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.IonoDcbP1Corrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="sat"></param>
        </member>
        <member name="T:Gnsser.Correction.EpochParamIonoCorrector">
            <summary>
            历元电离层参数改正,单频
            </summary>
        </member>
        <member name="M:Gnsser.Correction.EpochParamIonoCorrector.#ctor(Gnsser.IonoEpochParamService,System.Boolean)">
            <summary>
            构造函数 历元电离层参数改正
            </summary>
        </member>
        <member name="P:Gnsser.Correction.EpochParamIonoCorrector.IsCorrectionOnPhase">
            <summary>
            是否改正到相位上。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.EpochParamIonoCorrector.IonoService">
            <summary>
            对流层文件服务
            </summary>
        </member>
        <member name="T:Gnsser.Correction.IonoGridModelCorrector">
            <summary>
            IGS 电离层模型改正,单频,直接改正到站星对象
            </summary>
        </member>
        <member name="M:Gnsser.Correction.IonoGridModelCorrector.#ctor(Gnsser.Data.IIonoService,System.Boolean)">
            <summary>
            构造函数 格网电离层模型改正
            </summary>
        </member>
        <member name="P:Gnsser.Correction.IonoGridModelCorrector.IsCorrectionOnPhase">
            <summary>
            是否改正到相位上。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.IonoGridModelCorrector.IonoService">
            <summary>
            对流层文件服务
            </summary>
        </member>
        <member name="M:Gnsser.Correction.IonoGridModelCorrector.GetGridModelCorrection(Gnsser.Domain.EpochSatellite,Gnsser.FrequenceType,Gnsser.Data.IIonoService)">
            <summary>
            获取电离层格网模型延迟
            </summary>
            <param name="sat"></param>
            <param name="frequenceType"></param>
            <param name="IonoService"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoGridModelCorrector.GetIonoDelayRange(System.Double,System.Double)">
            <summary>
            电离层对于伪距的延迟距离，若是载波在换符号。
            </summary>
            <param name="tec">电子数量，单位 1e16.</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.CorrectChianType">
            <summary>
            改正器链分类，用于确定改正数最终加在什么量上面。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectChianType.Self">
            <summary>
            自己直接改正，责任链不必相加。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectChianType.Common">
            <summary>
            通用距离改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectChianType.RangeOnly">
            <summary>
            伪距改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectChianType.PhaseRangeOnly">
            <summary>
            相位距离改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectChianType.Phase">
            <summary>
            相位改正
            </summary>
        </member>
        <member name="T:Gnsser.Correction.GnssCorrectorChain`2">
            <summary>
            改正数链表。
            </summary>
            <typeparam name="TCorrection"></typeparam>
            <typeparam name="TInput"></typeparam>
        </member>
        <member name="P:Gnsser.Correction.GnssCorrectorChain`2.CorrectChianType">
            <summary>
            改正器类型
            </summary>
        </member>
        <member name="T:Gnsser.Correction.CorrectionType">
            <summary>
            计算类型
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.Unkown">
            <summary>
            未知，默认
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RecAntennaArp">
            <summary>
            接收机天线ARP改正，单位NEU
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RecAntennaPco">
            <summary>
            接收机天线PCO误差改正，单位NEU
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RecAntennaPcv">
            <summary>
            接收机天线对频率观测值的改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.SatAntennaPcv">
             <summary>
            卫星天线对频率观测值的改正
             </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.OceanTides">
            <summary>
            海洋潮汐改正，单位NEU
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.PoleTides">
            <summary>
            极潮改正，单位NEU
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.SolidTides">
            <summary>
             固体潮改正，单位NEU
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.ClockBiasCorrector">
            <summary>
            卫星钟改正， 距离改正数
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RangeDifferCorrector">
            <summary>
            距离差分改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.Dcb">
            <summary>
            DCB改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RangeOnlyCorrector">
            <summary>
            距离改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.PhaseOnlyCorrector">
            <summary>
            相位改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.GravitationalDelay">
            <summary>
            引力延迟效应改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.PhaseWindUp">
            <summary>
            计算相位缠绕改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RangeTropo">
            <summary>
             对流程改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.ClockRelative">
            <summary>
            钟差的相对论改正，与光速相差转换为伪距改正。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.SatAntennaPhaseCenter">
            <summary>
            计算卫星天线相位中心改正数。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.TroposphericModel">
            <summary>
            对流程改正。默认采用Neill模型。这里只是干分量slant改正，湿延迟作为未知参数估计。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.PhaseChain">
            <summary>
            相位改正组合值
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.IonoParam">
            <summary>
            电离层参数改正模型
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.IonoGridModel">
            <summary>
            电离层格网改正模型
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.RangeChain">
            <summary>
            通用距离改正组合
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.NeuChain">
            <summary>
            通用测站坐标改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.FrequenceBasedRangChain">
            <summary>
            依据频率的卫星天线Rang改正
            </summary>
        </member>
        <member name="F:Gnsser.Correction.CorrectionType.FrequenceBasedNeuChain">
            <summary>
            依据频率的测站 NEU 改正
            </summary>
        </member>
        <member name="T:Gnsser.Correction.AbstractEpochNeuReviser">
            <summary>
             历元测站坐标改正器。
            </summary>
        </member>
        <member name="T:Gnsser.Correction.EpochNeuCorrectionReviser">
            <summary>
            通用测站 NEU 改正，对所有的距离观测值都起作用。
            卫星改正的责任链,是一组改正对象的组合。一般采用此类将各种改正进行组合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.EpochNeuCorrectionReviser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Correction.EpochNeuCorrectionReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Gnsser.Correction.EpochNeuCorrectionReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Correction.OceanTidesCorrector.#ctor(Gnsser.DataSourceContext)" -->
        <member name="M:Gnsser.Correction.OceanTidesCorrector.GetOceanTidesCorrectValue(Geo.Times.Time,Geo.Algorithm.IMatrix)">
            Returns the effect of ocean tides loading (meters) at the given
              station and epoch, in the Up-East-North (UEN) reference frame.
            
             @param name  Station name (case is NOT relevant).
             @param time  Epoch to look up
            
             @return a Triple with the ocean tidas loading effect, in meters
             and in the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for any
             reason, this is thrown. The text may have additional information
             about the reason the request failed.
            <summary>
            海洋负荷改正,采用GPSTK模块
            此处采用NEU表示，其中的各个分量相对应。
            </summary>
            <param name="gpsTime">Epoch to look up</param>
            <param name="position">Position of interest</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Correction.OceanTidesCorrector.GetArg(Geo.Times.Time)" -->
        <member name="M:Gnsser.Correction.OceanTidesCorrector.GetOceanTidesCorrectValue1(Geo.Times.Time,Geo.Algorithm.IMatrix)">
            <summary>
            海潮改正模型，采用RTKLIB的模块
            2015.04.12
            </summary>
            <param name="gpsTime"></param>
            <param name="harmonics"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.PoleTidesCorrector.#ctor(Gnsser.DataSourceContext)">
            This class computes the effect of pole tides, or more properly
              called "rotational deformations due to polar motion", at a given
              position and epoch.
            
              The model used is the one proposed by the "International Earth
              Rotation and Reference Systems Service" (IERS) in its upcomming
              "IERS Conventions" document (Chapter 7), available at:
            
              http://tai.bipm.org/iers/convupdt/convupdt.html
            
              The pole movement parameters x, y for a given epoch may be
              found at:
            
              ftp://hpiers.obspm.fr/iers/eop/eop.others
            
              Maximum displacements because of this effect are:
            
              \ltime Vertical:    2.5 cm
              \ltime Horizontal:  0.7 cm
            
              For additional information you may consult: Wahr, J.M., 1985,
              "Deformation Induced by Polar Motion", Journal of Geophysical
              Research, Vol. 90, No B11, info. 9363-9368.
            
              \warning Please take into account that pole tide equations in
              IERS document use co-latitude instead of latitude.
            <summary>
            极潮改正，单位NEU
            </summary>
        </member>
        <member name="M:Gnsser.Correction.PoleTidesCorrector.GetPoleTidesCorrectValue2(Geo.Coordinates.XYZ,System.Double,System.Double)">
            <summary>
            极潮改正，参考RTKLIB模块
            </summary>
            <param name="reciverPosition"></param>
            <param name="xDisplacement"></param>
            <param name="yDisplacement"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.PoleTidesCorrector.GetPoleTidesCorrectValue(Geo.Times.Time,Geo.Coordinates.XYZ,System.Double,System.Double,Geo.Coordinates.GeoCoord)">
            Returns the effect of pole tides (meters) at the given
              position and epoch, in the Up-East-North (UEN) reference frame.
            
             @param[in]  t Epoch to look up
             @param[in]  info Position of interest
            
             @return a Triple with the pole tide effect, in meters and in
                the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for any
                reason, this is thrown. The text may have additional
                information about the reason the request failed.
            
             @warning In order to use this method, you must have previously
                set the current pole displacement parameters.
            
            <summary>
            极潮改正，需要通过时间读取相应文件，找到极点位置 x和y ，参考GPSTK模块
            </summary>
            <param name="gpsTime">Epoch to look up</param>
            <param name="position">Position of interest</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.RecAntennaArpCorrector">
            <summary>
            接收机天线改正，标石到天线参考点（ARP）的矢量,无载波频率相关
            天线相位中心偏差（PCO，Phase Center Offset）
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaArpCorrector.#ctor">
            <summary>
            接收机天线改正，标石到天线参考点（ARP）的矢量
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaArpCorrector.Correct(Gnsser.Domain.EpochInformation)">
            <summary>
            接收机天线改正
            </summary>
            <param name="epochInformation"></param>
        </member>
        <member name="M:Gnsser.Correction.SolidTidesCorrector.#ctor(Gnsser.DataSourceContext)">
            This class computes the effect of solid Earth tides at a given
             position and epoch.
            
             The model used is the simple quadrupole response model described
             by J.G. Williams (1970).
            
             Given the limitations of the algorithms used to compute the Sun 
             and Moon positions, this class is limited to the period between 
             March 1st, 1900 and February 28th, 2100.
            
            <summary>
            固体潮改正，单位NEU
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SolidTidesCorrector.GetSolidTidesCorrectValue(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            Returns the effect of pole tides (meters) at the given
              position and epoch, in the Up-East-North (UEN) reference frame.
            
             @param[in]  t Epoch to look up
             @param[in]  info Position of interest
            
             @return a Triple with the pole tide effect, in meters and in
                the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for any
                reason, this is thrown. The text may have additional
                information about the reason the request failed.
            
             @warning In order to use this method, you must have previously
                set the current pole displacement parameters.
            
            <summary>
            固体潮改正
            Returns the effect of solid Earth tides (meters) at the given position and epoch, in the Up-East-North (UEN) reference frame.
            此处采用NEU表示，其中的各个分量相对应。
            </summary>
            <param name="gpsTime">Epoch to look up</param>
            <param name="position">Position of interest</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SolidTidesCorrector2.#ctor(Gnsser.DataSourceContext)">
            <summary>
            固体潮改正，单位NEU
            采用IERS2010的规范。需要ERP文件支持。
            存在的问题是太阳、月亮的位置计算，不知道如何检验。
            </summary>
        </member>
        <member name="T:Gnsser.Correction.FreqBasedNeuCorrectionReviser">
            <summary>
            基于频率的测站 NEU 改正。
            卫星改正的责任链,是一组改正对象的组合。一般采用此类将各种改正进行组合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.FreqBasedNeuCorrectionReviser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedNeuCorrectionReviser.CorrectionType">
            <summary>
            改正类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedNeuCorrectionReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedNeuCorrectionReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:Gnsser.Correction.FreqBasedNeuCorrectionReviser.Correct(Gnsser.Domain.EpochInformation)">
            <summary>
            执行改正
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:Gnsser.Correction.IFrequenceBasedNeuCorrector`1">
            <summary>
            依据不同的频率进行距离改正
            </summary>
            <typeparam name="TInputObject">改正时，需要传入的对象类型</typeparam>
        </member>
        <member name="T:Gnsser.Correction.AbstractFreqBasedNeuCorrector">
            <summary>
             依据频率进行卫星距离的改正器基类。
            </summary>
        </member>
        <member name="T:Gnsser.Correction.RecAntennaPcoCorrector">
            <summary>
            接收机天线平均相位中心改正(PCO->ARP)，改正数为 NEU
            平均相位中心到天线几何（测量）参考点ARP。
            平均相位中心认为是不变的，因此此项只需改正到测站HEN即可。
            这个改正适用于所有的同一频率的卫星，因此归类到接收机频率改正,与具体的卫星无关。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaPcoCorrector.#ctor">
            <summary>
            卫星天线对频率观测值的改正误差改正，改正数为 NEU
            antenna excentricity，difference in phase centers
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RecAntennaPcoCorrector.WarnedSites">
            <summary>
            不重复警告
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaPcoCorrector.Correct(Gnsser.Domain.EpochInformation)">
            <summary>
            计算改正数
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Gnsser.Correction.FreqBasedRangeCorrectionReviser">
            <summary>
            按照频率分类的距离改正。
            卫星改正的责任链,是一组改正对象的组合。一般采用此类将各种改正进行组合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.FreqBasedRangeCorrectionReviser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedRangeCorrectionReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedRangeCorrectionReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:Gnsser.Correction.FreqBasedRangeCorrectionReviser.CorrectionType">
            <summary>
            改正类型
            </summary>
        </member>
        <member name="M:Gnsser.Correction.FreqBasedRangeCorrectionReviser.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="TInput"></param>
        </member>
        <member name="M:Gnsser.Correction.FreqBasedRangeCorrectionReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.IFrequenceBasedRangeCorrector`1">
            <summary>
            依据不同的频率进行距离改正
            </summary>
            <typeparam name="TInputObject">改正时，需要传入的对象类型</typeparam>
        </member>
        <member name="T:Gnsser.Correction.AbstractFreqBasedRangeCorrector">
            <summary>
             依据频率进行卫星距离的改正器基类。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.AbstractFreqBasedRangeCorrector.CorrectionType">
            <summary>
            改正类型
            </summary>
        </member>
        <member name="M:Gnsser.Correction.AbstractFreqBasedRangeCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            执行改正
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Gnsser.Correction.RecAntennaPcvCorrector">
            <summary>
            天线相位中心变化改正，接收机天线对具体频率，具体卫星的观测值的改正。
            PCV Phase Center Vari
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaPcvCorrector.#ctor">
            <summary>
            各个频率对接收机天线相位中心的改正 PCV
            antenna excentricity，difference in phase centers
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RecAntennaPcvCorrector.IsUseAzimuthAntenna">
             <summary>
             是否采用方位角的天线
            是否采用方位角，如果没有找到，自动找没有方位角的 
             </summary>
        </member>
        <member name="P:Gnsser.Correction.RecAntennaPcvCorrector.WarnedSites">
            <summary>
            不重复警告
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RecAntennaPcvCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Gnsser.Correction.IRangeCorrector`1">
            <summary>
            数值改正器顶层接口
            </summary>
            <typeparam name="TInputObject">改正时，需要传入的对象类型</typeparam>
        </member>
        <member name="T:Gnsser.Correction.PhaseWindUpCorrector">
             <summary>
            计算相位缠绕改正(phase wind-up)。可以带来厘米级别的差异，不影响基线，影响PPP，一个测站只应初始化一次。
            卫星发射右旋极化(RCP)的电磁波信号, GPS相位观测值的大小同卫星信号发射天线和GPS接收机接收天线间的方位有关。
             </summary>
        </member>
        <member name="M:Gnsser.Correction.PhaseWindUpCorrector.#ctor(Gnsser.Data.SatInfoFile,Gnsser.DataSourceContext)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="F:Gnsser.Correction.PhaseWindUpCorrector.PhaseManager">
            <summary>
            相位管理
            </summary>
        </member>
        <member name="F:Gnsser.Correction.PhaseWindUpCorrector.SatInfoService">
            <summary>
            卫星状态集合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.PhaseWindUpCorrector.GetSatPhaseWindUpCorectValue(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.Domain.EpochSatellite,Geo.Coordinates.XYZ)">
            <summary>
            天线缠绕改正 方法2 参考RTKLIB
            李林阳添加 2015.01.01
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="satPos"></param>
            <param name="receiverPos"></param>
            <param name="epochSatellite"></param>
            <param name="sunPos"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.PhaseWindUpCorrector.GetSatPhaseWindUpCorectValue(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.String)">
            <summary>
            计算天线缠绕改正，单位：弧度。
            </summary> 
            <param name="prn">卫星编号</param>
            <param name="time">时间</param>
            <param name="satPos">卫星位置</param>
            <param name="receiverPos">接收机位置</param>
            <param name="sunPos">太阳位置</param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.IPhaseCorrector">
            <summary>
            相位改正
            </summary>
        </member>
        <member name="T:Gnsser.Correction.AbstractPhaseCorrector">
            <summary>
             卫星距离改正器基类。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.AbstractPhaseCorrector.CorrectionType">
            <summary>
            改正数类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.AbstractPhaseCorrector.CorrectChianType">
            <summary>
            改正器类型
            </summary>
        </member>
        <member name="M:Gnsser.Correction.AbstractPhaseCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Gnsser.Correction.PhaseCorrectionReviser">
            <summary>
            相位距离改正。
            卫星改正的责任链,是一组改正对象的组合。一般采用此类将各种改正进行组合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.PhaseCorrectionReviser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseCorrectionReviser.CorrectChianType">
            <summary>
            改正器类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseCorrectionReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:Gnsser.Correction.PhaseCorrectionReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="T:Gnsser.Correction.CorrectionNames">
            <summary>
            改正数的名称
            </summary>
        </member>
        <member name="T:Gnsser.Correction.AbstractSelfRangeCorrector">
            <summary>
            卫星距离改正器基类,改正观测值本身。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.AbstractSelfRangeCorrector.#ctor">
            <summary>
            卫星距离改正器基类,改正观测值本身。
            </summary>
        </member>
        <member name="T:Gnsser.Correction.AbstractRangeCorrector">
            <summary>
             卫星距离改正器基类。
            </summary>
        </member>
        <member name="F:Gnsser.Correction.AbstractRangeCorrector.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Gnsser.Correction.AbstractRangeCorrector.CorrectChianType">
            <summary>
            改正器类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.AbstractRangeCorrector.CorrectionType">
            <summary>
            改正类型
            </summary>
        </member>
        <member name="M:Gnsser.Correction.AbstractRangeCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Gnsser.Correction.SatClockBiasCorrector">
            <summary>
            卫星钟改正， 伪距改正数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SatClockBiasCorrector.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.SatClockBiasCorrector.GetClockBiasCorectValue(System.Double)">
             <summary>
             钟差距离改正。 LIGHT_SPEED * svClock_sec。
             改正后的伪距 = 伪距测量值 + 伪距改正值
            钟差是指同一时刻两台钟的钟面时之差。
            系统时间 = 钟面时 + 卫星钟差
            定义：dT(r) = Time(r) - Time (sys)
            
             </summary>
             <param name="svClock_sec"></param>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.DcbRangeCorrector">
            <summary>
            DCB， 伪距改正数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.DcbRangeCorrector.#ctor(Gnsser.Data.DcbDataService,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="DcbDataService"></param>
            <param name="IsDcbOfP1P2Enabled">是否改正P1P2，单频适用，IonoFreePPP不适用</param>
        </member>
        <member name="P:Gnsser.Correction.DcbRangeCorrector.DcbDataService">
            <summary>
            DCB 服务
            </summary>
        </member>
        <member name="P:Gnsser.Correction.DcbRangeCorrector.IsP1P2Enabled">
            <summary>
            是否启用P1P2改正,单频需要，若是无电离层组合，则不需要。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.DcbRangeCorrector.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            改正
            </summary>
            <param name="sat"></param>
        </member>
        <member name="T:Gnsser.Correction.GravitationalDelayCorrector">
            <summary>
            引力延迟效应改正
            Default computes the delay in the signal due to changes in the gravity field
            </summary>
        </member>
        <member name="M:Gnsser.Correction.GravitationalDelayCorrector.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.GravitationalDelayCorrector.GetSatGravDelayCorrection(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            引力延迟效应改正
            </summary>
            <param name="svPos"></param>
            <param name="staPos"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.IonoParamModelCorrector">
            <summary>
            电离层参数改正 克罗布歇Klobuchar模型,GPS导航电文改正模型，返回的是以米为单位的距离改正。
            见 IS-GPS-200H.pdf
            </summary>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.#ctor(Gnsser.Data.IonoParamService,System.Boolean)">
            <summary>
            电离层参数模型改正，构造函数。
            </summary>
            <param name="IonoParamService"></param>
            <param name="IsCorrectionOnPhase"></param>
        </member>
        <member name="P:Gnsser.Correction.IonoParamModelCorrector.IsCorrectionOnPhase">
            <summary>
            是否改正到相位上。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.IonoParamModelCorrector.SatelliteType">
            <summary>
            特定的类型不同的改正，目前只支持GPS
            </summary>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetCorrectorInDistance(Gnsser.Domain.EpochSatellite,Gnsser.IIonoParam)">
            <summary>
            电离层模型改正。返回改正距离。 单位：米
            </summary>
            <param name="epochSatellite">卫星观测信息</param>
            <param name="ionParam">电离层参数</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetCorrectorInDistance(System.Double,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.IIonoParam)">
            <summary>
            电离层模型改正。返回改正距离。 单位：米
            Tiono is referred to the L1 frequency; if the user is operating on the L2 frequency, 
            the correction term must be multiplied by γ (reference paragraph 20.3.3.3.3.2),
            </summary>
            <param name="weekSecond">周秒</param>
            <param name="satXyz">卫星位置</param>
            <param name="receiverXyz">接收机位置</param>
            <param name="ionParam">电离层参数</param>
            <returns> </returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.IonoCorrection(System.Double,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.IIonoParam)">
            <summary>
            电离层模型改正。返回时间延迟，单位：秒。
            broadcast iono (coeff.v. icd-200)
            input time:    fraction of ut (or gps time of secondOfWeek)      (machts nicht)
            </summary>
            <param name="weekSecond">周秒</param>
            <param name="satXyz">卫星位置</param>
            <param name="rcvXyz">接收机位置</param>
            <returns>time delay in fraction</returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetTimeDelay(System.Double,System.Double,System.Double)">
            <summary>
            计算电离层时间延迟
            </summary>
            <param name="f"></param>
            <param name="amp"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetX(Gnsser.IIonoParam,System.Double,System.Double)">
            <summary>
            计算X，模型参数之一。phase (radians)
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <param name="tlocal"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetAMP(Gnsser.IIonoParam,System.Double)">
            <summary>
            计算AMP，模型参数之一。amplitude
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetF(System.Double)">
            <summary>
            计算F，模型参数之一。
            obliquity factor (dimensionless)
            </summary>
            <param name="E">elevation angle between the user and satellite (semi-circles)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetMeanIonLat(System.Double,System.Double)">
            <summary>
            geomagnetic latitude of the earth projection of the ionospheric intersection point (mean ionospheric height assumed 350 km) (semi-circles)
            </summary>
            <param name="inoLat"></param>
            <param name="inoLon"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetEarthsCentralAngle(System.Double)">
            <summary>
            earth's central angle between the user position and the earth projection of ionospheric intersection point (semi-circles)
            </summary>
            <param name="E">卫星高度角，单位半周elevation angle between the user and satellite (semi-circles)</param>
            <returns>单位半周</returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetIonLon(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            获取电离层穿刺点经度，单位：半周
            </summary>
            <param name="A">此处应该为弧度才能计算。azimuth angle between the user and satellite, measured clockwise positive from the true North (semi-circles)</param>
            <param name="rcvLon"></param>
            <param name="psi"></param>
            <param name="inoLat">单位：半周</param>
            <returns>单位：半周</returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetIonLat(System.Double,System.Double,System.Double)">
            <summary>
            获取电离层穿刺点纬度,单位：半周
            </summary>
            <param name="A">只参与三角计算，故单位为弧度</param>
            <param name="rcvLat"></param>
            <param name="psi"></param>
            <returns>单位：半周</returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetLocalTime(System.Double,System.Double)">
            <summary>
            local time (sec)
            </summary>
            <param name="weekSecond">GPS time</param>
            <param name="inoLon">geodetic longitude of the earth projection of the ionospheric intersection point (semi-circles)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.IonoParamModelCorrector.GetPER(Gnsser.IIonoParam,System.Double)">
            <summary>
            计算PER，模型参数之一。period
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.RangeDifferCorrector">
            <summary>
            伪距差分改正 EΔ = R - pho + dtc
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RangeDifferCorrector.#ctor(Gnsser.Domain.EpochInformation,System.Double,Gnsser.SatObsDataType)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.Correction.RangeDifferCorrector.RefEpochInfo">
            <summary>
            参考历元信息
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RangeDifferCorrector.RefClkError">
            <summary>
            参考接收机的钟差
            </summary>
        </member>
        <member name="T:Gnsser.Correction.RangeTropoCorrector">
            <summary>
            对流程改正， 伪距改正数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RangeTropoCorrector.#ctor">
            <summary>
            伪距改正。对流程。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RangeTropoCorrector.GetTropoCorrectValue(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
             对流程改正。 对流程的改正符号为负数。
            </summary>
            <param name="gpsTime"></param>
            <param name="satPos"></param>
            <param name="receiverXyz"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.RelativeCorrector">
            <summary>
            钟差的相对论改正，与光速相差转换为伪距改正。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RelativeCorrector.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RelativeCorrector.GetRelativeCorrection(Gnsser.IEphemeris)">
            <summary>
            相对论效应改正。
            由于卫星速度快，产生相对论效应，使卫星钟变慢。
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.SagnacEffectCorrector">
            <summary>
            地球自转效应改正
            sagnac effect correction
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SagnacEffectCorrector.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.SagnacEffectCorrector.GetRelativeCorrection(Gnsser.IEphemeris,Geo.Coordinates.XYZ)">
            <summary>
            地球自转效应改正。
            
            </summary>
            <param name="sat"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.SatAntennaPhaseCenterCorrector">
             <summary>
            计算卫星天线相位中心改正数。
            需要提供天线文件和卫星信息文件。
            算法同时内置了GPS卫星的默认配置。
             </summary>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPhaseCenterCorrector.#ctor(Gnsser.Data.AntennaFileService,Gnsser.Data.IErpFileService,Gnsser.Data.SatInfoService,Gnsser.Data.UniverseObjectProvider)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPhaseCenterCorrector.GetSatPhaseCenterCorectValue(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.Data.SatInfoFile,Gnsser.Data.IAntenna)">
            <summary>
            计算卫星相位中心改正值。
            </summary>
            <param name="satelliteType">卫星编号</param>
            <param name="time">历元</param>
            <param name="satPos">卫星位置</param>
            <param name="sunPosition">太阳位置</param>
            <param name="satData">Name of "PRN_GPS"-like file containing satellite satData.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPhaseCenterCorrector.GetPhaseCorrection(Gnsser.SatelliteNumber,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double,Gnsser.Data.IAntenna)">
            <summary>
            卫星天线相位中心改正，参照GPSTK模块
            </summary>
            <param name="satelliteType"></param>
            <param name="satPos"></param>
            <param name="ReceiverPosition"></param>
            <param name="sunPosition"></param>
            <param name="svPCcorr"></param>
            <param name="antenna"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPhaseCenterCorrector.GetPhaseCorrection1(Gnsser.SatelliteNumber,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double,Gnsser.Data.IAntenna)">
            <summary>
            卫星天线相位中心改正，参照RTKLIB
            </summary>
            <param name="satelliteType"></param>
            <param name="satPos"></param>
            <param name="ReceiverPosition"></param>
            <param name="sunPosition"></param>
            <param name="svPCcorr"></param>
            <param name="antenna"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.SatAntennaPhaseCenterCorrector.DefautSatPhaseCorrector(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.Data.SatInfoFile)">
            <summary>
            默认的卫星天线相位改正。
            </summary>
            <param name="satelliteType"></param>
            <param name="time"></param>
            <param name="satPos"></param>
            <param name="sunPosition"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.AmbiguityFixedCorrector">
             <summary>
            固定模糊度的改正。假定给定的测站坐标非常精确，采用此坐标作为真值来固定模糊度。
             </summary>
        </member>
        <member name="M:Gnsser.Correction.AmbiguityFixedCorrector.#ctor">
            <summary>
            构造函数.固定模糊度的改正
            </summary> 
        </member>
        <member name="T:Gnsser.Correction.TroposphericModelCorrector">
             <summary>
            对流程改正。
            如果测站坐标为 0 或无效 则改正数为 0。
             默认采用Neill模型。这里只是干分量slant改正????是计算的整个干湿分量耶，湿延迟作为未知参数估计。
             To compute the main values related to a given GNSS tropospheric model
             
             This object will visit every satellite in the GNSS satData structure and will try to compute
             the main values of the corresponding tropospheric model: Total tropospheric slant correction, 
             dry vertical delay, wet vertical delay, dry mappint function value and wet mapping function value.
             
             Be warned that if a given satellite does not have the information needed (main elevation), it will be summarily deleted from the satData structure. 
             This also implies that if you try to use a ComputeTroModel objet without prevObj defining the tropospheric model, then ALL satellites will be deleted.
             </summary>
        </member>
        <member name="M:Gnsser.Correction.TroposphericModelCorrector.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.TroposphericModelCorrector.#ctor(Gnsser.GnssProcessOption,Gnsser.DataSourceContext)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="F:Gnsser.Correction.TroposphericModelCorrector.pTroModel">
            <summary>
             Pointer to default TropModel object when working with GNSS satData structures.
            </summary>
        </member>
        <member name="F:Gnsser.Correction.TroposphericModelCorrector.gTroModel">
            <summary>
            GMF对流层改正模型
            崔阳，2015.03
            </summary>
        </member>
        <member name="F:Gnsser.Correction.TroposphericModelCorrector.gpt2Model">
            <summary>
            GT2 模型 ，2017.05.10, lly, add in zz
            </summary>
        </member>
        <member name="F:Gnsser.Correction.TroposphericModelCorrector.VMF1TroModel">
            <summary>
            VMF1对流层改正模型
            李林阳，2015.01
            </summary>
        </member>
        <member name="M:Gnsser.Correction.TroposphericModelCorrector.GetTroposphericCorectValueWithNillModel(System.Double,Geo.Coordinates.GeoCoord,Gnsser.NeillTropModel)">
            <summary>
            对流层延迟改正
            </summary>
            <param name="elevation"></param>
            <param name="geoCoord"></param>
            <param name="pTroModel"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Correction.RangeCorrectionReviser">
            <summary>
            通用伪距组合，对所有的伪距都起作用。
            卫星改正的责任链,是一组改正对象的组合。一般采用此类将各种改正进行组合。
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RangeCorrectionReviser.#ctor(Gnsser.Correction.CorrectChianType)">
            <summary>
            构造函数
            </summary>
            <param name="CorrectorType">改正器类型</param>
        </member>
        <member name="P:Gnsser.Correction.RangeCorrectionReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RangeCorrectionReviser.CorrectionType">
            <summary>
            改正类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RangeCorrectionReviser.CorrectChianType">
            <summary>
            改正器类型
            </summary>
        </member>
        <member name="P:Gnsser.Correction.RangeCorrectionReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:Gnsser.Correction.RangeCorrectionReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            历元信息矫正
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Correction.RangeCorrectionReviser.Correct(Gnsser.Domain.EpochSatellite)">
            <summary>
            遍历计算改正数
            </summary>
            <param name="sat"></param>
        </member>
        <member name="T:Gnsser.Correction.CorrectableNEU">
            <summary>
            具有改正数的坐标
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.CorrectableNEU.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Correction.CorrectableNEU.#ctor(Geo.Coordinates.NEU)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param> 
        </member>
        <member name="P:Gnsser.Correction.CorrectableNEU.TotalCorrection">
            <summary>
            所有改正的集合
            </summary>
        </member>
        <member name="P:Gnsser.Correction.CorrectableNEU.Correction">
            <summary>
            改正数
            </summary>
        </member>
        <member name="P:Gnsser.Correction.CorrectableNEU.CorrectedValue">
            <summary>
            改正后的值。
            </summary>
        </member>
        <member name="T:Gnsser.Correction.CorrectableTime">
            <summary>
            具有改正数的时间。
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.CorrectableTime.#ctor(Geo.Times.Time)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param> 
        </member>
        <member name="P:Gnsser.Correction.CorrectableTime.Correction">
            <summary>
            卫星钟的改正数。单位：秒。改正数的总和。需要由Corrector来赋值。后继赋值。
            </summary>
        </member>
        <member name="P:Gnsser.Correction.CorrectableTime.CorrectedValue">
            <summary>
            改正后的值，方便访问
            </summary>
        </member>
        <member name="T:Gnsser.Correction.CorrectableXYZ">
            <summary>
            具有改正数的坐标。
            </summary> 
        </member>
        <member name="M:Gnsser.Correction.CorrectableXYZ.#ctor(Geo.Coordinates.XYZ)">
            <summary>
            观测量构造函数。
            </summary>
            <param name="val">改正值</param> 
        </member>
        <member name="T:Gnsser.ClockJumpDetector">
            <summary>
            钟跳探测器
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.IsRepaire">
            <summary>
            是否修复
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.Ratio">
            <summary>
            同时出现钟跳的比列，大于此则认为钟跳。
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.MaxThresholdSeconds">
            <summary>
            最大阈值,单位：秒
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.CorrectionOfTotalJumpedSeconds">
            <summary>
            总共跳了多少
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.CorrectionOfCurrrentJumpedSeconds">
            <summary>
            当前跳跃
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.Prev">
            <summary>
            存储上一个
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.Prev2">
            <summary>
            上二个
            </summary>
        </member>
        <member name="P:Gnsser.ClockJumpDetector.TotalClockJumpState">
            <summary>
            全局周跳状态
            </summary>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.SetPrev(Gnsser.Domain.EpochInformation)">
            <summary>
            添加前一个
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            探测
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.GetJumpSecondCorrection(Gnsser.Domain.EpochInformation)">
            <summary>
            计算跳秒改正数。初步修复。
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.Detect(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,System.Double,System.Double)">
            <summary>
            探测是否钟跳，返回结果
            </summary>
            <param name="prev"></param>
            <param name="current"></param>
            <param name="MaxThresholdSeconds"></param>
            <param name="Ratio"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.GetClockJumpSeconds(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Gnsser.FrequenceType)">
            <summary>
            最简单的4历元钟跳修复法，返回改正数。
            </summary>
            <param name="prev2"></param>
            <param name="prev1"></param>
            <param name="current"></param>
            <param name="next"></param>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.GetPredictedDiffer(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.FrequenceType)">
            <summary>
            通过前两个历元，预报当前历元，并与当前历元实际数值作差。返回预报差值。
            </summary>
            <param name="prev2"></param>
            <param name="prev1"></param>
            <param name="current"></param>
            <param name="commonPrns"></param>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.GetPredicted(Gnsser.Domain.EpochInformation,Gnsser.Domain.EpochInformation,System.Collections.Generic.List{Gnsser.SatelliteNumber},Gnsser.FrequenceType)">
            <summary>
            通过前两个预报当前值。预报值采用上一段差值。
            </summary>
            <param name="prev1"></param>
            <param name="prev2"></param>
            <param name="commonPrns"></param>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockJumpDetector.Repair(Gnsser.Domain.EpochInformation@,System.Double,Gnsser.Domain.ClockJumpState)">
            <summary>
            直接修复,按照指定的修复。
            </summary>
            <param name="obj"></param>
            <param name="seonds"></param>
            <param name="clockJumpState"></param>
        </member>
        <member name="T:Gnsser.SatelliteRemover">
            <summary>
            移除指定的卫星
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteRemover.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.SatelliteRemover.#ctor(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            构造函数
            </summary>
            <param name="prns"></param>
        </member>
        <member name="P:Gnsser.SatelliteRemover.SatPrns">
            <summary>
            移除卫星编号
            </summary> 
        </member>
        <member name="M:Gnsser.SatelliteRemover.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            修正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.RawHatchPhaseSmoothedRangeBuilder">
            <summary>
            原始 Hatch 递推滤波模型，不考虑窗口大小，载波相位平滑伪距。
            </summary>
        </member>
        <member name="M:Gnsser.RawHatchPhaseSmoothedRangeBuilder.#ctor(System.Int32,System.Boolean,System.String,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Hatch 递推滤波模型，载波相位平滑伪距。
            </summary>
            <param name="maxEpochCount"></param>
            <param name="IsWeighted"></param>
            <param name="name"></param>
            <param name="IsDeltaIonoCorrect"></param>
            <param name="IonoFitOrder"></param>
            <param name="bufferSize"></param>
        </member>
        <member name="P:Gnsser.RawHatchPhaseSmoothedRangeBuilder.IndicatedIonoDeltaFilePath">
            <summary>
            指定的电离层变化率文件路径
            </summary>
        </member>
        <member name="P:Gnsser.RawHatchPhaseSmoothedRangeBuilder.EpochCount">
            <summary>
            当前历元数量
            </summary>
        </member>
        <member name="P:Gnsser.RawHatchPhaseSmoothedRangeBuilder.MaxCount">
            <summary>
            平滑常数
            </summary>
        </member>
        <member name="M:Gnsser.RawHatchPhaseSmoothedRangeBuilder.SetReset(System.Boolean)">
            <summary>
            是否重置，如果发生周跳。
            </summary>
            <param name="IsReset"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RawHatchPhaseSmoothedRangeBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RawHatchPhaseSmoothedRangeBuilder.GetWeight">
            <summary>
            获取原始伪距的权值，如果数据少于制定大小，则采用本身，否则采用指定的权值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RawHatchPhaseSmoothedRangeBuilder.Reset">
            <summary>
            重设。
            </summary>
        </member>
        <member name="T:Gnsser.RangePhasePair">
            <summary>
            平滑伪距历元数据
            </summary>
        </member>
        <member name="M:Gnsser.RangePhasePair.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="range">伪距</param>
            <param name="phaseRange">相位距离</param>
            <param name="ionoDiffer">电离层变化</param>
        </member>
        <member name="P:Gnsser.RangePhasePair.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.PseudoRange">
            <summary>
            当前伪距
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.PhaseRange">
            <summary>
            当前的相位的距离。
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.IonoFittedPhaseRange">
            <summary>
            加上了2倍电离层和模糊度距离的
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.FittedIonoAndAmbiValue">
            <summary>
            拟合的电离层和模糊度数值
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.RangeMinusPhase">
            <summary>
            伪距减去载波
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.RangeMinusIonoFittedPhase">
            <summary>
            伪距减去带电离层和模糊度改正的的载波
            </summary>
        </member>
        <member name="M:Gnsser.RangePhasePair.GetRawIonoAndHalfAmbiValue">
            <summary>
            获取原始的电离层加一半模糊度数值。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.RangePhasePair.InputtedIonoDiffer">
            <summary>
            电离层延迟，基于某一历元的变化
            </summary>
        </member>
        <member name="P:Gnsser.RangePhasePair.IsZero">
            <summary>
            默认构造函数的初值通常为 0.
            </summary>
        </member>
        <member name="T:Gnsser.SmoothRangeWindowOld">
            <summary>
            平滑伪距
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.#ctor(System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType)">
            <summary>
            构造函数
            </summary>
            <param name="windowSize"></param>
            <param name="IsWeighted"></param>
            <param name="IsDeltaIonoCorrect"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="SmoothRangeType"></param>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.IonoWindow">
            <summary>
            电离层拟合窗口
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.OrderOfDeltaIonoPolyFit">
            <summary>
            电离层变化拟合阶数。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.IonoFitDataCount">
            <summary>
            拟合数据量
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.IsDeltaIonoCorrect">
            <summary>
            是否电离层改正
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.CurrentIonoAndHalfLambdaLen">
            <summary>
            当前电离层和0.5倍模糊度的等效距离。 y = I0 + bt + λN /2
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.SmoothRangeType">
            <summary>
            算法类型
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.CurrentData">
            <summary>
            当前的原始数据
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.PrevData">
            <summary>
            上一个原始数据
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.LastRemovedPair">
            <summary>
            上一窗口的第一个数据，即为刚刚被踢出的数据。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.LastSmoothedRange">
            <summary>
            上一次的平滑伪距。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.LastPhaseRange">
            <summary>
            上一次的载波距离
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.RawRangeStdDev">
            <summary>
            伪距观测噪声，默认为2.
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.IsWeighted">
            <summary>
            是否加权
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.Add(Geo.Times.Time,System.Double,System.Double,System.Double)">
            <summary>
            增加一个
            </summary>
            <param name="time"></param>
            <param name="rawRange"></param>
            <param name="rawPhaseRange"></param>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.BufferAdd(Geo.Times.Time,System.Double,System.Double)">
            <summary>
            缓存提前增加
            </summary>
            <param name="time"></param>
            <param name="rawRange"></param>
            <param name="rawPhaseRange"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetSmoothValue">
            <summary>
            计算平滑的伪距。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetSmoothValueByFastUpdate">
            <summary>
            计算平滑的伪距，最快的迭代，带电离层的递推平滑算法，可以大大加快速度。
            算法已验证，和窗口单独迭代相同，需要注意的式如果正式平滑时，则不需要加权了。
            2018.06.20, czs， 这是推导了好几天才出的结果，并得到了验证，具体公式请参看本人发表的文章：**平滑伪距***。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetSmoothValueByWholeWindowRecursionAk">
            <summary>
            计算平滑的伪距，整个窗口迭代计算Ak
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetSmoothValueByWholeWindowRecursionRaw">
            <summary>
            计算平滑的伪距，整个窗口迭代,公式与上两个应该等价，用于验证，计算原始观测数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SmoothRangeWindowOld.PrevAk">
            <summary>
            上一次计算的AK。
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetAk">
            <summary>
            原始AK计算方法，用于迭代计算结果的验证。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetWeight(Geo.Times.Time,System.Int32)">
            <summary>
            获取权值. 指的是原始P码所占权比例，0 表示不占比例。
            </summary>
            <param name="Time"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetDeltaIonoPolyFit">
            <summary>
            电离层拟合器,第一个历元为0开始
            y = I0 + bt + λN /2。 Y 包含了当前历元的电离层和一半的模糊度距离
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindowOld.GetDeltaIonoPolyFitValue(System.Boolean,System.Int32)">
            <summary>
            电离层拟合器返回最后或第一相邻历元的电离层偏差
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SmallObsPeriodRemover`1">
            <summary>
            小观测段数据移除器
            </summary>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.#ctor(Geo.BufferedStreamService{`0},System.Int32,System.Int32,Geo.Times.Time,System.Double)">
            <summary>
            小观测段数据移除器
            </summary>
            <param name="BufferedStream"></param>
            <param name="MinEpochCount"></param>
            <param name="MaxBreakCount"></param> 
            <param name="LastEpoch">如果不正确提供，请设置为最大</param>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.#ctor(System.Int32,System.Int32,Geo.Times.Time,System.Double)">
            <summary>
            小观测段数据移除器
            </summary> 
            <param name="MinEpochCount"></param>
            <param name="MaxBreakCount"></param> 
            <param name="LastEpoch">如果不正确提供，请设置为最大</param>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.BufferedStream">
            <summary>
            数据流
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.WindowDataManager">
            <summary>
            管理窗口数据，判断是否连续
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.LastEpoch">
            <summary>
            最后一个历元
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.Inverval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.MaxBreakCount">
            <summary>
            历元最大断裂数量
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.MinEpochCount">
            <summary>
            最小历元数量
            </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.MinBreakTimeSpan">
             <summary>
            最小断裂间隔时间，单位：秒
             </summary>
        </member>
        <member name="P:Gnsser.SmallObsPeriodRemover`1.Current">
            <summary>
            当前
            </summary>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.CheckAndFiltSmallSpan(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            过滤掉小历元时段，在缓存中操作，确保缓存大于断裂数量
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.CheckAndFiltSmallSpan(Gnsser.Domain.EpochInformation)">
            <summary>
            过滤掉小历元时段，在缓存中操作，确保缓存大于断裂数量
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.JudgeAndFiltSmallSpanInBuffer(Geo.Times.Time,System.Boolean)">
            <summary>
            判断过滤
            </summary>
            <param name="currentTime"></param>
            <param name="isLastEpoch"></param>
        </member>
        <member name="M:Gnsser.SmallObsPeriodRemover`1.GetInteval(Geo.IWindowData{`0})">
            <summary>
            计算采用间隔。单位：秒。
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteSatParamDataServiceRegister">
            <summary>
            测站卫星注册时段服务
            </summary>
        </member>
        <member name="M:Gnsser.SiteSatParamDataServiceRegister.#ctor(Gnsser.Service.SiteSatPeriodDataService,System.Double,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.SiteSatParamDataServiceRegister.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.SiteSatParamDataServiceRegister.IsOutputPeriodData">
            <summary>
            是否输出周期数据
            </summary>
        </member>
        <member name="M:Gnsser.SiteSatParamDataServiceRegister.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            修正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteSatAppearenceServiceRegister">
            <summary>
            测站卫星注册时段服务
            </summary>
        </member>
        <member name="M:Gnsser.SiteSatAppearenceServiceRegister.#ctor(Gnsser.Service.SiteSatAppearenceService,System.Double)">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.SiteSatAppearenceServiceRegister.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            修正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Filter.SatSpanFilterOld">
            <summary>
            卫星时段检查过滤
            </summary>
        </member>
        <member name="M:Gnsser.Filter.SatSpanFilterOld.#ctor(Gnsser.SatTimeInfoManager,System.Int32)">
            <summary>
            卫星时段检查过滤。
            </summary> 
        </member>
        <member name="P:Gnsser.Filter.SatSpanFilterOld.CurrentEpcohInfo">
            <summary>
            当前信息，不包含在缓存中。
            </summary>
        </member>
        <member name="T:Gnsser.Filter.EclipsedSatFilter">
            This class filters out satellites that are eclipsed by Earth shadow.
                  *
                  * This class is meant to be used with the GNSS satData structures objects
                  * found in "DataStructures" class.
                 *   * The "EclipsedSatFilter" object will visit every satellite in the GNSS
                  * satData structure that is "gRin" and will determine if such satellite is
                  * in eclipse, or whether it recently was.
                  *
                  * This effect may be important when using precise positioning, because
                  * satellite orbits tend to degrade when satellites are in eclipse, or
                  * when they have been in eclipse recently.
                  *
                  * There are dayServices adjustable parameters in this class: Shadow cone angle
                  * (30 degrees by default), and the period after eclipse that the
                  * satellite will still be deemed unreliable (1800 fraction by default).
                  *
            <summary>
            删除太阳阴影影响的卫星。
            </summary>
        </member>
        <member name="M:Gnsser.Filter.EclipsedSatFilter.#ctor">
            <summary>
            太阳阴影影响，删除卫星。Default constructor.
            </summary>
        </member>
        <member name="M:Gnsser.Filter.EclipsedSatFilter.#ctor(System.Double,System.Double)">
            Common constructor
            
             @param angle      Aperture angle of shadow cone, in degrees.
             @param pShTime    Time after exiting shadow that satellite will
                               still be filtered out, in fraction.
        </member>
        <member name="P:Gnsser.Filter.EclipsedSatFilter.ConeAngle">
            <summary>
            Aperture angle of shadow cone, in degree
            </summary>
        </member>
        <member name="P:Gnsser.Filter.EclipsedSatFilter.PostShadowPeriod">
            <summary>
            Time after exiting shadow that satelltie will still be filtered out, in fraction
            </summary>
        </member>
        <member name="F:Gnsser.Filter.EclipsedSatFilter.ShadowEpoch">
            <summary>
            Dictionary holding the time information about every satellite in eclipse
            </summary>
        </member>
        <member name="M:Gnsser.Filter.EclipsedSatFilter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            EclipsedSatFilter核心
            </summary>
            <param name="gData"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Filter.EphemerisFilter">
            <summary>
            星历过滤器，采用面向对象模型。
            </summary>
        </member>
        <member name="M:Gnsser.Filter.EphemerisFilter.#ctor(Gnsser.Service.IEphemerisService,System.Double)">
            <summary>
            卫星检查过滤。
            </summary>
            <param name="EphemerisService">星历</param>
            <param name="VertAngleCut">高度截止角</param>
        </member>
        <member name="M:Gnsser.Filter.EphemerisFilter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Filter.SatArcMarkerFilter">
            <summary>
            keep track of satellite arcs caused by cycle slips
            </summary>
        </member>
        <member name="P:Gnsser.Filter.SatArcMarkerFilter.WatchCsFlag">
            <summary>
            Cycle slip flag to be watched. 查找某频率是否发生周跳的标识
            </summary>
        </member>
        <member name="P:Gnsser.Filter.SatArcMarkerFilter.DeleteUnstableSat">
             <summary>
            flag indicating if unstable satellites will be deleted.
             </summary>
        </member>
        <member name="P:Gnsser.Filter.SatArcMarkerFilter.UnstablePeriod">
            <summary>
            number of fraction since arc change that a satellite will be considered as unstable.
            </summary>
        </member>
        <member name="F:Gnsser.Filter.SatArcMarkerFilter.SatArcDic">
            <summary>
            Dictionary holding information regarding every satellite
            </summary>
        </member>
        <member name="F:Gnsser.Filter.SatArcMarkerFilter.SatArcChangeDic">
            <summary>
            Dictionary holding information about epoch of last arc change
            </summary>
        </member>
        <member name="F:Gnsser.Filter.SatArcMarkerFilter.SatIsNewDic">
            <summary>
            Dictionary keeping track if this satellite is new or not
            </summary>
        </member>
        <member name="M:Gnsser.Filter.SatArcMarkerFilter.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Gnsser.Filter.SatArcMarkerFilter.#ctor(Gnsser.FrequenceType,System.Boolean,System.Double)">
            <summary>
            Common constructor
            </summary>
            <param name="watchFlag">cycle slip flag to be watched，默认的是L1频率的周跳标识</param>
            <param name="delUnstableSats">whether unstable satellites will be deleted.</param>
            <param name="unstableTime">unmber of fraction since last arc change that a satellite will be considered as unstable</param>
        </member>
        <member name="M:Gnsser.Filter.SatArcMarkerFilter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            SatArcMarkerFilter核心
            </summary>
            <param name="gData"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Filter.EpochInfoSynchronous">
            <summary>
            差分历元信息同步器.
            两个不同测站的相同历元的观测数据同步：卫星的顺序和数量都保持已知。
            </summary>
        </member>
        <member name="M:Gnsser.Filter.EpochInfoSynchronous.#ctor(Gnsser.Domain.EpochInformation)">
            <summary>
            差分历元信息同步器
            </summary> 
        </member>
        <member name="T:Gnsser.Filter.ObsSatExcludeFilter">
            <summary>
            观测值检查过滤。将具有故障卫星PRN的观测值删除。
            </summary>
        </member>
        <member name="M:Gnsser.Filter.ObsSatExcludeFilter.#ctor(Gnsser.Data.SatExcludeFileService)">
            <summary>
            观测值检查过滤。将具有故障卫星PRN的观测值删除。
            </summary>  
        </member>
        <member name="P:Gnsser.Filter.ObsSatExcludeFilter.NoticedPrns">
            <summary>
            是否通知过了，为了整洁界面，只通知一次。
            </summary> 
        </member>
        <member name="M:Gnsser.Filter.ObsSatExcludeFilter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正方法。
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Filter.SatSpanFilter">
            <summary>
            卫星时段检查过滤
            </summary>
        </member>
        <member name="M:Gnsser.Filter.SatSpanFilter.#ctor(System.Int32,System.Int32,Geo.Times.Time)">
            <summary>
            卫星时段检查过滤。
            </summary> 
        </member>
        <member name="M:Gnsser.Filter.SatSpanFilter.#ctor(Geo.BufferedStreamService{Gnsser.Domain.EpochInformation},System.Int32,System.Int32,Geo.Times.Time)">
            <summary>
            卫星时段检查过滤。
            </summary> 
        </member>
        <member name="T:Gnsser.EpochSatSiteValueList">
            <summary>
            历元卫星测站数据列表，所有的测站数据集合到卫星这里
            </summary>
        </member>
        <member name="M:Gnsser.EpochSatSiteValueList.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Gnsser.EpochSatSiteValueList.GetAverage(System.Int32,System.Double)">
            <summary>
            周期内加权平均
            </summary>
            <param name="minDataCount">小于此，则忽略</param>
            <param name="maxRmsTimes">最大运行的RMS倍数</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochSatSiteValueList.GetTable(System.String,Gnsser.SatelliteNumber)">
            <summary>
            获取表格
            </summary>
            <param name="outDirectory"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiSatEpochRmsNumeralStorage">
            <summary>
            多颗卫星，站星历元数值存储器。
            键为卫星编号 PRN，分组为历元，数据为 RmsedNumeral。
            假定：历元数据容易变化！
            </summary>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.GetValue(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            直接获取数据，如果没有，返回 null
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns>如果没有，返回 null</returns>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.GetRawDiffer(Gnsser.SatelliteNumber)">
            <summary>
            原始数据差分，返回新对象。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.GetNarrowLaneFcbs(Gnsser.MultiSatPeriodRmsNumeralStorage,System.Func{Geo.RmsedNumeral,Geo.RmsedNumeral,Geo.RmsedNumeral})">
            <summary>
            计算窄巷模糊度浮点解
            </summary>
            <param name="wideIntVals"></param>
            <param name="funcToSolve"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.GetFcbProduct(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            获取产品
            </summary>
            <param name="basePrn">基准卫星，并不做计算，只是赋值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSatEpochRmsNumeralStorage.GetRoundFraction">
            <summary>
            返回四舍五入小数部分
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiSatPeriodRmsNumeralStorage">
            <summary>
            多颗卫星，站星时段数值存储器。
            键为卫星编号 PRN，分组为时段 TimePeriod，数据为 RmsedNumeral。
            假定：时段内所有的卫星数值不变！
            </summary>
        </member>
        <member name="M:Gnsser.MultiSatPeriodRmsNumeralStorage.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.MultiSatPeriodRmsNumeralStorage.GetRoundInt(System.String,System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,Geo.RmsedNumeral},System.Double,System.Double)">
            <summary>
            对本测站，各卫星对应时段作差，固定模糊度。星间单差。
            </summary>
            <param name="name"></param>
            <param name="fractions"></param>
            <param name="MaxDifferForAmbi"></param>
            <param name="MaxRms"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MultiSatPeriodRmsNumeralStorage.CasheOfRawDiffers">
            <summary>
            存储差分值，一次计算就存储。避免重复计算。
            </summary>
        </member>
        <member name="M:Gnsser.MultiSatPeriodRmsNumeralStorage.GetRawDiffer(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            获取指定历元所有数值与基准的差分值。
            首先进行时段差分，再获取。
            </summary>
            <param name="basePrn"></param>
            <param name="epoch"></param>
            <param name="maxRms"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSatPeriodRmsNumeralStorage.GetRawDiffer(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            直接与基准星对应时段作差，通常是为了消除接收机硬件延迟。
            说明：对应时段作差，可以消除部分接收机硬件延迟变化。
            </summary>
            <param name="basePrn">基准星</param>
            <param name="maxRms">忽略掉误差太大的数据,包括基准数据</param>
            <returns>结果RMS不包括基准星影响</returns>
        </member>
        <member name="M:Gnsser.MultiSatPeriodRmsNumeralStorage.GetValue(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            直接获取数据，如果没有，返回 null
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns>如果没有，返回 null</returns>
        </member>
        <member name="T:Gnsser.MultiSiteEpochValueStorage">
            <summary>
            测站历元数据存储
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.#ctor(System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Gnsser.MultiSiteEpochValueStorage.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteEpochValueStorage.FractionTable">
            <summary>
            时段小数表。一行为一个测站，所有卫星的平均值的小数部分。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteEpochValueStorage.DetailTable">
            <summary>
            详细表,完整的信息都包含于此，所有产品皆可由此衍生.
            一行为一个测站，一个时段的值。
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.GetValue(System.String,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取数值
            </summary>
            <param name="site"></param>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.GetRawDiffer(Gnsser.SatelliteNumber)">
            <summary>
            原始数据差分当前星，如获取PPP浮点数星间单差。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.GetNarrowLaneFcbs(Gnsser.MultiSitePeriodValueStorage,System.Func{Geo.RmsedNumeral,Geo.RmsedNumeral,Geo.RmsedNumeral})">
            <summary>
            所有站星间单差窄巷浮点数模糊度
            </summary>
            <param name="intValueOfDifferWL"></param>
            <param name="funcToSolvNlAmbi"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.GetSameSatValues">
            <summary>
            组合相同卫星数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochValueStorage.GetRoundFraction">
            <summary>
            获取四舍五入小数部分。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiSitePeriodValueStorage">
            <summary>
            测站时段数据存储
            </summary>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.#ctor(System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Gnsser.MultiSitePeriodValueStorage.ProductsOfAllDiffer">
            <summary>
            所有卫星的差分产品，计算一次即存储。第二次访问直接获取。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeriodValueStorage.TimePeriod">
            <summary>
            历元时段
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeriodValueStorage.FractionTable">
            <summary>
            时段小数表。一行为一个测站，所有卫星的平均值的小数部分。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSitePeriodValueStorage.DetailTable">
            <summary>
            详细表,完整的信息都包含于此，所有产品皆可由此衍生.
            一行为一个测站，一个时段的值。
            </summary>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetValue(System.String,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取数值
            </summary>
            <param name="site"></param>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.RemoveRmsGreaterThan(System.Double)">
            <summary>
            移除RMS大于此的数据
            </summary>
            <param name="maxRms"></param>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetAllPossibleDifferInts">
            <summary>
            所有可能的差分整数，所有卫星都做一遍基准星
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetDifferInt(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            返回宽巷差分后的整数部分，用于固定模糊度，注意区分时段。
            如果不含基准卫星，返回null
            </summary>
            <param name="basePrn">基准卫星</param>
            <param name="maxDifferForAmbi">允许的最大偏差</param>
            <param name="maxRms">允许的最大的RMS</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetRoundInt(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,Geo.RmsedNumeral},System.Double,System.Double)">
            <summary>
            四舍五入法固定模糊度
            </summary>
            <param name="maxDifferForAmbi">允许的最大偏差</param>
            <param name="maxRms">允许的最大的RMS</param>
            <param name="fractions">小数部分产品</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetRawDiffer(Gnsser.SatelliteNumber)">
            <summary>
            所有测站与指定参考星的差分值（浮点数）。
            必须与测站共视才可以差分。结果中包括了共视时段。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcbOfAllSatAverage(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            将所有卫星产品归算到一颗卫星上面。
            </summary>
            <param name="basePrn"></param>
            <param name="intervalSeconds"></param>
            <param name="maxRms"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcbOfAllSat(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            将所有卫星产品归算到一颗卫星上面
            </summary>
            <param name="basePrn"></param>
            <param name="maxRms"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcb(System.Double,System.Double)">
            <summary>
            返回所有,然后再加权平均，这样可以获得更可靠的结果！
            </summary>
            <param name="intervalSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcb(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            按照指定的间隔，返回当前时间范围内的所有计算值。
            仅单个卫星，匹配不上的不参与计算，造成了浪费。
            </summary>
            <param name="basePrn">基准星</param>
            <param name="intervalSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcb(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            当前历元产品，为所在时段的平均。
            </summary>
            <param name="basePrn">基准星</param>
            <param name="epoch">历元</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcbDic(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            当前历元产品，为所在时段的平均。返回对应的各颗卫星数据。
            </summary>
            <param name="basePrn"></param>
            <param name="epoch"></param>
            <param name="maxRms"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetRawDiffer(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            获取指定历元所有数值与基准的差分值。
            首先进行时段差分，再获取。
            </summary>
            <param name="basePrn"></param>
            <param name="epoch">历元</param>
            <param name="maxRms">RMS过滤</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetWideLaneFcb(Gnsser.SatelliteNumber)">
            <summary>
            将所有产品归算到一个卫星上面。取平均。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetFinalFcbOfBsd(Gnsser.SatelliteNumber)">
            <summary>
            最后，将所有归算到一个基准卫星上面。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetProductTableOfAllDiffer(System.String)">
            <summary>
            以表格形式返回所有基准卫星差分产品
            </summary>
            <param name="tableName">表名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetDifferFractionProduct">
            <summary>
            返回所有卫星之间的差分产品。
            </summary>
            <returns>正小数的产品</returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetDifferFractionProduct(Gnsser.SatelliteNumber)">
            <summary>
            计算差分产品,小数部分，区间[-0.5, 0.5]
            </summary>
            <param name="basePrn">基准卫星</param>
            <returns>正小数的产品</returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetAverageRoundFractionTable(System.String)">
            <summary>
            获取各测站小数部分的平均，与时段无关。
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetDetailTable(System.String)">
            <summary>
            获取表格，以Key为列名
            </summary>
            <param name="tableName">表名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.ParsePrnTables(System.String[])">
            <summary>
            解析为卫星表格集合。
            </summary>
            <param name="prnPathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.ParseDetailTable(System.String)">
            <summary>
            解析为对象
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.ParseDetailTable(Geo.ObjectTableStorage)">
            <summary>
            解析表格获取对象
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSitePeriodValueStorage.GetTable(System.String)">
            <summary>
            获取表格，只显示分段，与时段无关
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EpochInfoProcessStreamer">
            <summary>
            历元信息处理数据流
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoProcessStreamer.#ctor(System.String,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
            <param name="AngleCut"></param> 
        </member>
        <member name="P:Gnsser.EpochInfoProcessStreamer.SatelliteTypes">
            <summary>
            SatelliteTypes
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfoProcessStreamer.FilePath">
            <summary>
            路径
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoProcessStreamer.Run">
            <summary>
            提取一个MW原始值。作为具有卫星和接收机硬件延迟的宽巷模糊度。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoProcessStreamer.PreProcess(Gnsser.Domain.EpochInformation)">
            <summary>
            预处理
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="T:Gnsser.GnsserNamer">
            <summary>
            GNSSer 名字计算
            </summary>
        </member>
        <member name="T:Gnsser.GnssReceiver">
            <summary>
             GNSS 接收机
            </summary>
        </member>
        <member name="T:Gnsser.GnssGradeType">
            <summary>
            GNSS 类型等级
            </summary>
        </member>
        <member name="T:Gnsser.GnssGradeTypeHelper">
            <summary>
            转换工具
            </summary>
        </member>
        <member name="M:Gnsser.GnssGradeTypeHelper.GradeToResultState(Gnsser.GnssGradeType)">
            <summary>
            转换结果类型
            </summary>
            <param name="LevelGradeType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssReveiverNominalAccuracy">
             <summary>
            GNSS接收机标称精度水平和垂直,封装了一些工具
             </summary>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="levelFixed"></param>
            <param name="verticalFixed"></param>
            <param name="levelCoeef"></param>
            <param name="verticalCoeef"></param>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.#ctor(Gnsser.LevelVertical,Gnsser.LevelVertical)">
            <summary>
            构造函数
            </summary>
            <param name="FixedValue">固定误差，单位为毫米 mm</param>
            <param name="CoefOfProportion">注意单位为百万分之一米（ppm）</param>
        </member>
        <member name="P:Gnsser.GnssReveiverNominalAccuracy.FixedValue">
            <summary>
            固定误差
            </summary>
        </member>
        <member name="P:Gnsser.GnssReveiverNominalAccuracy.CoefOfProportion">
            <summary>
            比例误差系数，
            </summary>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetToleranceErrorMilliMeter(System.Double)">
            <summary>
            当前参数设置下的接收机限差，单位毫米
            </summary>
            <param name="distanceMeter">距离，米</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetGnssGrade(System.Double,System.Double)">
            <summary>
            获取当前精度所处等级
            </summary>
            <param name="closureErrorMeter">闭合差，单位：米</param>
            <param name="distanceMeter">距离，单位：米</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetGnssGradeToleranceMeter(Gnsser.GnssGradeType,System.Double)">
            <summary>
            GNSS网的精度限差, 单位米
            </summary>
            <param name="gnssGrade">GNSS网等级</param>
            <param name="distanceMeter">基线长度，单位米</param>
            <returns>GNSS网的精度限差, 单位米</returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetReceiverToleranceError(Gnsser.GnssReveiverType,System.Double,System.String)">
            <summary>
             GNSS 测量精度计算公式
            </summary> 
            <param name="gnssReveiverType">接收机类型</param>
            <param name="distanceMeter">基线长度</param>
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetNominalAccuracyOfGnssReveiver(Gnsser.GnssReveiverType,System.String)">
            <summary>
            获取接收机标称精度，静态。是否应该写入文件！！！
            </summary>
            <param name="gnssReveiverType">接收机类型</param> 
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssReveiverNominalAccuracy.GetToleranceErrorMilliMeter(System.Double,System.Double,System.Double)">
            <summary>
            GNSS 测量精度计算公式,返回标准差，㎜
            </summary>
            <param name="fixedErrorMiniMeter">固定误差，按照国标，单位毫米</param>
            <param name="coefOfProportion">比例误差系数，按照国标，单位百万分之一</param>
            <param name="distanceMeter">基线距离，单位 米</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.LevelVertical">
            <summary>
            水平和垂直
            </summary>
        </member>
        <member name="M:Gnsser.LevelVertical.#ctor(System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="Level"></param>
            <param name="Vertical"></param>
        </member>
        <member name="P:Gnsser.LevelVertical.Level">
            <summary>
            水平
            </summary>
        </member>
        <member name="P:Gnsser.LevelVertical.Vertical">
            <summary>
            垂直
            </summary>
        </member>
        <member name="P:Gnsser.LevelVertical.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Gnsser.LevelVertical.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssReveiverType">
            <summary>
            常见GNSS接收机类型
            </summary>
        </member>
        <member name="T:Gnsser.ParamValueService">
            <summary>
            参数服务
            </summary>
        </member>
        <member name="M:Gnsser.ParamValueService.#ctor(Geo.ObjectTableStorage)">
            <summary>
            构造函数
            </summary>
            <param name="table"></param>
        </member>
        <member name="P:Gnsser.ParamValueService.ParamNames">
            <summary>
            参数
            </summary>
        </member>
        <member name="P:Gnsser.ParamValueService.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Gnsser.ParamValueService.GetWeightedVector">
            <summary>
            向量
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.RtkpostResult">
            <summary>
            解析 Rtkrcv 实时定位的计算结果
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResult.Items">
            <summary>
            集合。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResult.Comments">
            <summary>
            注释
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostResult.Load(System.String)">
            <summary>
            加载
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostResult.Parse(System.String)">
            <summary>
            解析计算结果
            </summary>
            <param name="text">结果文本</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostResult.Parse(System.String[])">
            <summary>
            解析计算结果。
            </summary>
            <param name="lines">结果行</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.RktSolveType">
            <summary>
            计算类型
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkpostResultItem">
            <summary>
            一行代表的对象
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.Xyz">
            <summary>
            坐标
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.XyzRms">
            <summary>
            坐标
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.GeoCoord">
            <summary>
            坐标
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.RktSolveType">
            <summary>
            是否固定解
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostResultItem.SatCount">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostResultItem.Parse(System.String)">
            <summary>
            解析实时计算行结果。相隔一个字符串为内部，2个为外部。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.AbbFile">
            <summary>
            Bernese Station nambe abbreviation fileB.
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbFile.Items">
            <summary>
            ABB 文件项目列表。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbFile.Name">
            <summary>
            名称。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbFile.Count">
            <summary>
            统计条目数量
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.Add(Gnsser.Interoperation.Bernese.AbbItem)">
            <summary>
            添加一个子项，如果已经存在，则不添加。
            若添加，还要保证ID2没有重复。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.Save(System.String)">
            <summary>
            保存到文件。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.ToString">
            <summary>
            PPP_021430                                                       17-JAN-13 10:24
            --------------------------------------------------------------------------------
            
            Station name             4-ID    2-ID    Remark                            
            ****************         ****     **     ***************************************
            AIRA 21742S001           AIRA     AI     Added by SR updabb                     
            AJAC                     AJA0     AA     Added by SR updabb                     
            AJAC 10077M005           AJAC     AJ     Added by SR updabb       
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.CreateFromODir(System.String)">
            <summary>
            从包含O文件的文件夹中提取。
            </summary>
            <param name="oDir"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.Merger(Gnsser.Interoperation.Bernese.AbbFile,Gnsser.Interoperation.Bernese.AbbFile)">
            <summary>
            合并两个 ABB 文件。
            </summary>
            <param name="one"></param>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.ParseText(System.String)">
            <summary>
            解析字符串。
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbFile.Parse(System.String)">
            <summary>
            从文件中读取。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.AbbItem">
            <summary>
            Station name             4-ID    2-ID    Remark                            
            ****************         ****     **     ***************************************
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.#ctor(System.String,System.String,System.Collections.Generic.List{Gnsser.Interoperation.Bernese.AbbItem})">
            <summary>
            构建一个对象。
            </summary>
            <param name="makerName"></param>
            <param name="markerNumber"></param>
            <param name="items">已经有的对象列表。要求新对象不可与之相同。</param>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbItem.MakerName">
            <summary>
            标记
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbItem.MakerNumber">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbItem.Id4">
            <summary>
            4位ID
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbItem.Id2">
            <summary>
            2位ID
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.AbbItem.Remark">
            <summary>
            说明
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.Equals(System.Object)">
            <summary>
            值是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.ToAbbString">
            <summary>
            简略名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.ParseLine(System.String)">
            <summary>
            KARR 50139M001           KARR     KA     Added by SR updabb  
            KAYT                     KAYT     KY     Added by SR updabb    
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.AbbItem.GenId2(System.Collections.Generic.List{Gnsser.Interoperation.Bernese.AbbItem},System.String)">
            <summary>
            生成一个独一无二的ID2.
            </summary>
            <param name="items"></param>
            <param name="markerName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.PcfName">
            <summary>
            PCF 其名称与PCF文件夹下的PCF对应。
            可以直接 PcfName.PCF 使用。
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.BerBpe">
            
             <summary>
              Bernese BerBpe.
             </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.#ctor(System.String,Geo.Times.Time,System.Boolean)">
            <summary>
            Bernese BerBpe.
            </summary>
            <param name="campaign">本地的工程文件名，不是路径</param>
            <param name="gpsTime">观测日期，年月日，YYYYMMDD</param>
            <param name="skip">是否忽略</param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.Init(System.String,Geo.Times.Time,System.Boolean)">
            <summary>
            初始化工作。
            </summary>
            <param name="campaign">本地的工程文件名，不是路径</param>
            <param name="gpsTime">观测日期，年月日，YYYYMMDD</param>
            <param name="skip">是否跳过一些步骤</param>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.BerBpe.Skip">
            <summary>
            是否跳过一些步骤。                                                                                                                                                                                                                                                                                     
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.BerBpe.WinCmd">
            <summary>
            CMD
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.BerBpe.Campaign">
            <summary>
            工程
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.BerBpe.GpsTime">
            <summary>
            TIme
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.Run(System.String)">
            <summary>
            同步运行
            </summary>
            <param name="pcfName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.RunAsyn(System.String)">
            <summary>
            异步运行
            </summary>
            <param name="pcfName"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.GetSinexPath(System.String)">
            <summary>
            C:\GPSDATA\EXAMPLE\SOL\F1_021430.SNX
            C:\GPSDATA\EXAMPLE\SOL\PPP021430.SNX
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.GetRunningState(System.String)">
            <summary>
            获取当前Bernese运行状态，running,finished,error,等等。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.SetBpeEnviroment(System.String,Geo.Times.Time,System.String,System.Boolean)">
            <summary>
            设置BPE运行环境
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.ModifyMenuInp(System.String,System.String)">
            <summary>
             调用Bern的BPE
             1)首先，修改环境.INP文件//@"C:\GPSUSER\PAN\RUNBPE.INP"//@"C:\GPSUSER\PAN\MENU.INP"
            ModifyINP 为运行BPE而修改Bernese运行环境设置文件内容 *.INP，主菜单MENU.INP
            </summary>
            <param name="Campagin"></param>
            <param name="JulianDate"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.Interoperation.Bernese.BerBpe.ModifyRunbpeInp(System.String,Geo.Times.Time,System.String,System.Boolean)" -->
        <member name="M:Gnsser.Interoperation.Bernese.BerBpe.ModifyMenuRunPcfInp">
            <summary>
            ModifyINP 为运行BPE而修改Bernese运行环境设置文件内容 *.INP，MENU_RUNPCF_INPE.INP
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.BerFileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.BerFileType.STA">
            <summary>
            测站文件
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.BerFileType.ABB">
            <summary>
            ABB
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.BerFileType.CRD">
            <summary>
            CRD
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.BerFileType.VEL">
            <summary>
            VEL
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.BerFileFactory">
            <summary>
            工厂
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerFileFactory.Create(System.String,Gnsser.Interoperation.Bernese.BerFileType)">
            <summary>
            创建
            </summary>
            <param name="oDir"></param>
            <param name="berFileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerFileFactory.Merge(System.String,System.String,Gnsser.Interoperation.Bernese.BerFileType)">
            <summary>
            合并
            </summary>
            <param name="textA"></param>
            <param name="textB"></param>
            <param name="berFileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.BerFileFactory.Merge(Gnsser.Interoperation.Bernese.IBerFile,Gnsser.Interoperation.Bernese.IBerFile,Gnsser.Interoperation.Bernese.BerFileType)">
            <summary>
            合并
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="berFileType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.CrdFile">
            <summary>
            Bernese 坐标文件。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Comments">
            <summary>
            说明或其它信息。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.DateString">
            <summary>
            时间字符串
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Epoch">
            <summary>
            历元。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Datum">
            <summary>
            基准
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Items">
            <summary>
            坐标集合
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdFile.Count">
            <summary>
            统计条目数量
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.AddRange(Gnsser.Interoperation.Bernese.CrdFile,System.Boolean)">
            <summary>
            将另一个文件的内容添加进来，两个文件合并成一个文件。
            </summary>
            <param name="file"></param>
            <param name="strict"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.Save(System.String)">
            <summary>
            写入文件。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.ParseText(System.String)">
            <summary>
            读取文本。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.Read(System.String)">
            <summary>
            读取Bernese坐标文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.CreateFromODir(System.String)">
            <summary>
            从O文件夹创建
            </summary>
            <param name="oDir"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdFile.Merger(Gnsser.Interoperation.Bernese.CrdFile,Gnsser.Interoperation.Bernese.CrdFile)">
            <summary>
            合并两个 ABB 文件。
            </summary>
            <param name="one"></param>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.CrdItem">
            <summary>
            Bernese 文件。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.#ctor(System.Int32,System.String,System.String,Geo.Coordinates.XYZ)">
            <summary>
            从 Rinex Header 中创建。
            </summary>
            <param name="num"></param>
            <param name="name"></param>
            <param name="obsCodeode"></param>
            <param name="xyz"></param>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Num">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.StationName">
            <summary>
            测站名
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Code">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Xyz">
            <summary>
            坐标
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.GeoCoord">
            <summary>
            地理坐标
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.CrdItem.Flag">
            <summary>
            标记
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.ToLine">
            <summary>
            行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.ToString">
            <summary>
            到行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.Equals(System.Object)">
            <summary>
            等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.GetEpochReduction(Geo.Coordinates.XYZ,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            历元归算
            </summary>
            <param name="velocity"></param>
            <param name="current"></param>
            <param name="to"></param> 
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.GetEpochReduction(Geo.Coordinates.XYZ,System.Double)">
            <summary>
            历元归算
            </summary> 
            <param name="velocity"></param>
            <param name="differYear"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.CrdItem.ParseLine(System.String)">
            <summary>
            NUM  STATION NAME           X (M)          Y (M)          Z (M)     FLAG
             1  BRUS 13101M004     4027893.8650    307045.6950   4919475.0250 
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.IBerFile">
            <summary>
            Bernese 文件
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.IBerFile.Save(System.String)">
            <summary>
            保存
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.IBerFile.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.StaFile">
            <summary>
            Bernese STA 文件。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaFile.Items">
            <summary>
            项目
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaFile.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaFile.Count">
            <summary>
            统计条目数量
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.Save(System.String)">
            <summary>
            保存到路径
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.Add(Gnsser.Interoperation.Bernese.StaInfoItem)">
            <summary>
            添加一个子项，如果已经存在，则不添加。 
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.ToString">
            <summary>
              EXTART INFORMATION HEADER
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.CreateFromODir(System.String)">
            <summary>
            从 包含 O 文件的文件夹中读取、解析，并创建 StaFile 对象。
            </summary>
            <param name="oDir"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.ParseText(System.String)">
            <summary>
            解析字符串。
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaFile.Merger(Gnsser.Interoperation.Bernese.StaFile,Gnsser.Interoperation.Bernese.StaFile)">
            <summary>
            合并两个 STA 文件。
            </summary>
            <param name="one"></param>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.StaItem">
            <summary>
            STATION NAME          FLG          FROM                   TO         OLD STATION NAME      REMARK
            ****************      ***  YYYY MM DD HH MM SS  YYYY MM DD HH MM SS  ********************  ************************
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.MakerName">
            <summary>
            标记名称，如 AIRA
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.MakerNumber">
            <summary>
            测站编号，如 21742S001
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.Flag">
            <summary>
            标记
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.From">
            <summary>
            从时间
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.To">
            <summary>
            到时间
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.OldStaName">
            <summary>
            老站名
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaItem.Remark">
            <summary>
            标记
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.StaItem.fromDate">
            <summary>
            从日
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Bernese.StaItem.toDate">
            <summary>
            到日
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaItem.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaItem.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaItem.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaItem.ToStaString">
            <summary>
            测站字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaItem.GetGpsTimeString(Geo.Times.Time)">
            <summary>
            获取时间字符串
            </summary>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.StaInfoItem">
            <summary>
            RECEIVER TYPE         ANTENNA TYPE          REC #   ANT #    NORTH      EAST      UP      DESCRIPTION             REMARK
            ********************  ********************  ******  ******  ***.****  ***.****  ***.****  **********************  ************************ 
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.#ctor(System.String,Gnsser.ISiteInfo,System.String)">
            <summary>
            从 Rinex Header 中创建。
            </summary>
            <param name="name"></param>
            <param name="h"></param>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.ReceiverType">
            <summary>
            接收类型
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.AntennaType">
            <summary>
            天线类型
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.RecNum">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.AntNum">
            <summary>
            天线编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.NEU">
            <summary>
            东北天
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.StaInfoItem.Discription">
            <summary>
            描述
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.ToStaInfoString">
            <summary>
            测站信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.ParseLine(System.String)">
            <summary>
            STATION NAME          FLG          FROM                   TO         RECEIVER TYPE         ANTENNA TYPE          REC #   ANT #    NORTH      EAST      UP      DESCRIPTION             REMARK
            ****************      ***  YYYY MM DD HH MM SS  YYYY MM DD HH MM SS  ********************  ********************  ******  ******  ***.****  ***.****  ***.****  **********************  ************************
            AIRA 21742S001        001  1980 01 06 00 00 00  2099 12 31 00 00 00  TRIMBLE 4000SSI       TRM23903.00            17424       0    0.0000    0.0000    0.0000                            From AIRA1430.02O       
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.StaInfoItem.GetNEUString(Geo.Coordinates.NEU)">
            <summary>
            字符串
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.VelFile">
            <summary>
            Bernese 坐标文件。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Comments">
            <summary>
            说明或其它信息。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.DateString">
            <summary>
            日期字符串
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Epoch">
            <summary>
            历元。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Datum">
            <summary>
            基准
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Items">
            <summary>
            坐标集合
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelFile.Count">
            <summary>
            统计条目数量
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.Add(Gnsser.Interoperation.Bernese.VelItem)">
            <summary>
            添加。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.Merge(Gnsser.Interoperation.Bernese.VelFile,System.Boolean)">
            <summary>
            将另一个文件的内容添加进来，两个文件合并成一个文件。
            </summary>
            <param name="file"></param>
            <param name="strict"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.Save(System.String)">
            <summary>
            写入文件。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.ParseText(System.String)">
            <summary>
            读取文本。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.Read(System.String)">
            <summary>
            读取Bernese速度文件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.Read(System.IO.Stream)">
            <summary>
            读取Bernese速度文件
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelFile.CreateFromODir(System.String)">
            <summary>
            从观测文件夹中读取。
            </summary>
            <param name="oDir"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Bernese.VelItem">
            <summary>
            Bernese VelItem 文件。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Num">
            <summary>
            从 1 开始的编号
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.StationName">
            <summary>
            测站名称，如 ALGO
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Code">
            <summary>
            测站代码， 如 40104M002
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Vxyz">
            <summary>
            速度 ，单位为 米/年。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Flag">
            <summary>
            标签，如 IG00
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Plate">
            <summary>
            板块， 如 NOAM
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.Bernese.VelItem.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelItem.ToLine">
            <summary>
            行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelItem.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelItem.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Bernese.VelItem.ParseLine(System.String)">
            <summary>
            NUM  STATION NAME           VX (M/Y)       VY (M/Y)       VZ (M/Y)  FLAG   PLATE
            1  ALGO 40104M002          -0.0154        -0.0054         0.0043    IG00 NOAM
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.ExeRunner">
            <summary>
            命令行下的EXE文件执行器，对CMD命令进行了封装,即：让cmd启动一个exe程序。
            一次只能管理一个程序.
            注意:
            1.本类一个对象对应于1个运行的Command，对应于一个Process，当该线程释放或杀死后，则重新启用一个Conmand对象。
            故Command对象退出或释放后，本对象只是停止Stoped。Start时，则重新构建一个对象。
            2.将可执行程序和参数分开设置，但是在运行时，一起写入命令行CMD。
            </summary>
        </member>
        <member name="E:Gnsser.Interoperation.ExeRunner.ExitedOrDisposed">
            <summary>
            停止事件
            </summary>
        </member>
        <member name="E:Gnsser.Interoperation.ExeRunner.ErrorDataReceived">
            <summary>
            被调用程序输出数据事件
            </summary>          
        </member>
        <member name="E:Gnsser.Interoperation.ExeRunner.OutputDataReceived">
            <summary>
            输出数据
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.#ctor(System.String)">
            <summary>
            文件执行器构造函数。采用参数进行初始化。
            </summary>
            <param name="ExePath">可执行程序的路径</param>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.BuildProcessRunner">
            <summary>
            建立一个 ProcessRunner 对象。在每一次任务运行前必须有一个。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.Command_ExitedOrDisposed(System.Object,System.EventArgs)">
            <summary>
            程序执行完毕。无论是同步或是异步。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Gnsser.Interoperation.ExeRunner.ProcessRunner">
            <summary>
            CMD运行类。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.ExeRunner.ExePath">
            <summary>
            可执行程序的路径
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.ExeRunner.IsRunning">
            <summary>
            是否正在运行。
            在异步执行时，虽然调用主线程已经退出，但是异步线程仍然在执行，因此认为是在执行。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.Run(System.String)">
            <summary>
            通过命令行调用程序
            </summary>
            <param name="options">调用选项</param>
            <returns>返回命令行结果</returns>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.CheckOrCreateProcessRunner">
            <summary>
            检查，如果线程退出了则重新开启一个。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.Run(Gnsser.Interoperation.IExeOption)">
            <summary>
            通过命令行调用程序
            </summary>
            <param name="options">调用选项</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Interoperation.ExeRunner.AsyncResult">
            <summary>
            这个没有什么用处，只是用来测试的。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.RunAsyn(Gnsser.Interoperation.IExeOption)">
            <summary>
            异步运行
            </summary>
            <param name="options">参数选项</param>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.RunAsyn(System.String)">
            <summary>
            异步运行
            </summary>
            <param name="options">参数选项</param>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.Stop">
            <summary>
            写Cmd退出命令，如果程序还在运行，则通过杀死进程的方式停止运行。
            释放资源。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.ExeRunner.IsDisposed">
            <summary>
            是否抛弃了资源。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.ExeRunner.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.GPSTk.GpsTkBpe">
            
             <summary>
              GPSTk BerBpe.
             </summary>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.#ctor(System.String,Geo.Times.Time,System.Boolean)">
            <summary>
            Bernese BerBpe.
            </summary>
            <param name="campaign">本地的工程文件名，不是路径</param>
            <param name="gpsTime">观测日期，年月日，YYYYMMDD</param>
            <param name="skip">是否忽略</param>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.Init(System.String,Geo.Times.Time,System.Boolean,System.String)">
            <summary>
            初始化工作。
            </summary>
            <param name="campaign">本地的工程文件名，不是路径</param>
            <param name="gpsTime">观测日期，年月日，YYYYMMDD</param>
            <param name="skip">是否跳过一些步骤</param>
            <param name="startUpPath">程序运行目录</param> 
        </member>
        <member name="P:Gnsser.Interoperation.GPSTk.GpsTkBpe.Skip">
            <summary>
            是否跳过一些步骤。                                                                                                                                                                                                                                                                                     
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.GPSTk.GpsTkBpe.WinCmd">
            <summary>
            cmd
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.campaignDir">
            <summary>
            本地工程所在上级目录
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.startUpDir">
            <summary>
            执行程序目
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.resultFile">
            <summary>
            结果文件
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.GPSTk.GpsTkBpe.Campaign">
            <summary>
            工程
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.GPSTk.GpsTkBpe.GpsTime">
            <summary>
            time
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.SKIP_PPP">
            <summary>
            PPP skip
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.SERVER_VARIABLES_PPP_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.SERVER_VARIABLES_RNX_0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.GPSTk.GpsTkBpe.SERVER_VARIABLES_PPP">
            <summary>
            PPP
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.Run(System.String)">
            <summary>
            同步运行
            </summary>
            <param name="pcfName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.RunAsyn(System.String)">
            <summary>
            异步运行
            </summary>
            <param name="pcfName"></param>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.GetSinexPath(System.String)">
            <summary>
            C:\GPSDATA\EXAMPLE\SOL\F1_021430.SNX
            C:\GPSDATA\EXAMPLE\SOL\PPP021430.SNX
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.GetBernRunningState(System.String)">
            <summary>
            获取当前运行状态，running,finished,error,等等。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.SetBpeEnviroment(System.String,Geo.Times.Time,System.String,System.Boolean,System.String)">
            <summary>
            设置并运行环境所需要的配置文件
            虽没有返回，但给cmdline进行赋值。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.GPSTk.GpsTkBpe.CreatPPPConfigureFile(System.String,Geo.Times.Time,System.Boolean,System.String)">
            <summary>
            建立PPP的配置文件，每个PPP任务应该是单站的，但这里读取文件夹下所有的文件，理论上应该是只有一个的。
            </summary>
            <param name="campaign"></param>
            <param name="gpsTime"></param> 
            <param name="skip"></param>
            <param name="camDir">工程目录</param>
        </member>
        <member name="T:Gnsser.Interoperation.IExeOption">
            <summary>
            可执行程序的配置选项
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.IExeOption.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.ICommandLines">
            <summary>
            在程序内部界面输入选项，可执行程序的配置选项
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.ICommandLines.Commands">
            <summary>
            每一行的命令，按照顺序执行。
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.IStartArguments">
            <summary>
            启动命令，在路径之后
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.CommandLines">
            <summary>
            在程序内部界面输入选项，可执行程序的配置选项
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.CommandLines.Commands">
            <summary>
            选项
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.IOuterExeOption">
            <summary>
            在一行中录入可执行程序的配置选项
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.IExeRunner">
            <summary>
            EXE文件执行器接口
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.IExeRunner.ExePath">
            <summary>
            可执行程序的路径
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.IExeRunner.Run(System.String)">
            <summary>
            通过命令行调用程序
            </summary>
            <param name="options">调用选项</param>
            <returns>返回命令行结果</returns>
        </member>
        <member name="M:Gnsser.Interoperation.IExeRunner.Run(Gnsser.Interoperation.IExeOption)">
            <summary>
            通过命令行调用程序
            </summary>
            <param name="options">调用选项</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.MultiExeRunner">
            <summary>
            可以同时管理一个Exe执行文件，的多个线程。
            命令行下的EXE文件执行，对CMD命令进行了封装,即：让cmd启动exe程序。
            一次只能管理一个程序.
            注意:
            1.本类一个对象对应于1个运行的Command，对应于一个Process，当该线程释放或杀死后，则重新启用一个Conmand对象。
            2.将可执行程序和参数分开设置，但是在运行时，一起写入命令行CMD。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.MultiExeRunner.#ctor(System.String)">
            <summary>
            文件执行器构造函数。采用参数进行初始化。
            </summary>
            <param name="ExePath">可执行程序的路径</param>
        </member>
        <member name="P:Gnsser.Interoperation.MultiExeRunner.Commands">
            <summary>
            命令列表。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.MultiExeRunner.CurrentCommand">
            <summary>
            CMD运行类。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.MultiExeRunner.ExePath">
            <summary>
            可执行程序的路径
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkConfig">
            <summary>
            RTKLib  配置文件。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkConfig.#ctor(Geo.IO.Config)">
            <summary>
            RTKLib  配置文件。
            </summary> 
        </member>
        <member name="T:Gnsser.Interoperation.RtkExecuter">
            <summary>
            RTKLib  程序执行者。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkExecuter.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkExecuter.#ctor(System.String)">
            <summary>
            RTKLib  程序执行者。
            </summary>
            <param name="exePath">路径</param>
        </member>
        <member name="T:Gnsser.Interoperation.RtkpostExecuter">
            <summary>
            RTKLib rtkpost 程序执行者。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostExecuter.#ctor(System.String)">
            <summary>
            RTKLib  程序执行者。
            </summary>
            <param name="exePath">路径</param>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostExecuter.Stop">
            <summary>
            停止执行。
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkpostOption">
            <summary>
            Rtklib 的参数选项。
            输入指定的功能，按照指定设计生成命令参数。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.RtklibType">
            <summary>
            计算类型，包含实时处理和事后处理。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.ObservationPathes">
            <summary>
            观测文件列表
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.NavigationPath">
            <summary>
            导航文件路径。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.ConfigPath">
            <summary>
            配置文件路径
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.StandardOutputPath">
            <summary>
            标准输出文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostOption.AddRoverObsFilePath(System.String)">
            <summary>
            添加流动站数据文件，流动站数据文件总是排在第一位。
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostOption.AddRefObsFilePath(System.String)">
            <summary>
            添加参考站数据文件
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="P:Gnsser.Interoperation.RtkpostOption.CanSolve">
            <summary>
            是否满足可以计算的最低条件，是否可以计算。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkpostOption.ToString">
            <summary>
            字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.RtklibType">
            <summary>
            计算类型，包含实时处理和事后处理。
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.RtklibType.Navigation">
            <summary>
            实时导航计算
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.RtklibType.Post">
            <summary>
            时候处理
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkrcvExecuter">
            <summary>
            实时计算调用类。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvExecuter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvExecuter.#ctor(System.String)">
            <summary>
            RTKLib  程序执行者。
            </summary>
            <param name="exePath">路径</param>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvExecuter.IsRedirectPipe">
            <summary>
            是否采用管道命令。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvExecuter.Stop">
            <summary>
            停止运行。
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkrcvOption">
            <summary>
            Rtkrcv 的参数选项。
            输入指定的功能，按照指定设计生成命令参数。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvOption.ConfigFilePath">
            <summary>
            配置文件。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvOption.Commands">
            <summary>
            一个命令占用一行。逐行输入。
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvOption.ExitCommands">
            <summary>
            退出的命令行
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvOption.ToString">
            <summary>
            字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvOption.Arguments">
            <summary>
            参数,与程序路径一起传入。
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.RtkrcvResult">
            <summary>
            解析 Rtkrcv 实时定位的计算结果
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvResult.Items">
            <summary>
            集合。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvResult.Parse(System.String)">
            <summary>
            解析计算结果
            </summary>
            <param name="text">结果文本</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvResult.Parse(System.String[])">
            <summary>
            解析计算结果。
            </summary>
            <param name="lines">结果行</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.RtkrcvResultItem">
            <summary>
            一行代表的对象
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvResultItem.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Interoperation.RtkrcvResultItem.Coords">
            <summary>
            坐标
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.RtkrcvResultItem.Parse(System.String)">
            <summary>
            解析实时计算行结果。相隔一个字符串为内部，2个为外部。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Teqc.TeqcFunction">
            <summary>
            功能
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcFunction.None">
            <summary>
            无任何操作
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcFunction.ViewMetadata">
            <summary>
            查看元数据。
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcFunction.QualityChecking">
            <summary>
            质量检核
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcFunction.Translation">
            <summary>
            转换
            </summary>
        </member>
        <member name="T:Gnsser.Interoperation.Teqc.TeqcFunctionCaller">
            <summary>
            TEQC 功能调用者，封装了 TEQC 功能的存在。
            主要有以下使用方法，对应构造函数：
            1.先指定功能，再指定执行文件；
            2.先指定文件，然后运行不同的功能。
            3.还可以只指定teqc程序路径，自己编写命令行参数。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.#ctor(System.String)">
            <summary>
            只指定teqc程序路径
            </summary>
            <param name="teqcPath">teqc程序路径</param>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.#ctor(System.String,System.String[])">
            <summary>
            先指定文件，然后运行不同的功能。
            </summary>
            <param name="teqcPath"></param>
            <param name="files"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.#ctor(System.String,Gnsser.Interoperation.Teqc.TeqcFunction)">
            <summary>
            先指定功能，再指定执行文件
            </summary>
            <param name="teqcPath"></param>
            <param name="func"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.Run(Gnsser.Interoperation.Teqc.TeqcFunction)">
            <summary>
            运行功能。
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.Run(System.String[])">
            <summary>
            请先设置Function。
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.Run(Gnsser.Interoperation.Teqc.TeqcFunction,System.String[])">
            <summary>
            指定功能，文件，并运行teqc。
            </summary>
            <param name="func"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcFunctionCaller.Run(Gnsser.Interoperation.Teqc.TeqcOption)">
            <summary>
            运行命令选项。
            这是比较底层的调用，常常用于测试，推荐采用更高层次的方法.
            </summary>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Interoperation.Teqc.TeqcOption">
            <summary>
            TEQC 的参数选项。
            输入指定的功能，按照指定设计生成命令参数。
            </summary>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcOption.#ctor(Gnsser.Interoperation.Teqc.TeqcFunction,System.String[])">
            <summary>
            构造
            </summary>
            <param name="func"></param>
            <param name="files"></param>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcOption.FunctionToParam(Gnsser.Interoperation.Teqc.TeqcFunction)">
            <summary>
            将功能转换为参数。
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Interoperation.Teqc.TeqcOption.ToString">
            <summary>
            转换成 TEQC 命令。
            </summary>
            <returns></returns>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcOption.inFiles">
            <summary>
            输入文件
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcOption.outFiles">
            <summary>
            输出文件，与输入文件相对。
            </summary>
        </member>
        <member name="F:Gnsser.Interoperation.Teqc.TeqcOption.resultFile">
            <summary>
            运行输出文件
            </summary>
        </member>
        <member name="T:Gnsser.IonoFreeNetDoubleDifferResultReader">
            <summary>
            无电离层双差结果转换
            </summary>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.ReadToEpochStorage(System.String[],System.Boolean)">
            <summary>
            读取到历元存储对象
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.ReadToEpochStorage(Geo.ObjectTableManager)">
            <summary>
            读取到历元存储对象
            </summary>
            <param name="tables"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.ReadAmbiResult(System.String[],System.Boolean,System.Boolean,System.Double)">
            <summary>
            读取模糊度
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <param name="isInLenthOrCycle"></param>
            <param name="waveLen">如果设为周，则必须设定波长</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.ReadAmbiResultInCycle(System.String[],System.Boolean)">
            <summary>
            读取PPP模糊度结果，单位周，默认以GPS L1载波长度量。
            </summary>
            <param name="inputPathes">PPP文件路径</param>
            <param name="isRemoveCsPrn">是否移除周跳卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.ReadAmbiResultInDefaultUnit(System.String[],System.Boolean)">
            <summary>
            读取模糊度结果,单位：米
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IonoFreeNetDoubleDifferResultReader.RemoveCycleSlipedSat(Geo.ObjectTableManager)">
            <summary>
            移除周跳卫星结果
            </summary>
            <param name="smartTalbes"></param>
        </member>
        <member name="T:Gnsser.GnssSurveyNet">
            <summary>
            GNSS时段网
            </summary>
        </member>
        <member name="P:Gnsser.GnssSurveyNet.TimePeriod">
            <summary>
            共有时段
            </summary>
        </member>
        <member name="M:Gnsser.GnssSurveyNet.GetObsFileInfos">
            <summary>
            获取所有的观测文件
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsFilePeriodDivider">
            <summary>
            观测文件时段分组
            </summary>
        </member>
        <member name="M:Gnsser.ObsFilePeriodDivider.#ctor(System.String,System.Double,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="outputDirectory"></param>
            <param name="MinPhaseSpanMinutes"></param>
            <param name="SubDirectory"></param>
            <param name="NetName"></param>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.IsMoveTo">
            <summary>
            是否移动到目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.NetName">
            <summary>
            网络名称前缀
            </summary>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.SubDirectory">
            <summary>
            子目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.MinPhaseSpanMinutes">
            <summary>
            最小观测时段， 时段的区分，分钟
            </summary>
        </member>
        <member name="P:Gnsser.ObsFilePeriodDivider.Result">
            <summary>
            结果
            </summary>
        </member>
        <member name="M:Gnsser.ObsFilePeriodDivider.CopyToNetDirectory(System.Collections.Generic.Dictionary{Geo.Times.TimePeriod,System.Collections.Generic.List{System.String}})">
            <summary>
            复制到平差网目录
            </summary>
            <param name="grouped"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFilePeriodDivider.BuildGroupNetName(System.Int32,Geo.Times.Time)">
            <summary>
            构建网名
            </summary>
            <param name="i"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFilePeriodDivider.TimePeriodGroup(System.String[],System.Double)">
            <summary>
            时段分组
            </summary>
            <param name="inputs"></param>
            <param name="MinPhaseSpanMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsFilePeriodDivider.TimePeriodGroup(System.Collections.Generic.List{Gnsser.ObsSiteInfo},System.Double)">
            <summary>
            时段分组
            </summary>
            <param name="sites"></param>
            <param name="MinPhaseSpanMinutes"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TotalStationResultFile">
            <summary>
            全站仪文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.DirectionResults">
            <summary>
            方向结果
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.DistanceResults">
            <summary>
            距离平差结果
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.CombinedResults">
            <summary>
            组合平差结果
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.ApproxCoords">
            <summary>
            近似坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultFile.AdjustCoordResults">
            <summary>
            平差结果
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.GetApproxTable">
            <summary>
            近似坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.GetDirectionTable">
            <summary>
            方向平差结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.GetDistanceTable">
            <summary>
            距离平差结果
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.GetCoordTable">
            <summary>
            平差坐标及其精度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultFile.GetCombinedTable">
            <summary>
            网点间边长、方位角
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TotalStationDirectionResult">
            <summary>
            方向结果
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationDirectionResult.#ctor(Gnsser.GnssBaseLineName)">
            <summary>
            构造函数
            </summary>
            <param name="LineName"></param>
        </member>
        <member name="P:Gnsser.Data.TotalStationDirectionResult.AdjustDms">
             <summary>
            平差结果 度分秒格式
             </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDirectionResult.MeasureDms">
             <summary>
            测量结果 度分秒格式
             </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationDirectionResult.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TotalStationDistanceResult">
            <summary>
            距离平差结果
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationDistanceResult.#ctor(Gnsser.GnssBaseLineName)">
            <summary>
            构造函数
            </summary>
            <param name="LineName"></param>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.LineName">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.Type">
            <summary>
            L S 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.Ri">
            <summary>
            RI 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.VSec">
            <summary>
             V(sec) 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.MSec">
            <summary>
            M(sec)
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.MeasureValue">
            <summary>
            测量结果
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationDistanceResult.AdjustValue">
            <summary>
            平差结果
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationDistanceResult.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TotalStationAdjustCoordResult">
            <summary>
            平差结果
            </summary>
        </member>
        <member name="T:Gnsser.Data.TotalStationCombinedResult">
            <summary>
            网点间边长、方位角及其相对精度
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationCombinedResult.#ctor(Gnsser.GnssBaseLineName)">
            <summary>
            构造函数
            </summary>
            <param name="LineName"></param>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.LineName">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.Azimuth">
            <summary>
            A 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.AzimuthDMS">
            <summary>
            A 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.MA">
            <summary>
             V(sec) 
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.Distance">
            <summary>
            M(sec)
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.MS">
            <summary>
            MS
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.DisPerMs">
            <summary>
            DisPerMs
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.E">
            <summary>
            E
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.F">
            <summary>
            F
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationCombinedResult.T">
            <summary>
            T
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationCombinedResult.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TotalStationResultReader">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.TotalStationResultReader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Data.TotalStationResultReader.Read">
            <summary>
            读取文件
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.LgoAscBaseLineFileWriter">
            <summary>
            文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLineFileWriter.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileWriter.ToString(Geo.Coordinates.XYZ,System.Int32,System.Int32)">
            <summary>
            转换为字符串,保证有个空格
            </summary>
            <param name="xyz"></param>
            <param name="itemWidth"></param>
            <param name="fractionCount"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.LgoAscBaseLineFileReader">
            <summary>
            文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLineFileReader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.Read">
            <summary>
            读取文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParseHeightOffset(System.String)">
            <summary>
            偏移
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParseEpoch(System.String)">
            <summary>
            历元解析
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParseErrorEllipse(System.String)">
            <summary>
            Elements of absolute error ellipse 
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParseCovaMatrix(System.String,System.Double@)">
            <summary>
            对称矩阵，第一个为单位权中误差， 3*3 .
            转换为方差阵返回。
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParsePoint(System.String)">
            <summary>
            解析坐标
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.ParseNamedXyz(System.String)">
            <summary>
            4 conponents
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.LgoAscBaseLineFileReader.LoadHeader">
            <summary>
            载入头部信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.BaseLineFileConverter">
             <summary>
            基线转换器
             https://surveyequipment.com/assets/index/download/id/221/ 
             </summary>
        </member>
        <member name="M:Gnsser.Data.BaseLineFileConverter.Build(Gnsser.BaseLineNet)">
            <summary>
            构建
            </summary>
            <param name="net"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.MultiEpochLgoAscBaseLineFile">
            <summary>
            多历元
            </summary>
        </member>
        <member name="P:Gnsser.Data.MultiEpochLgoAscBaseLineFile.Header">
            <summary>
            头部文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.MultiEpochLgoAscBaseLineFile.GetBaseLineNetManager">
            <summary>
            多时段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.MultiEpochLgoAscBaseLineFile.GetEstimatedBaselines">
            <summary>
            提取网
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.EpochLgoAscBaseLine">
            <summary>
            文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.EpochLgoAscBaseLine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.EpochLgoAscBaseLine.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.EpochLgoAscBaseLine.Coords">
            <summary>
            坐标信息集合
            </summary>
        </member>
        <member name="P:Gnsser.Data.EpochLgoAscBaseLine.BaseLines">
            <summary>
            基线信息集合
            </summary>
        </member>
        <member name="M:Gnsser.Data.EpochLgoAscBaseLine.GetBaseLineNet">
            <summary>
            提取网
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.LgoAscHeader">
            <summary>
            There are a maximum of 4 header lines possible. The first two header lines are compulsory, the last two are 
            optional for the input file but are always included in the output file unless the option to omit them has been selected.
            The sequence of the header lines has to be strictly observed. 
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscHeader.Unit">
            <summary>
            m: for meter,        
            fts: for U.S.survey foot, 
            fti: for international foot
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscHeader.CoordinateType">
            <summary>
            Coordinate type
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscHeader.ReferenceEllipsoid">
            <summary>
            Reference ellipsoid
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscHeader.ProjectionSet">
            <summary>
            Projection set
            </summary>
        </member>
        <member name="T:Gnsser.Data.LgoAscPoint">
            <summary>
            Each point must contain the line with the coordinate information. In addition, more information like thematical 
            coding and the variance covariance information can be attached with additional lines.These lines have to follow
            immediately the first line of the point and coordinate information. 
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscPoint.Epoch">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscPoint.ErrorEllipse">
            <summary>
            椭球差
            </summary>
        </member>
        <member name="T:Gnsser.Data.LgoAscBaseLine">
            <summary>
            基线
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.LineName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.Epoch">
            <summary>
            历元
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.AntennaBiasOfRef">
            <summary>
            参考站天线偏差
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.AntennaBiasOfRov">
            <summary>
            流动站天线偏差
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.Baseline">
            <summary>
            基线数据
            </summary>
        </member>
        <member name="P:Gnsser.Data.LgoAscBaseLine.ErrorEllipse">
            <summary>
            椭球差
            </summary>
        </member>
        <member name="T:Gnsser.Data.HeightOffset">
            <summary>
            高度和偏差
            </summary>
        </member>
        <member name="T:Gnsser.Data.LgoAscLable">
            <summary>
            LGO 标识信息
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ProjectionSet">
            <summary>
            Projection set
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ReferenceEllipsoid">
            <summary>
            Reference ellipsoid
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.CoordinateType">
            <summary>
            Coordinate type
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.Unit">
            <summary>
            Unit
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.HeaderLines">
            <summary>
            Header lines
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.PointAndCoordinateInformation">
            <summary>
            Point and coordinate information
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ConvergenceAngleAndScaleFactorInformation">
            <summary>
            Convergence angle and scale factor information
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.VarianceCovarianceOfPoint">
            <summary>
            Variance-Covariance information
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ErrorEllipseAbsolute">
            <summary>
            Error Ellipse (absolute)
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.Reliability">
            <summary>
             Reliability 
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.Code">
            <summary>
             Code 
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.CodeDescription">
            <summary>
            Code Description
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.CodeGroup">
            <summary>
            Code Group
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.Attribute">
            <summary>
            Attribute
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.Annotations">
            <summary>
             Annotations
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.FreeCode">
            <summary>
            Free Code
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.FreeCodeDescription">
            <summary>
            Free Code Description
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.FreeCodeInformationRecord">
            <summary>
            Free Code Information Record
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.FieldNo">
            <summary>
            Field Note
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ReferencePointOfBaseline">
            <summary>
            Individual baseline information (Reference point of baseline and its coordinates)
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.BaselineVectorComponents">
            <summary>
            Baseline vector components
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.VarianceCovarianceOfBaseLine">
            <summary>
            Variance-covariance information for baseline vector
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.ReferenceAntennaHeightAndOffset">
            <summary>
            Reference antenna height and offset
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.RoverAntennaHeightAndOffset">
            <summary>
            Rover antenna height and offset
            </summary>
        </member>
        <member name="F:Gnsser.Data.LgoAscLable.DateTimeOfFirstCommonEpoch">
            <summary>
            Date and time of first common epoch
            </summary>
        </member>
        <member name="T:Gnsser.Data.IgsProductFileExtractor">
            <summary>
            IGS 文件产品提取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.TimeIntervalSeconds">
            <summary>
            时间间隔，决定是时(3600)、天(86400)、还是周
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.IgsProductUrlPathBuilder">
            <summary>
            IGS URL地址生成器
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.IgsProductSourceType">
            <summary>
            IGS 产品类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.Option">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.InputFileManager">
            <summary>
            文件路径管理器
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileExtractor.IgsProductLocalPathBuilder">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.GetLocalFilePathes">
            <summary>
            获取本地文件路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.CreateSatTypeBasedServices(Gnsser.SatelliteType)">
            <summary>
            建立按天组织的服务。一个系统类型一个服务。
            如果失败，则网络获取一次。
            </summary>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.GetFiles(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            根据类型和历元，按照给定的文件命名规则，读取本地文件
            </summary>
            <param name="satType">卫星类型</param>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.GetIgsProductLocalPathes(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            获取本地库的IGS产品路径,如果指定了唯一数据源，则会只返回该数据源，否则，返回全部。
            自动过滤并删除大小为0的文件。
            </summary>
            <param name="satType"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileExtractor.DownloadProduct(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            下载IGS产品。并返回成功后的本地路径。
            </summary>
            <param name="gpsTime"></param>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsNavEphemerisSourceProvider">
             <summary>
            全局自动导航星历服务
             </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsNavEphemerisSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            全局自动导航星历服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisSourceProvider.BuildFileBufferKey(System.String)">
            <summary>
            构建文件缓存关键字
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:Gnsser.Data.IgsKlobucharIonoSourceProvider">
             <summary>
            全局自动 Klobuchar 电离层服务
             </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsKlobucharIonoSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoSourceProvider.BuildFileBufferKey(System.String)">
            <summary>
            构建文件缓存关键字
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:Gnsser.Data.IgsCodeHarmoIonoSourceProvider">
            <summary>
            根据输入设置，提供连续的球谐函数电离层服务
            </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsCodeHarmoIonoSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoSourceProvider.BuildFileBufferKey(System.String)">
            <summary>
            构建文件缓存关键字
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:Gnsser.Data.IgsNavEphemerisAutoProvider">
            <summary>
             IGS 导航星历服务提供器
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsNavEphemerisAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsKlobucharIonoServiceAutoProvider">
            <summary>
             IGS Klobuchar 电离层服务提供器
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsKlobucharIonoServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsCodeHarmoIonoServiceAutoProvider">
            <summary>
            IGS Code 球谐函数服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsCodeHarmoIonoServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IIonoService">
            <summary>
            电离层文件服务接口
            </summary>
        </member>
        <member name="P:Gnsser.Data.IIonoService.HeightOfModel">
            <summary>
            模型高度
            </summary>
        </member>
        <member name="M:Gnsser.Data.IIonoService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取倾斜延迟距离
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <param name="freq">频率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IIonoService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取垂直方向电子数量
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            计算倾斜方向的延迟电子数量
            </summary>
            <param name="receiverTime"></param>
            <param name="geocentricLonLat"></param>
            <param name="elevation"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IGridIonoFileService">
            <summary>
            电离层文件服务接口
            </summary>
        </member>
        <member name="M:Gnsser.Data.IGridIonoFileService.GetDcb(Geo.Times.Time,System.String)">
            <summary>
            获取当天测站DCB
            </summary>
            <param name="time"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IGridIonoFileService.GetDcb(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取当天卫星DCB
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicFile">
            <summary>
            电离层球谐函数文件。
            TEC 单位为TECU，1 TECU= 1E16 个电子
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFile.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFile.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFile.TimePeriod">
            <summary>
            时间范围读完后赋值
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFile.Add(Gnsser.Data.IonoHarmonicSection)">
            <summary>
            增加一个
            </summary>
            <param name="section"></param>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicHeaderLabel">
            <summary>
            电离层头文件， 字符串
            </summary>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicHeader">
            <summary>
            电离层头文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicHeader.#ctor">
            <summary>
            电离层头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicHeader.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicSection">
            <summary>
            电离层球谐函数数据
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicSection.#ctor">
            <summary>
            构造函数,关键字为纬度，记录值为经度和数值
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicSection.Header">
            <summary>
            头部
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicSection.Time">
            <summary>
            当前历元
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicSection.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicReader">
            <summary>
            电离层 记录部分，不适用于遍历，更适用于一次性读取。
            遍历的话，先全读取数据部分，遍历的只是最后RMS部分。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicReader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicReader.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.ReadHeader(System.IO.StreamReader)">
            <summary>
             读取RINEX文件的头文件。
            </summary>
            <param name="reader">数据流</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.ReadAll(System.Boolean)">
            <summary>
            读取文件
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.ReadSection(System.String,System.IO.StreamReader)">
            <summary>
            读取历元对象
            </summary> 
            <param name="line"></param>
            <param name="StreamReader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.IsStartOfRecord(System.String)">
            <summary>
            是否是记录的开始，下一条即数字
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.GetValueString(System.String)">
            <summary>
            如果没有，返回空字符串
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicReader.ReadNextNoNullLine(System.IO.StreamReader)">
            <summary>
            读取下一行有内容的行，非空行，空白行。
            如果返回“”，表示已经结束。
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoHarmonicFileService">
            <summary>
            电离层文件的读取与服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.#ctor(Gnsser.Data.IonoHarmonicFile)">
            <summary>
            以文件初始化
            </summary>
            <param name="IonoHarmonicFile"></param>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.Init">
            <summary>
            初始化插值器
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.SetFile(Gnsser.Data.IonoHarmonicFile)">
            <summary>
            修改数据源，重新初始化。
            </summary>
            <param name="IonoHarmonicFile"></param>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFileService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFileService.IonoHarmonicFile">
            <summary>
              文件 
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFileService.TimePeriod">
            <summary>
            有效服务时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHarmonicFileService.HeightOfModel">
            <summary>
            电离层薄层模型的高度 450 000 M
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            垂直方向的电子数量，获取服务，为原始计算和拟合数据。单位 1e16.
            失败返回 NaN
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg">以度为单位的</param>
            <returns>失败返回 NaN</returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetValue(Geo.Times.Time,Geo.Coordinates.LonLat,Gnsser.Data.IonoHarmonicSection)">
            <summary>
            垂直方向的电子数量
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取倾斜延迟距离
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <param name="freq">频率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取斜距方向
            </summary>
            <param name="time">时间</param>
            <param name="geocentricLonLatOfIntersection">穿刺点球坐标（经纬度，单位：度）</param>
            <param name="satElevationOfSiteDeg">测站的卫星高度角，单位：度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetSlopeLen(Geo.Times.Time,Geo.Coordinates.GeoCoord,System.Double,System.Double)">
            <summary>
            斜距影响
            </summary>
            <param name="time"></param>
            <param name="geoCoordOfIntersection">电离层坐标</param>
            <param name="satElevationDeg"></param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetIonoDelayRange(System.Double,System.Double)">
            <summary>
            电离层对于伪距的延迟距离
            </summary>
            <param name="tec">单位 1e16.</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetSatZenithAngleOfPuncturePointInSphereRad(System.Double,System.Double)">
            <summary>
            计算电离层穿刺点到测站与地球球心的夹角,也是穿刺点的卫星天顶距,返回弧度
            </summary>
            <param name="satElevationOfSiteDeg"></param>
            <param name="HeightOfModel"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetHarmounicValue(System.Double,System.Double,System.Int32)">
            <summary>
            计算球谐函数值
            </summary>
            <param name="lonOfSE"></param>
            <param name="sinlatRad"></param>
            <param name="maxDegreeAndOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetHarmounicValue(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            计算球谐函数值
            </summary>
            <param name="lonOfSE"></param>
            <param name="sinlatRad"></param>
            <param name="maxDegree"></param>
            <param name="maxOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.NormalizationFunction(System.Int32,System.Int32,System.Double)">
            <summary>
            The normalization function Λ
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="kronecherDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.Factorial(System.Int32)">
            <summary>
            阶乘
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoHarmonicFileService.GetItemValue(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            计算叠加项
            </summary>
            <param name="Cnm"></param>
            <param name="Snm"></param>
            <param name="lambda">rad</param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Rinex3FileName">
            <summary>
            RINEX 3 的文件名称
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Rinex3FileName.#ctor(System.String)">
            <summary>
            解析名称
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.Rinex3FileName.#ctor">
            <summary>
            默认构造函数，初始化了时间，间隔和文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.StationName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.ContentType">
            <summary>
            1 Character – defining the data source
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.Interval">
            <summary>
            3 Characters - defining the intended (nominal)file period
            string Period = "01D";
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.Period">
            <summary>
            3 Characters - defining the intended   (nominal) file period
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.ContryCode">
            <summary>
            USA CAN etc
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.DataSource">
            <summary>
            1 Character – defining the data source
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.FileFormat">
            <summary>
            3 Characters –   defining the file format
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.Compression">
            <summary>
            Char. - defining the compression method
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.IsCompression">
            <summary>
            是否为压缩文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.StartTime">
            <summary>
            起始时间 YYYYDDDHHMM
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Rinex3FileName.Name">
            <summary>
            起始时间 YYYYDDDHHMM
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Rinex3FileName.ToString">
            <summary>
            构建
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Rinex3FileName.Parse(System.String)">
            <summary>
            解析
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileUtil">
            <summary>
             O文件工具
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileUtil.ReadFile(System.String)">
            <summary>
            读取数据
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFileWriter">
            <summary>
            IGS 钟差文件输出
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.#ctor(System.String,Gnsser.Data.Rinex.ClockFileHeader)">
            <summary>
            构造函数。
            </summary>
            <param name="filePath">文件路径</param>
            <param name="ClockFileHeader">头部信息</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.#ctor(System.String,Gnsser.Data.Rinex.ClockFile)">
            <summary>
            clk文件输出
            </summary>
            <param name="filePath"></param>
            <param name="ClockFile"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileWriter.ClockFileHeader">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileWriter.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileWriter.StringBuilder">
            <summary>
            数据流
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.SaveToFile">
            <summary>
            保存到文件，并清空缓存。此处采用追加的方式保存，可以多次调用此方法。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.BuidSp3V3String(Gnsser.Data.Rinex.ClockFile)">
            <summary>
            将指定的clk转换成 RINEX V3.0字符串。
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.BuildHeaderString(Gnsser.Data.Rinex.ClockFileHeader,System.Double)">
            <summary>
            构建头部字符串。
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.BuildClkRecord(Gnsser.Data.Rinex.AtomicClock)">
            <summary>
            构建历元数据
            </summary>
            <param name="AtomicClock"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileWriter.WriteFile(System.String,Gnsser.Data.Rinex.ClockFile)">
            <summary>
            便捷写入方法
            </summary>
            <param name="path"></param>
            <param name="file"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3FileCombiner">
            <summary>
            SP3文件组合器，多个组成一个。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3FileCombiner.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3FileCombiner.Sp3Files">
            <summary>
            SP3 文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3FileCombiner.SouceName">
            <summary>
            数据源名称
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3FileCombiner.Add(Gnsser.Data.Rinex.Sp3File)">
            <summary>
            添加一个
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3FileCombiner.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SatEphemeris">
            <summary>
             单独记录一颗卫星的星历列表，与SP3格式无关
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatEphemeris.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SatEphemeris.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SatEphemeris.Interval">
            <summary>
            采样间隔，单位：秒
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.CombinedSp3FileEphService">
             <summary>
            多文件多系统组合的星历服务
             </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.#ctor(Gnsser.Data.SatEphemerisCollection,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="source"></param>
            <param name="MinSequentialSatCount"></param>
            <param name="MaxBreakingCount">允许星历断裂次数</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.MaxBreakingCount">
            <summary>
            允许星历断裂的最大次数（采样率为间隔）
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.Init">
            <summary>
            初始化插值器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.SetSatEphemerisCollection(Gnsser.Data.SatEphemerisCollection)">
            <summary>
            修改数据源，重新初始化。
            </summary>
            <param name="Sp3File"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.EphemerisManager">
            <summary>
            原始SP3星历存储。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.SatEphemerisCollection">
            <summary>
            SP3 文件 
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.MinSequentialSatCount">
            <summary>
            卫星的最小连续数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.Order">
            <summary>
            拟合阶数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.TimePeriod">
            <summary>
            有效时段，缓冲不易设置太大，如果设置2倍的话，会造成在星历拼接的时段结果不稳定。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.SatCount">
            <summary>
            卫星数量，通过头文件获取
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.Prns">
            <summary>
            所有的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.CombinedSp3FileEphService.WarnedPrns">
             <summary>
            一颗卫星只警告一次，避免卡顿
             </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取文件中存储的原始星历信息。
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.CombinedSp3FileEphService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            卫星是否可用，进行简单的判断。
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3Info">
            <summary>
            Sp3Info用于存储SP3文件的元数据信息，方便星历快速获取
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.MixedNavFile">
            <summary>
            RINEX GnssNavFile 导航文件。
            以导航星历参数表达的导航文件，包括北斗、GPS、伽利略。
            一个类的实例代表一个文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFile.Header">
            <summary>
            导航头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFile.Prns">
            <summary>
            卫星编号集合
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFile.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFile.StartTime">
            <summary>
            开始时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFile.EndTime">
            <summary>
            结束时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFile.Add(Gnsser.EphemerisParam)">
            <summary>
            添加星历参数,重复星历将失败。
            </summary>
            <param name="EphemerisParam"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFile.Dispose">
            <summary>
            清空，释放资源
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.MixedNavFileReader">
            <summary>
            Rinex 混合导航文件读取器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileReader.#ctor(System.String)">
            <summary>
            初始化一个读取器。
            </summary>
            <param name="fileName">文件路径</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileReader.RinexFileName">
            <summary>
            当前文件路径。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileReader.ReadGnssNavFlie">
            <summary>
            GNSS导航文件的读取
            </summary>
            <param name="navFilePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.MixedNavFileEphService">
            <summary>
            单导航文件星历服务。导航文件预先加载进来。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.#ctor(Gnsser.Data.Rinex.MixedNavFile)">
            <summary>
            构造函数
            </summary>
            <param name="NavFile"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileEphService.NavFile">
            <summary>
            导航星历文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileEphService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97.
            导航文件不需要这么精确
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileEphService.TimePeriod">
            <summary>
            时间段
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileEphService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MixedNavFileEphService.Prns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            返回指定时间段，文件记录的星历信息。
            需要计算，计算太多是否浪费资源？
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取卫星位置
            </summary>
            <param name="prn"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MixedNavFileEphService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            指定时刻卫星是否健康可用。
            </summary>
            <param name="prn"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.MemoRinexFileObsDataSource">
            <summary>
            以数据流方式传递的观测数据源。
            这种数据源比较节约内存，但是只能从起始位置一步一步的往下读取数据，不能获知整个数据流大小。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.#ctor(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            以单观测文件路径构建。
            </summary>
            <param name="ObsFile">文件</param> 
        </member>
        <member name="P:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.EpochInfoBuilder">
            <summary>
            标准RINEX对象创建EpochInformation
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.Reset">
            <summary>
            重置，标记退回到 0.
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.Get(Geo.Times.Time,System.Double)">
            <summary>
            获取指定时刻的观测数据
            </summary>
            <param name="gpsTime"></param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.GetNexts(System.Int32)">
            <summary>
            获取下面的观测数据，当前除外
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MemoRinexFileObsDataSource.MoveNext">
            <summary>
            向下移动
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3AllReader">
            <summary>
            Sp3 记录部分。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3AllReader.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3AllReader.FilterdPrn">
            <summary>
            过滤PRN，，只读取这个，可以写为数组？？或增加系统类型？？2016.03.06
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.ReadAll">
            <summary>
            读取文件
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.TryGetStartTime">
            <summary>
            从文件开始获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.TryGetEndTime">
            <summary>
            从文件末尾获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.MoveNext">
            <summary>
            移动到下一个，尝试解析，如果到末尾了，则返回false
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3AllReader.RecordHeadSymbol">
            <summary>
            Sp3 LINE 23 (epoch header clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3AllReader.PositionClockSymbol">
            <summary>
            Sp3 LINE 24 (position and clock clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3AllReader.VelocityClockSymbol">
            <summary>
            Sp3 LINE 25 (velocity and clock clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3AllReader.EphemerisPosition">
            <summary>
            double add sp3为#cV格式时的单颗星星历内容第二行首两位字符
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3AllReader.EphemerisVelocity">
            <summary>
            double add sp3为#cV格式时的单颗星星历内容第四行首两位字符
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.ReadSection(Gnsser.Data.Rinex.Sp3Header,System.IO.StreamReader,System.String,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            读取 SP3 
            </summary>
            <param name="header"></param>
            <param name="r"></param>
            <param name="satNum">是否读取指定卫星的值</param>
            <param name="availableOnly">是否只返回可用的记录</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.ParseTime(System.String)">
            <summary>
            解析时间
            </summary>
            <param name="firstLine"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3AllReader.IsEpochSectionFirstLine(System.String)">
            <summary>
            判断是否是起始行
            </summary>
            <param name="firstLine"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsFileReplacer">
            <summary>
            Rinex 观测文件读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReplacer.#ctor(System.String)">
            <summary>
            初始化一个读取器。
            </summary>
            <param name="fileName">文件路径</param>
            <param name="IsReadContent">是否读取内容，有的只是概略统计，则不需要读取内容</param>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockType">
            <summary>
            原子钟载体类型（接收机或卫星）。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.AtomicClock">
            <summary>
            原子钟钟差领域类，参照钟差文件模型设计。文件类型。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AtomicClock.Name">
            <summary>
            钟的名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AtomicClock.ClockType">
            <summary>
            钟的类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AtomicClock.StateCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.CompareTo(Gnsser.Data.Rinex.AtomicClock)">
            <summary>
            比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.Equals(System.Object)">
            <summary>
            等于否
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.GetTabTitles">
            <summary>
            已制表位分割的标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.AtomicClock.GetTabValues">
            <summary>
            表行内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockHeaderLabel">
            <summary>
            Rinex 头文件标签。
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.ClockHeaderLabel.RINEX_VERSION_TYPE">
            <summary>
            The "RINEX VERSION / TYPE" clk must be the prevObj clk in coefficient fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.ClockHeaderLabel.IONOSPHERIC_CORR">
            <summary>
            Ionospheric correction parameters
            - Correction type
            GAL = Galileo ai0 – ai2
            GPSA = GPS alpha0 - alpha3
            GPSB = GPS beta0 - beta3
            - Parameters
            GPS: alpha0-alpha3 or beta0-beta3 |
            GAL: ai0, ai1, ai2, zero
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.ClockHeaderLabel.TIME_SYSTEM_CORR">
             <summary>
             Corrections to transform the system time | |*
            to UTC or other time systems | |
            - Correction type | A4,1X, |
            GAUT = GAL to UTC a0, a1 | |
            GPUT = GPS to UTC a0, a1 | |
            SBUT = SBAS to UTC a0, a1 | |
            GLUT = GLO to UTC a0=TauC, a1=zero | |
            GPGA = GPS to GAL a0=A0G, a1=A1G | |
            GLGP = GLO to GPS a0=TauGPS, a1=zero | |
            - a0,a1 Coefficients of 1-deg polynomial | D17.10, |
            (a0 sec, a1 sec/sec) | D16.9, |
            CORR(s) = a0 + a1*DELTAT | |
            - TProduct Reference time for polynomial | I7, |
            (Fraction into GPS/GAL week) | |
            - W Reference week number | I5, |
            (GPS/GAL week, continuous number) | |
            TProduct and W zero for GLONASS. | |
            - S EGNOS, WAAS, or MSAS ... | 1X,A5,1X |
            (left-justified) | |
            Derived from MT17 service provider. | |
            If not known: Use Snn with | |
            nn = PRN-100 of satellite | |
            broadcasting the MT12 | |
            - U UTC Identifier (0 if unknown) | I2,1X |
            1=UTC(NIST), 2=UTC(USNO), 3=UTC(SU), | |
            4=UTC(BIPM), 5=UTC(Europe Lab), | |
            6=UTC(CRL), >6 = not assigned yet | |
            S and U for SBAS only. |
             </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFile">
            <summary>
             Rinex 钟差文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile.GetSatClockCollection">
            <summary>
            生成集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SimpleClockFile">
            <summary>
             Rinex 钟差文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SimpleClockFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SimpleClockFile.GetSatClockCollection">
            <summary>
            生成集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFile`1">
            <summary>
            Rinex 钟差文件 
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.Header">
            <summary>
            头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.Interval">
            <summary>
            钟采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.ClockCount">
            <summary>
            钟的数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.Names">
            <summary>
            所有的名称列表。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.AllItems">
            <summary>
            所有的钟差列表
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFile`1.TimePeriod">
            <summary>
            有效时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.GetClockItems(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
             从原始文件中筛选
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.GetClockItems(System.String,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            从原始文件中筛选
            </summary>
            <param name="nameOrPrn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.GetClockItems(System.String)">
            <summary>
            返回指定列表引用,若无则创建，并关联。
            </summary>
            <param name="nameOrPrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.GetSatClockCollection">
            <summary>
            生成集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFile`1.RemoveSiteColcks">
            <summary>
            移除测站钟差，为文件瘦身
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFileHeader">
            <summary>
            Rinex 观测文件头文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileHeader.#ctor">
            <summary>
            Rinex 头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileHeader.SourceName">
            <summary>
            数据源名称，通常为文件名称，如igs19921.clk
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileHeader.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileHeader.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileHeader.SatelliteTypes">
             <summary>
            从prns中提取
             </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileHeader.ReadText(System.String)">
            <summary>
            直接返回头文件原纪录。
            </summary>
            <param name="rinexFileName">RINEX 文件路径</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SimpleClockFileReader">
            <summary>
            IGS 简易钟差文件读取
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SimpleClockFileReader.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="IsSkipSite"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SimpleClockFileReader.ReadFile(System.String)">
            <summary>
            整体读取，可以精确探知时刻。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SimpleClockFileReader.ParseRinexLine(System.String)">
            <summary>
            AR AMC2 2012 12 30 00 00  0.000000  2    0.350317686691E-08  0.112840527013E-09  
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFileReader">
            <summary>
            IGS 钟差文件读取
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="IsSkipSite"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader.ReadFile(System.String,System.Boolean)">
            <summary>
            快捷访问方法
            </summary>
            <param name="path"></param>
            <param name="IsSkipSite">是否忽略测站</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader.ReadFile(System.String)">
            <summary>
            整体读取，可以精确探知时刻。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader.ParseRinexLine(System.String)">
            <summary>
            AR AMC2 2012 12 30 00 00  0.000000  2    0.350317686691E-08  0.112840527013E-09  
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockFileReader`2">
            <summary>
            IGS 钟差文件读取
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="IsSkipSite"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.ReadAll">
            <summary>
            读取原子钟文件。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileReader`2.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileReader`2.IsSkipSite">
            <summary>
            是否略过测站钟差，这样可以节约内存
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockFileReader`2.Interval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.ReadFile(System.String)">
            <summary>
            整体读取，可以精确探知时刻。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.ParseRinexLine(System.String)">
            <summary>
            AR AMC2 2012 12 30 00 00  0.000000  2    0.350317686691E-08  0.112840527013E-09  
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.ReadHeader(System.String)">
            <summary>
            读取RINEX文件的头文件。
            </summary>
            <param name="rinexFileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.ParseClockSolnStation(System.String)">
            <summary>
            AMC2 40472S004           -1248596310 -4819428207  3976505962
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.TryGetStartTime">
            <summary>
            从文件开始获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.TryGetEndTime">
            <summary>
            从文件末尾获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.MoveNext">
            <summary>
            移动到下一个，错误则返回false
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ClockFileReader`2.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ClockSolnStation">
            <summary>
            钟差解算站。
            出现在钟差头部文件中。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockSolnStation.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockSolnStation.Number">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockSolnStation.XYZ">
            <summary>
            空间直角坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ClockSolnStation.GeoCoord">
            <summary>
            大地坐标
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.AbstractObservationStream">
            <summary>
            顶层观测数据源抽象类。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.AbstractObservationStream.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AbstractObservationStream.ObsInfo">
            <summary>
            观测概略信息，
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AbstractObservationStream.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.AbstractObservationStream.Get(Geo.Times.Time,System.Double)">
            <summary>
            获取,顾及了舍入时差
            </summary>
            <param name="gpsTime"></param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.AbstractObservationStream.Path">
            <summary>
            观测数据路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.AbstractObservationStream.NavPath">
            <summary>
            导航文件路径
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexFileNameBuilder">
            <summary>
            序列文件。连续的文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.#ctor(System.Double)">
            <summary>
            默认构造函数，初始化了时间，间隔和文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.TimeResolution">
            <summary>
            时间分辨率
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.StationName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.RinexFileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetVersion(System.Double)">
            <summary>
            设置版本
            </summary>
            <param name="Version"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetTimeResolution(Geo.Times.TimeUnit)">
            <summary>
            设置分辨率
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetTime(Geo.Times.Time)">
            <summary>
            设置时间
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetSationName(System.String)">
            <summary>
            设置测站名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetRinexFileType(Gnsser.Data.Rinex.RinexFileType)">
            <summary>
            设置文件类型
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.ContentType">
            <summary>
            1 Character – defining the data source
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.Interval">
            <summary>
            3 Characters - defining the intended (nominal)file period
            string Period = "01D";
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.Period">
            <summary>
            3 Characters - defining the intended   (nominal) file period
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.ContryCode">
            <summary>
            USA CAN etc
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.DataSource">
            <summary>
            1 Character – defining the data source
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.FileFormat">
            <summary>
            3 Characters –   defining the file format
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.Compression">
            <summary>
            Char. - defining the compression method
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileNameBuilder.IsCompression">
            <summary>
            是否为压缩文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetInterval(System.String)">
            <summary>
            设置 
            </summary>
            <param name="Interval"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetContentType(System.String)">
            <summary>
            设置 
            </summary>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetPeriod(System.String)">
            <summary>
            设置 
            </summary>
            <param name="Period"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetContryCode(System.String)">
            <summary>
            设置 
            </summary>
            <param name="ContryCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetDataSource(System.String)">
            <summary>
            设置 
            </summary>
            <param name="DataSource"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetFileFormat(System.String)">
            <summary>
            设置 
            </summary>
            <param name="FileFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetCompression(System.String)">
            <summary>
            设置 
            </summary>
            <param name="Compression"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.SetIsCompression(System.Boolean)">
            <summary>
            设置 
            </summary>
            <param name="IsCompression"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.Build(Geo.Times.Time)">
            <summary>
            构建
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileNameBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.GlonassNavFileWriter">
            <summary>
            Rinex 观测文件读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.#ctor(System.String,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            构造函数。
            </summary>
            <param name="filePath">文件路径</param>
            <param name="NavFileHeader">头部信息</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFileWriter.NavFileHeader">
            <summary>
            导航头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFileWriter.StringBuilder">
            <summary>
            数据流
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.AppendEphemerisParam(Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            添加星历参数
            </summary>
            <param name="para"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFileWriter.LatestNavEphDic">
            <summary>
            存储最新星历信息。不重复存储。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.CheckAndAppendEphemerisParam(Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            检查，如果该星历步存在，则添加星历参数并返回true。
            </summary>
            <param name="para"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.SaveToFile">
            <summary>
            保存到文件，并清空缓存。此处采用追加的方式保存，可以多次调用此方法。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.BuidRinexV3String(Gnsser.Data.Rinex.GlonassNavFile)">
            <summary>
            将指定的导航文件转换成 RINEX V3.0字符串。
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.BuildHeaderString(Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            构建头部字符串。
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.BuildRinexRecordV4(Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            Glonass星历数据构建
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.ReadContentLine(System.IO.StreamReader,System.Collections.Generic.List{System.String})">
            <summary>
            读取并返回 RINEX 内容行。如果有注释行，则读取注释，继续读取，返回新的内容行。
            </summary>
            <param name="r">StreamReader</param>
            <param name="comments">注释</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.IsCommentLine(System.String)">
            <summary>
            判断本行是否是注释行。即，在60列时，具有COMMENT标识。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFileWriter.GetCommenValue(System.String)">
            <summary>
            获取注释行的内容。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.FileInfomation">
            <summary>
            文件信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileInfomation.FilePath">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileInfomation.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileInfomation.CreationProgram">
            <summary>
            创建该文档的程序
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileInfomation.CreationAgence">
            <summary>
            创建该文件的机构
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileInfomation.CreationDate">
            <summary>
            创建该文件的日期
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.EpochRinexObsFileWriterManager">
            <summary>
            多文件写。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EpochRinexObsFileWriterManager.#ctor(System.String,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="directory"></param>
            <param name="Version"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.EpochRinexObsFileWriterManager.Directory">
            <summary>
            目录
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.EpochRinexObsFileWriterManager.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EpochRinexObsFileWriterManager.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.EpochRinexObsFileWriter">
            <summary>
            将 EpochInformation 写为 RINEX
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EpochRinexObsFileWriter.#ctor(System.String,System.Double,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
            <param name="Version"></param>
            <param name="IsUseRangeCorrections">是否使用伪距改正</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.EpochRinexObsFileWriter.Write(Gnsser.Domain.EpochInformation)">
            <summary>
            写一个。
            </summary>
            <param name="epoch"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.EpochRinexObsFileWriter.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileConverter">
            <summary>
            RINEX 格式转换工具 
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileConverter.ToRinex(System.String,System.String,System.Double)">
            <summary>
            转换写入文件。
            </summary>
            <param name="inputPath"></param>
            <param name="outputPath"></param>
            <param name="outVersion"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileConverter.ToRinexV3(System.String,System.String)">
            <summary>
            转换成Gnsser RINEX 3.02 格式。
            </summary>
            <param name="inputPath"></param>
            <param name="outputPath"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileConverter.ToRinexV2(System.String,System.String)">
            <summary>
            转换成Gnsser RINEX 2.11 格式。
            </summary>
            <param name="inputPath"></param>
            <param name="outputPath"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.SingleGlonassNavFileEphService">
            <summary>
            RINEX GLONASS 导航文件。
            一个类的实例代表一个文件。
            纠结的GLONASS导航文件，保留了GPS导航文件的头部，记录方式又和SP3大致相同，但是通常采样率很低。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.#ctor(Gnsser.Data.Rinex.GlonassNavFile)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.NavFile">
            <summary>
            导航文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.StartTime">
            <summary>
            文件记录开始时间
            </summary>
            <remarks>文件记录开始时间.</remarks>
            <value>now</value>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.EndTime">
            <summary>
            文件记录结束时间
            </summary>
            <remarks>文件记录结束时间.</remarks>
            <value>now</value>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.TimePeriod">
            <summary>
            时间段
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            返回指定时间段，文件记录的星历信息。
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.GetEphemerisInfos(System.Collections.Generic.List{Gnsser.Data.Rinex.GlonassNavRecord})">
            <summary>
            转换为通用的 EphemerisInfo 列表。
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleGlonassNavFileEphService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            返回指定时刻卫星的星历信息。
            拟合生成。
            </summary>
            <param name="prn"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SingleParamNavFileEphService">
            <summary>
            单导航文件星历服务。导航文件预先加载进来。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.#ctor(Gnsser.Data.Rinex.ParamNavFile)">
            <summary>
            构造函数
            </summary>
            <param name="NavFile"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.NavFile">
            <summary>
            导航星历文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.TimePeriod">
            <summary>
            时间段
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.SatCount">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleParamNavFileEphService.Prns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            返回指定时间段，文件记录的星历信息。
            需要计算，计算太多是否浪费资源？
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取卫星位置
            </summary>
            <param name="prn"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            指定时刻卫星是否健康可用。
            </summary>
            <param name="prn"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleParamNavFileEphService.GetNearstNavRecord(System.Collections.Generic.List{Gnsser.EphemerisParam},Geo.Times.Time,System.TimeSpan)">
            <summary>
            选择最接近的卫星星历。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileCodeFilterProcesser">
            <summary>
            观测文件处理器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCodeFilterProcesser.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ObsFileCodeFilterProcesser.MaxPercentage">
            <summary>
            最大出勤率，[0-100]
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCodeFilterProcesser.Revise(Gnsser.Data.Rinex.RinexObsFile@)">
            <summary>
            处理过程
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileCountManager">
            <summary>
            观测文件中卫星连续观测时段控制管理器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.#ctor(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            构造函数
            </summary>
            <param name="ObsFile"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.ObsFileCountManager.ObsFile">
            <summary>
            观测文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ObsFileCountManager.SatObsTypeMarkers">
            <summary>
            统计各类型的卫星观测类型出勤率。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.RemoveObservers(System.Double)">
            <summary>
             若某一观测量值出勤率低， 则直接删除该观测量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.RemoveObserversInfo(Gnsser.Data.Rinex.RinexObsFile@,System.Double)">
            <summary>
            返回一个便于显示的字符串。
            </summary>
            <param name="obsFile"></param>
            <param name="maxPercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.RemoveObservers(Gnsser.Data.Rinex.RinexObsFile@,System.Double)">
            <summary>
             若某一观测量值出勤率低， 则直接删除该观测量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.GetObsTypesWithAppearanceLesserThan(Gnsser.Data.Rinex.RinexObsFile@,System.Double)">
            <summary>
            获取出现百分比小于指定值的观测类型。
            </summary>
            <param name="maxPercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileCountManager.GetSatObsTypeMarkers(Gnsser.Data.Rinex.RinexObsFile@)">
            <summary>
            获取文件的类型出入次数
            </summary>
            <param name="ObsFile"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileCountManager.dataItem">
            <summary>
            一颗卫星一个时段的卫星记录
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3Header">
            <summary>
            Sp3 头文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Header.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Header.LineSymbols">
            <summary>
            下标对应行号 － 1.
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Header.LineSymbolsVersionC">
            <summary>
            下标对应行号 － 1.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.SourceName">
            <summary>
            数据源名称，通常为文件名称，如igs19921.sp3
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.VersionId">
             <summary>
            版本号
             </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.P_V_ModeFlag">
            <summary>
            指示是位置坐标还是速度
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.NumberOfEpochs">
            <summary>
            历元数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.DataUsed">
            <summary>
            使用的数据
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.CoordinateSystem">
            <summary>
            坐标系统
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.OrbitType">
            <summary>
            轨道类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.AgencyName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.EndTime">
            <summary>
            计算出的结束时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.GPSWeek">
            <summary>
            GPS 周
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.SecondsOfWeek">
            <summary>
            GPS 周秒
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.EpochInterval">
            <summary>
            单位 S
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.ModJulianDayStart">
            <summary>
            轨道数据首历元儒略日的整数部分。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.FractionalDay">
            <summary>
            轨道数据首历元儒略日的小数部分。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.NumberOfSatellites">
            <summary>
            卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.PRNs">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.SatAccuraces">
            <summary>
            用于表示卫星的精度，1表示极佳， 99表示不要用，0表示未知。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.FileType">
            <summary>
            文件类型，M表示多系统，版本c新增
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.TimeSystem">
            <summary>
            时间系统，版本c新增
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.BaseForPosOrVel">
            <summary>
            Base for Pos/Vel，版本c新增
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.BaseForClkOrRate">
            <summary>
            Base for Clk/Rate，版本c新增
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.Characters">
            <summary>
            存储的字符，13-14行存储
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.Floats">
            <summary>
            存储的浮点数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.Ints">
            <summary>
            存储的整数区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.Comments">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Header.LineNumber">
            <summary>
            头文件行数      2016.01.20 double添加
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Header.GetSatSatAccurace(Gnsser.SatelliteNumber)">
            <summary>
            获取卫星精度信息,如果没有，则返回0，表示未知。
            用于表示卫星的精度，1表示极佳， 99表示不要用，0表示未知。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Header.Read(System.String)">
            <summary>
            读取头部信息
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Header.ToString">
            <summary>
            显示字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Header.FirstTwoCharToMarker(System.String)">
            <summary>
            前两个字符标识
            </summary>
            <param name="str1"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3HeaderLineMarker">
            <summary>
            头文件行标记
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Version">
            <summary>
            #a/c
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Time">
            <summary>
            ##
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.SatelliteCount">
            <summary>
            +
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.SatelliteNumber">
            <summary>
            +
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Accuracy">
            <summary>
            ++
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Char">
            <summary>
            %c
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Float">
            <summary>
            %f
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Int">
            <summary>
            %i
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.Comment">
            <summary>
            /*
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3HeaderLineMarker.End">
            <summary>
            * 内容的开始
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.EphemerisManager">
            <summary>
            星历管理器,用于存储各区段的原始SP3星历，该星历用于差值。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisManager.#ctor(System.Double,System.Int32)">
            <summary>
            时段卫星星历
            </summary>
            <param name="interval"></param>
            <param name="maxBreakingCount">允许星历断裂的最大次数（采样率为间隔）</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.EphemerisManager.Interval">
            <summary>
            间隔
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.EphemerisManager.MaxBreakingCount">
            <summary>
            允许星历断裂的最大次数（采样率为间隔）
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisManager.Create(Gnsser.SatelliteNumber)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.EphemerisStorage">
            <summary>
            单个卫星星历（XYZ和钟差）存储器，以历元周内秒为索引。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisStorage.GetEphemerises(System.Collections.Generic.List{System.Double})">
            <summary>
            获取列表
            </summary>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisStorage.GetSubEphemerises(System.Collections.Generic.List{System.Double})">
            <summary>
            获取指定
            </summary>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisStorage.Add(System.Collections.Generic.IEnumerable{Gnsser.Ephemeris})">
            <summary>
            批量添加
            </summary>
            <param name="Ephemerises"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisStorage.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.EphemerisStorage.GetGetNearst(Geo.Times.Time,System.Int32)">
            <summary>
            获取
            </summary>
            <param name="time"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.PeriodEphemerisStorage">
            <summary>
            多时段卫星星历管理器。防止时段空缺造成的星历差值错误。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.PeriodEphemerisStorage.#ctor(System.Double,System.Int32)">
            <summary>
            时段卫星星历
            </summary>
            <param name="interval"></param>
            <param name="MaxBreakingCount"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.PeriodEphemerisStorage.Interval">
            <summary>
            间隔
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.PeriodEphemerisStorage.MaxBreakingCount">
            <summary>
            允许星历断裂的最大次数（采样率为间隔）
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.PeriodEphemerisStorage.Create(Geo.Times.BufferedTimePeriod)">
            <summary>
            创建一个
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.PeriodEphemerisStorage.Add(System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            批量添加，并进行分类。
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.PeriodEphemerisStorage.GetSatEphemerises(Geo.Times.Time)">
            <summary>
            返回指定时段的星历列表。如果没有则返回null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.PeriodEphemerisStorage.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SingleSp3FileEphService">
            <summary>
            Rinex Sp3 文件，一个对象代表一个SP3文件。
            由于SP3文件通常较小，所以加载时，就直接读取。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="MinSequentialSatCount"></param>
            <param name="IsAvailableOnly"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.#ctor(Gnsser.Data.SatEphemerisCollection,System.Int32,System.Int32,System.Int32)">
            <summary>
            以文件初始化
            </summary>
            <param name="Sp3File"></param>
            <param name="MinSequentialSatCount"></param>
            <param name="MaxBreakingCount"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.Init">
            <summary>
            初始化插值器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.SetSp3File(Gnsser.Data.SatEphemerisCollection)">
            <summary>
            修改数据源，重新初始化。
            </summary>
            <param name="Sp3File"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.EphemerisManager">
            <summary>
            原始SP3星历存储。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.Sp3File">
            <summary>
            SP3 文件 
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.MaxBreakingCount">
            <summary>
            允许星历断裂的最大次数（采样率为间隔）
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.MinSequentialSatCount">
            <summary>
            卫星的最小连续数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.Order">
            <summary>
            拟合阶数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.TimePeriod">
            <summary>
            有效时段，缓冲不易设置太大，如果设置2倍的话，会造成在星历拼接的时段结果不稳定。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.SatCount">
            <summary>
            卫星数量，通过头文件获取
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.Prns">
            <summary>
            所有的卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取文件中存储的原始星历信息。
            </summary>
            <param name="prn"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.SingleSp3FileEphService.WarnedPrns">
             <summary>
            一颗卫星只警告一次，避免卡顿
             </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取指定时刻，某卫星的信息。可能需要拟合计算。 
            失败则返回 null。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SingleSp3FileEphService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            卫星是否可用，进行简单的判断。
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3Writer">
            <summary>
            Rinex 观测文件读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.#ctor(System.String,Gnsser.Data.Rinex.Sp3Header)">
            <summary>
            构造函数。
            </summary>
            <param name="filePath">文件路径</param>
            <param name="Sp3Header">头部信息</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.#ctor(System.String,Gnsser.Data.Rinex.Sp3File,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Sp3File"></param>
            <param name="P_V_ModeFlag"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Writer.Sp3Header">
            <summary>
            Sp3头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Writer.HeaderText">
            <summary>
            头部文字
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Writer.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Writer.StringBuilder">
            <summary>
            数据流
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.Write(Gnsser.Data.Rinex.Sp3Section)">
            <summary>
            写入缓存
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.Flush">
            <summary>
            写入，并清空。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.SaveToFile">
            <summary>
            保存到文件，并清空缓存。此处采用追加的方式保存，可以多次调用此方法。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.Dispose">
            <summary>
            资源释放
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.BuildHeaderString(Gnsser.Data.Rinex.Sp3Header,System.String)">
            <summary>
            构建头部字符串。
            </summary>
            <param name="header"></param>
            <param name="P_V_ModeFlag"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.BuidSp3V3String(Gnsser.Data.Rinex.Sp3File,System.String)">
            <summary>
            将指定的Sp3转换成 RINEX V3.0字符串。
            </summary>
            <param name="file"></param>
            <param name="P_V_ModeFlag"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.BuildFirstLineSp3(Gnsser.Data.Rinex.Sp3Section)">
            <summary>
            构建第一行
            </summary>
            <param name="Sp3Section"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Writer.BuildSp3Record(Gnsser.Ephemeris,System.String)">
            <summary>
            构建历元数据
            </summary>
            <param name="Sp3Record"></param>
            <param name="P_V_ModeFlag"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexFileType">
            <summary>
            RINEX 文件类型
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.O">
            <summary>
            O: Observation fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.N">
            <summary>
              N: GPS Navigation fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.M">
            <summary>
             M: Meteorological satData fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.G">
            <summary>
             G: GLONASS Navigation fileB 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.L">
            <summary>
              L: Future Galileo Navigation fileB      
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.H">
            <summary>
             H: Geostationary GPS payload nav mess fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.B">
            <summary>
             DeltaTimeDistance: Geo SBAS broadcast satData fileB (separate documentation)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.C">
            <summary>
            pseudoRange: Clock fileB (separate documentation)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.S">
            <summary>
            S: Summary fileB (used east.g., by IGS, not coefficient standard!) 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexFileType.R">
            <summary>
            GLONASS 星历
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.FileName">
                 * 
            4. THE EXCHANGE OF RINEX FILES:
            
            We recommend using the following naming convention for RINEX files:
            
               ssssdddf.yyt
            
               |   |  | | |
               |   |  | | +--  t:  fileB type:
               |   |  | |          O: Observation fileB
               |   |  | |          N: GPS Navigation fileB
               |   |  | |          M: Meteorological satData fileB
               |   |  | |          G: GLONASS Navigation fileB 
               |   |  | |          ObsMinusApriori: Future Galileo Navigation fileB                       |
               |   |  | |          H: Geostationary GPS payload nav mess fileB
               |   |  | |          DeltaTimeDistance: Geo SBAS broadcast satData fileB
               |   |  | |                        (separate documentation)
               |   |  | |          pseudoRange: Clock fileB (separate documentation)
               |   |  | |          S: Summary fileB (used east.g., by IGS, not coefficient standard!)    |
               |   |  | |
               |   |  | +---  yy:  dayServices-digit Year
               |   |  |
               |   |  +-----   f:  fileB sequence number/character within Day
               |   |               daily fileB: f = 0
               |   |               hourly files:
               |   |               f = coefficient:  1st Hour 00h-01h; f = b: 2nd Hour 01h-02h; ... ;|
               |   |               f = XArray: 24th Hour 23h-24h                                |
               |   |
               |   +-------  ddd:  Day of the Year of prevObj clk
               |
               +----------- ssss:  4-character station name designator
               
            For 15-minutes high-rate tracking satData we recommend the following extended     |
            filenames:                                                                     |
                                                                                           |
               ssssdddhmm.yyo                                                              |
                                                                                           |
               |   |  ||  | |                                                              |
               |   |  ||  | +-  o: observation fileB                                        |
               |   |  ||  |                                                                |
               |   |  ||  +--- yy: dayServices-digit Year                                          |
               |   |  ||                                                                   |
               |   |  |+------ mm: starting Minute within the Hour (00, 15, 30, 45)        |
               |   |  |                                                                    |
               |   |  +-------  h: character for the north-th Hour in the Day                  |
               |   |               (coefficient= 1st Hour: 00h-01h, b= 2nd Hour: 1h to 2h,...,       |
               |   |               XArray=24th Hour: 23h-24h. 0= one-Day fileB)                  |
               |   |                                                                       |
               |   +--------- ddd: Day of the Year                                         |
               |                                                                           |
               +------------ ssss: 4-character ID for the LEO receiver/antenna             |
                 * 
                 * author:czs
                 * time:2012-4-17
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.#ctor">
            <summary>
            Rinex 文件名称
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.#ctor(System.String,Geo.Times.Time,Gnsser.Data.Rinex.RinexFileType,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="siteName"></param>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.#ctor(Gnsser.Data.Rinex.FileName)">
            <summary>
            Rinex 文件名称
            </summary>
            <param name="fileName">Rinex 文件名称</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.NameLength">
            <summary>
            8 or 10
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.StationName">
            <summary>
             ssss:    4-character station name designator
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.DayOfYear">
            <summary>
            ddd:    Day of the Year of prevObj clk
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.Year">
            <summary>
            yy: dayServices-digit Year         
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.StartingMinute">
            <summary>
            mm: starting Minute within the Hour (00, 15, 30, 45) 
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.StartingSecond">
            <summary>
            mm: starting Minute within the Hour (00, 15, 30, 45) 
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.FileNameString">
            <summary>
            完整的名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileName.Info">
            <summary>
            可读性的文本
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.Check(Gnsser.Data.Rinex.FileName,System.String@)">
            <summary>
            检验
            </summary>
            <param name="name"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.CompareTo(Gnsser.Data.Rinex.FileName)">
            <summary>
            排序，比较。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.Parse(System.String)">
            <summary>
            解析字符串为名称
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.GetHourCharString(System.Int32)">
            <summary>
            小时从a到x
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileName.GetHour(System.Char)">
            <summary>
            小时解析从a到x
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.FileNameClassifier">
            <summary>
            文件名称分类。前提是文件都在一个目录下。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileNameClassifier.#ctor(System.String[])">
            <summary>
            文件名称分类 构造函数。
            </summary>
            <param name="obsPathes"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.Directory">
            <summary>
            文件目录。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.FileCount">
            <summary>
            文件数量
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileNameClassifier.ExtractFirstSequence(System.Collections.Generic.List{Gnsser.Data.Rinex.FileName})">
            <summary>
            提取第一个序列
            </summary>
            <param name="originNames">初始名称列表</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.FileNameClassifier.GetSameNames(System.Collections.Generic.List{Gnsser.Data.Rinex.FileName},System.Collections.Generic.List{Gnsser.Data.Rinex.FileName})">
            <summary>
            返回从第一个开始的相同部分。遇到不同的则截止。
            </summary>
            <param name="namesA">列表A</param>
            <param name="namesB">列表B</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.FilePathes">
            <summary>
            原始输入路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.ClassifiedNames">
            <summary>
            按照测站分类，不在乎文件的连续性。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.SequenceFileNames">
            <summary>
            序列名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.FileNameClassifier.SequenceFilePaths">
            <summary>
            序列路径
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.SequenceFileName">
            <summary>
            序列文件。连续的文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SequenceFileName.#ctor(Gnsser.Data.Rinex.FileName)">
            <summary>
            构造函数。
            </summary>
            <param name="First">初始化序列</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.SequenceFileName.StationName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SequenceFileName.First">
            <summary>
            第一个文件名称
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SequenceFileName.GetFileNames(System.Int32)">
            <summary>
            获取一个连续的文件序列
            </summary>
            <param name="dayCount">天数。</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.IonParam">
            <summary>
            电离层参数。导航文件参数,电离层
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.MarkerTypes">
            <summary>
            类型 RINEX 3.0
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.GEODETIC">
            <summary>
            Earth-fixed, high-precision monumentation
            </summary>        
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.NON_GEODETIC">
            <summary>
            Earth-fixed, low-precision monumentation
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.NON_PHYSICAL">
            <summary>
            Generated from network processing
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.SPACEBORNE">
            <summary>
            Orbiting space vehicle
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.AIRBORNE">
            <summary>
            Aircraft, balloon, etc.
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.WATER_CRAFT">
            <summary>
             Mobile water craft
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.GROUND_CRAFT">
            <summary>
            Mobile terrestrial vehicle
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.FIXED_BUOY">
            <summary>
            "Fixed" on water surface
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.FLOATING_BUOY">
            <summary>
             Floating on water surface
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.FLOATING_ICE">
            <summary>
             Floating ice sheet, etc. 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.GLACIER">
            <summary>
             "Fixed" on a glacier
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.BALLISTIC">
            <summary>
            Rockets, shells, etc
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.ANIMAL">
            <summary>
             Animal carrying a receiver.
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.HUMAN">
            <summary>
            Human being
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.MarkerTypes.OTHER">
            <summary>
            其它。自定义或者升级版本。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.GlonassNavFile">
            <summary>
             RINEX GLONASS 导航文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFile.Header">
            <summary>
            头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFile.NavRecords">
            <summary>
            记录.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFile.StartTime">
            <summary>
            开始时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFile.EndTime">
            <summary>
            结束时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavFile.Prns">
            <summary>
            卫星编号集合
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavFile.Add(Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            添加一个星历
            </summary>
            <param name="gloEph"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.GlonassNaviFileReader">
            <summary>
            Glonass导航文件的读取。
            包含卫星编号，时刻，轨道根数等。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fileName">路径名称</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNaviFileReader.FileName">
            <summary>
            当前文件路径。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.Read">
            <summary>
            GLONASS导航文件，适用于 Rinex V2 V3
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ReadFileV2V3(System.String)">
            <summary>
            读取GLONASS导航文件
            </summary>
            <param name="navFilePath">路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ReadRecordV2(System.IO.StreamReader,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            读取记录
            </summary>
            <param name="sr">数据流读取器</param>
            <param name="header">头部信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ReadRecordV3(System.IO.StreamReader,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            RINEX 3.0 记录读取。
            </summary>
            <param name="sr">数据流</param>
            <param name="header">头部信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ReadRecordBodyV3(System.IO.StreamReader,Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            读取记录体，V3。
            </summary>
            <param name="sr"></param>
            <param name="record"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ParseFirstLineV2(System.String,Gnsser.Data.Rinex.NavFileHeader,Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            分解第一行。V2
            </summary>
            <param name="line">行</param>
            <param name="header">头部</param>
            <param name="record">钟差</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ParseFirstLineV3(System.String,Gnsser.Data.Rinex.GlonassNavRecord)">
            <summary>
            分解第一行。V3
            </summary>
            <param name="line">行</param>
            <param name="header">头部</param>
            <param name="record">钟差</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNaviFileReader.ReadText(System.String)">
            <summary>
            直接返回头文件原纪录。
            </summary>
            <param name="rinexFileName">RINEX 文件路径</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.GlonassNavRecord">
            <summary>
            Glonass navigation message Data Record.
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.GlonassNavRecord.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.RelativeFrequencyBias">
            <summary>
            卫星相对频率偏差
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.MessageTime">
            <summary>
            电文帧时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.XYZ">
            <summary>
            位置坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.XyzVelocity">
            <summary>
            速度
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.XyzAcceleration">
            <summary>
            加速度
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.Health">
            <summary>
            0 OK
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.FrequencyNumber">
            <summary>
            频率编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.GlonassNavRecord.AgeOfOper">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ParamNavFile">
            <summary>
            RINEX GnssNavFile 导航文件。
            以导航星历参数表达的导航文件，包括北斗、GPS、伽利略。
            一个类的实例代表一个文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.Header">
            <summary>
            导航头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.Prns">
            <summary>
            卫星编号集合
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.StartTime">
            <summary>
            开始时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.EndTime">
            <summary>
            结束时间，不代表所有为卫星。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFile.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.Add(Gnsser.EphemerisParam)">
            <summary>
            添加星历参数,重复星历将失败。
            </summary>
            <param name="EphemerisParam"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.Add(System.Collections.Generic.List{Gnsser.EphemerisParam})">
            <summary>
            添加一个星历参数
            </summary>
            <param name="EphemerisParam"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.GetEphemerisParams(Gnsser.SatelliteNumber)">
            <summary>
            获取星历参数集合
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.GetEphemerisParams(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取指定范围星历集合
            </summary>
            <param name="PRN"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFile.Create(Gnsser.SatelliteNumber)">
            <summary>
            创建一个
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.NavFileHeader">
            <summary>
            Rinex 导航文件头文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.NavFileHeader.#ctor">
            <summary>
            Rinex 头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.SatelliteType">
            <summary>
            卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.CreationProgram">
            <summary>
            创建程序
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.CreationAgence">
            <summary>
            创建机构
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.CreationDate">
            <summary>
            创建日期
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.Comments">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.LeapSeconds">
            <summary>
            跳秒
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.PrnList">
            <summary>
            卫星列表编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.IonParam">
            <summary>
            电离层参数。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.UtcDeltaA0">
            <summary>
            UTC 转换参数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.UtcDeltaA1">
            <summary>
            UTC 转换参数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.UtcDeltaT">
            <summary>
            UTC 转换参数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.UtcDeltaW">
            <summary>
            UTC 转换参数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.NavFileHeader.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.NavFileHeader.HasIonParam">
            <summary>
            是否设置了电离层参数。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ParamNavFileWriter">
            <summary>
            Rinex 观测文件读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.#ctor(System.String,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            构造函数。
            </summary>
            <param name="filePath">文件路径</param>
            <param name="NavFileHeader">头部信息</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFileWriter.LatestNavEphDic">
            <summary>
            存储最新星历信息。不重复存储。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFileWriter.NavFileHeader">
            <summary>
            导航头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFileWriter.StringBuilder">
            <summary>
            数据流
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.CheckAndAppendEphemerisParam(Gnsser.EphemerisParam)">
            <summary>
            检查，如果该星历步存在，则添加星历参数并返回true。
            </summary>
            <param name="para"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.AppendEphemerisParam(Gnsser.EphemerisParam)">
            <summary>
            添加星历参数
            </summary>
            <param name="para"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.SaveToFile">
            <summary>
            保存到文件，并清空缓存。此处采用追加的方式保存，可以多次调用此方法。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.BuidRinexV3String(Gnsser.Data.Rinex.ParamNavFile)">
            <summary>
            将指定的导航文件转换成 RINEX V3.0字符串。
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.BuildHeaderString(Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            构建头部字符串。
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.BuildFirstLineV3(Gnsser.SatClockBias)">
            <summary>
            构建第一行
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.BuildRinexRecordV3(Gnsser.EphemerisParam)">
            <summary>
            构建历元数据
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.ReadContentLine(System.IO.StreamReader,System.Collections.Generic.List{System.String})">
            <summary>
            读取并返回 RINEX 内容行。如果有注释行，则读取注释，继续读取，返回新的内容行。
            </summary>
            <param name="r">StreamReader</param>
            <param name="comments">注释</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.IsCommentLine(System.String)">
            <summary>
            判断本行是否是注释行。即，在60列时，具有COMMENT标识。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileWriter.GetCommenValue(System.String)">
            <summary>
            获取注释行的内容。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ParamNavFileReader">
            <summary>
            Rinex 观测文件读取器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.#ctor(System.String)">
            <summary>
            初始化一个读取器。
            </summary>
            <param name="fileName">文件路径</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.ParamNavFileReader.RinexFileName">
            <summary>
            当前文件路径。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ReadHeader(System.String)">
            <summary>
            读取RINEX文件的头文件。
            </summary>
            <param name="rinexFileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ReadGnssNavFlie">
            <summary>
            GNSS导航文件的读取
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ReadRecordBodyV3(System.IO.StreamReader,Gnsser.EphemerisParam)">
            <summary>
            读取 RINEX 3.0s GNSS 导航文件。
            </summary>
            <param name="sr"></param>
            <param name="header"></param>
            <returns></returns> 
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ParseFirstLineV3(System.String,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            分解第一行。
            </summary>
            <param name="line"></param>
            <param name="header"></param>
            <param name="record"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ReadRecordV2(System.IO.StreamReader,Gnsser.Data.Rinex.NavFileHeader)">
            <summary>
            读取 RINEX 2.0s GPS导航文件。
            </summary>
            <param name="sr"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ParseFirstLineV2(System.String,Gnsser.Data.Rinex.NavFileHeader,Gnsser.SatClockBias)">
            <summary>
            分解第一行。
            </summary>
            <param name="line"></param>
            <param name="header"></param>
            <param name="record"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.ReadContentLine(System.IO.StreamReader,System.Collections.Generic.List{System.String})">
            <summary>
            读取并返回 RINEX 内容行。如果有注释行，则读取注释，继续读取，返回新的内容行。
            </summary>
            <param name="r">StreamReader</param>
            <param name="comments">注释</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.IsCommentLine(System.String)">
            <summary>
            判断本行是否是注释行。即，在60列时，具有COMMENT标识。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ParamNavFileReader.GetCommenValue(System.String)">
            <summary>
            获取注释行的内容。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileFormater">
            <summary>
            O文件选格式化器。
            2013年创建
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileFormater.Format(System.String,System.String)">
            <summary>
            格式化O文件,如果修改了，则返回true。并将其移动到指定的目录。
            标准化文件内容供Bernese5.0调用。
            包括：1）标准化 MarkerName 为四个字的英文
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileFormater.UpperAntTypeName(System.String,System.String[])">
            <summary>
            本方法只实现了判断是否包含指定的天线类型。
            标准化文件内容供Bernese5.0调用。
            包括：1）标准化 MarkerName 为四个字的英文；2）去掉天线类型空格后的内容。
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexEpochObservation">
            <summary>
            一组原始的RINEX观测记录。记录了在一个时刻，一个测站观测了多个卫星的值。
            由多个 ObservationData 组成。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.#ctor">
            <summary>
            默认构造函数，初始化参数。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.#ctor(Geo.Times.Time)">
            <summary>
            构造函数
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.Add(Gnsser.Data.Rinex.RinexSatObsData)">
            <summary>
            增加一个
            </summary>
            <param name="RinexSatObsData"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.Header">
            <summary>
            观测文件头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.ReceiverTime">
            <summary>
            GNSS 时间。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.EpochFlag">
            <summary>
            历元标志：0表示正常，1表示在前一历元与当前历元之间发生了电源故障，>1为事件标志
            8 为GNSSer 钟跳标记。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.Prns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.Comments">
            <summary>
            注释行。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexEpochObservation.ReceiverClockOffset">
            <summary>
            接收机钟差（可选） receiver clock offset (fraction, optional) 
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveObsType(Gnsser.SatelliteType,System.String)">
            <summary>
            移除指定系统的观测类型
            </summary>
            <param name="satType">系统类型</param>
            <param name="obsType">观测类型</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveOthers(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            移除非此系统
            </summary>
            <param name="satTypes"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveOthers(System.Collections.Generic.List{Gnsser.ObsTypes})">
            <summary>
            移除其它。
            </summary>
            <param name="obsTypes"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.Remove(Gnsser.SatelliteType)">
            <summary>
            移除指定系统的卫星观测
            </summary>
            <param name="satType">系统类型</param> 
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveObsType(Gnsser.SatelliteType,System.Collections.Generic.List{System.String})">
            <summary>
            移除指定系统的观测类型
            </summary>
            <param name="satType">系统类型</param>
            <param name="obsType">观测类型</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.ToString">
            <summary>
            字符表示的对象信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.ToLineString">
            <summary>
            行数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveOther(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            移除其它系统
            </summary>
            <param name="satelliteTypes"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexEpochObservation.RemoveFrequences(System.Collections.Generic.List{System.Int32})">
            <summary>
            移除指定频率编号
            </summary>
            <param name="frequenceNumToBeRemoved"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexFileObsDataSource">
            <summary>
            以数据流方式传递的观测数据源。
            这种数据源比较节约内存，但是只能从起始位置一步一步的往下读取数据，不能获知整个数据流大小。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.#ctor(System.String,System.Boolean)">
            <summary>
            以单观测文件路径构建。
            </summary>
            <param name="filePath">文件路径</param>
            <param name="IsReadContent">是否读取内容</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.EpochInfoBuilder">
            <summary>
            标准RINEX对象创建EpochInformation
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.CurrentReader">
            <summary>
            适配器设计模式
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.Reset">
            <summary>
            重置，标记退回到 0.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.CurrentIndex">
            <summary>
            当前历元编号从0 开始。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.StartIndex">
            <summary>
            起始编号，从0开始。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexFileObsDataSource.EnumCount">
            <summary>
            遍历数量，默认为最大值的一半。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.LoadObsData(System.String[],Geo.Utils.ExceptionInfo)">
            <summary>
            以数据流形式导入观测文件数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.Get(Geo.Times.Time,System.Double)">
            <summary>
            获取指定时刻的观测数据
            </summary>
            <param name="gpsTime"></param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.GetNexts(System.Int32)">
            <summary>
            获取下面的观测数据，当前除外
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexFileObsDataSource.MoveNext">
            <summary>
            向下移动
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.MultiRinexFileObsDataSource">
            <summary>
            多（连续）文件数据流数据源.默认为采用同一个测站的数据，请输入时注意判断。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            以多（连续）文件路径构建。
            </summary>
            <param name="filePathes">观测文件路径，默认为采用同一个测站的数据，请输入时注意判断。</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.#ctor(System.String[])">
            <summary>
            以多（连续）文件路径构建。
            </summary>
            <param name="filePathes">观测文件路径，默认为采用同一个测站的数据，请输入时注意判断。</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.EndTime">
            <summary>
            结束时间，最后一个文件的日期。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.ObsFileReaders">
            <summary>
            每个文件对应一个读取器
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.CurrentReader">
            <summary>
            适配器设计模式.当前文件的读取器。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.CurrentFileIndex">
            <summary>
            当前文件编号，从 0 开始。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.FileCount">
            <summary>
            文件数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.HasNexFile">
            <summary>
            当前之后，是否还有文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.MoveNext">
            <summary>
            移动到下一个。
            </summary>
            <returns>如果没有了，就返回 false </returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.Reset">
            <summary>
            重置，标记退回到 0.
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.MultiRinexFileObsDataSource.Get(Geo.Times.Time,System.Double)">
            <summary>
            除非时间相等或靠后，否则此方法非常耗费时间。
            若没有找到，返回 null。
            </summary>
            <param name="gpsTime"></param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsDataSourceWalker">
            <summary>
            RINEX 观测值数据源游走器/遍历器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsDataSourceWalker.#ctor(System.Collections.Generic.IEnumerable{Gnsser.Domain.EpochInformation})">
            <summary>
            数据遍历处理器，构造函数。
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.BaseLineObsDataSourceWalker">
            <summary>
            RINEX 观测值数据源游走器/遍历器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.BaseLineObsDataSourceWalker.#ctor(Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            数据遍历处理器，构造函数。
            </summary>
            <param name="satData"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.BaseLineObsDataSourceWalker.Walk">
            <summary>
            walk
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsFileReader">
            <summary>
            Rinex 观测文件读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.#ctor(System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            初始化一个读取器。
            </summary>
            <param name="MaxLenOfMarkerName">最长的字符串</param>
            <param name="fileName">文件路径</param>
            <param name="isReplaceSpaceAnddMinusMaker">是否替换“-”和“ ”用“_”</param>
            <param name="IsReadContent">是否读取内容，有的只是概略统计，则不需要读取内容</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.IsReplaceSpaceAnddMinusMaker">
            <summary>
            是否替换“-”和“ ”用“_”
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadFirstEpoch(System.String)">
            <summary>
            读取区间
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadPeriod(System.String)">
            <summary>
            读取区间
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.MaxLenOfMarkerName">
            <summary>
            测站名称最长字符串
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.IsCancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.CurrentIndex">
            <summary>
            当前编号，从 0 开始。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.StartIndex">
            <summary>
            起始编号，从0开始。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.EnumCount">
            <summary>
            遍历数量，默认为最大值的一半。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.MaxEnumIndex">
            <summary>
            最大的循环编号
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.SetEnumIndex(System.Int32,System.Int32)">
            <summary>
            设置遍历数量
            </summary>
            <param name="StartIndex"></param>
            <param name="EnumCount"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.Name">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.IsReadContent">
            <summary>
            是否读取数据内容。否则只读取卫星编号。默认为True。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader._header">
            <summary>
            观测头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.Version">
            <summary>
            文件版本
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.FilePath">
            <summary>
            当前文件路径。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.StreamReader">
            <summary>
            数据流阅读器
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.CurrentLine">
            <summary>
            当前行
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.Current">
            <summary>
            当前的观测信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadObsFile(System.Int32)">
            <summary>
            读取观测文件，将所有数据读入内存。目前支持 Rinex 4.0 以下的格式。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.GetHeader">
            <summary>
            获取或读取RINEX文件的头文件。在直接读取头文件的基础上对头文件内容进行部分修正。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.Get(Geo.Times.Time,System.Double)">
            <summary>
            检索，查找，若没有找到，则返回null。
            </summary>
            <param name="gpsTime"></param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.LoopAndFind(Geo.Times.Time,System.Int32,System.Double)">
            <summary>
            循环迭代查找
            </summary>
            <param name="time"></param>
            <param name="totalLoopCount">大循环次数，最多1次</param>
            <param name="toleranceSeccond"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.LastTime">
            <summary>
            上一个时间
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexObsFileReader._nextHeaderLine">
            <summary>
            如果下一个记录的头部已经读取，则不用读取第一行了。采用本参数进行存储。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.MoveNext">
            <summary>
            读取下一个观测历元数据。
            如果没有了则返回false。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.Reset">
            <summary>
            重置数据流
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadObsFileHeader(System.String,System.Int32)">
            <summary>
             读取RINEX文件的头文件。
            </summary>
            <param name="rinexFilePath">文件路径</param>
            <param name="MaxLenOfMarkerName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.CheckAndSetNavPath(System.String,Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            检查设置导航文件。支持当前目录和上一目录的同名导航文件
            </summary>
            <param name="rinexFilePath"></param>
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ParseHeaderLine(Gnsser.Data.Rinex.RinexObsFileHeader,System.IO.StreamReader,System.String,System.String,System.Int32)">
            <summary>
            解析一条
            </summary>
            <param name="header"></param>
            <param name="line"></param>
            <param name="reader"></param>
            <param name="headerLabel"></param>
            <param name="nonAscCount"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.BuildSiteName(System.String,System.Int32,System.String)">
            <summary>
            提取测站名称，只处理字符串将空格以0替换
            </summary>
            <param name="makerName"></param>
            <param name="MaxLenOfMarkerName"></param>
            <param name="replacerChar">替换“ ”和“-”的字符</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ParseSystemPhaseShift(Gnsser.Data.Rinex.RinexObsFileHeader,System.IO.StreamReader,System.String,System.Boolean,System.Int32,Gnsser.ObservationCode,System.Double)">
            <summary>
            解析系统频率偏移
            </summary>
            <param name="header"></param>
            <param name="reader"></param>
            <param name="line"></param>
            <param name="isStart">是否为起始行</param>
            <param name="toReadSatCount">未读卫星数量</param>
            <param name="code"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadEpochHeaderV2(System.IO.StreamReader,System.String,Gnsser.Data.Rinex.RinexEpochObservation@)">
            <summary>
            读取观测时段的头部（第一行或前两行）。 Rinex V1 - V2
            </summary>
            <param name="reader">数据流读取器</param>
            <param name="line">当前行</param>
            <param name="rec">历元观测信息</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileReader.CurrentObsCodesV2">
            <summary>
            当前观测码
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadEpochObservationV2(Gnsser.Data.Rinex.RinexObsFileHeader,System.IO.StreamReader,System.String,System.Boolean,System.Boolean)">
            <summary>
            RINEX 2s。 读取一组观测记录。一个测站，同一时刻观测了多个卫星。
            如果出错则返回null。
            </summary>
            <param name="header">头文件</param>
            <param name="reader">数据流读取</param>
            <param name="line">内容的第一行</param>
            <param name="IsReadContent">是否读取内容</param>
            <param name="skipError">是否忽略错误</param>
            <returns>如果出错则返回null。</returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadObservationDataV2(System.Collections.Generic.List{System.String},System.IO.StreamReader,Gnsser.SatelliteNumber,System.Collections.Generic.List{System.String})">
            <summary>
            读取测站观测一个卫星的观测值记录。Rinex 3.0 以下（不含）的读取方法
            如果有问题，直接抛出异常。
            </summary>
            <param name="obsCodes"></param>
            <param name="reader"></param>
            <param name="satNum"></param>
            <param name="comments"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadContentLineAndSkipHeaderLabel(System.IO.StreamReader,System.String,Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            读取一行内容，并且略过头部标记。判断是否包含头部标签，如是则略过
            </summary>
            <param name="reader"></param>
            <param name="line"></param>
            <param name="rec"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.TryParseTime(System.IO.StreamReader,System.String@,Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            尝试解析时间，有时候头部会有其它数据，容易出错，循环继续往下解析，直到成功。
            </summary>
            <param name="reader"></param>
            <param name="line"></param>
            <param name="rec"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadEpochObservationV3(Gnsser.Data.Rinex.RinexObsFileHeader,System.IO.StreamReader,System.String,System.String@,System.Boolean,System.Boolean)">
            <summary>
            读取RINEX 3.0版本的观测段。 
            </summary>
            <param name="header">RINEX header</param>
            <param name="reader">数据流</param>
            <param name="line">行</param>
            <param name="nextHeaderLine">下一记录的起始行，有的突然中断，并且改行已经读取，为头一行，则返回这一行</param>
            <param name="skipError">是否忽略错误。忽略则返回null，否则抛出异常</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ParseEpochHeaderLineV3(System.String,System.IO.StreamReader,Gnsser.Data.Rinex.RinexEpochObservation@)">
            <summary>
            解析 Rinex 3.0 历元观测数据的第一行,包含历元、卫星数量接收机钟差（通常为0，不可用）等参数。
            </summary>
            <param name="line">带解析行</param>
            <param name="rec">数据对象</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ParseObservationLineV3(Gnsser.Data.Rinex.RinexObsFileHeader,System.String,System.Boolean,System.Boolean)">
            <summary>
            解析一行卫星观测数据，并不读取。
            Rinex3.0 观测文件。
            </summary>
            <param name="header">头文件</param>
            <param name="line">记录卫星数据的文本行</param>
            <param name="isReadContentLine">标记是否读取内容行，如不，则快速略过</param>
            <param name="ignoreEmpty">是否忽略空值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ParseObsValueV2V3(System.String,System.String)">
            <summary>
            解析 RINEX V2 和 V3 的单数据存储部分
            </summary>
            <param name="obsStr"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadSiteName(System.String,System.Int32,System.Boolean)">
            <summary>
            测站名称
            </summary>
            <param name="path"></param>
            <param name="charCount"></param>
            <param name="isFormateName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadHeader(System.String,System.Int32,System.Boolean)">
            <summary>
            读取头文件的快捷方法。
            </summary>
            <param name="path"></param>
            <param name="markerCount"></param>
            <param name="isFormateName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.Read(System.String,System.Boolean,System.Int32)">
            <summary>
            读取头文件的快捷方法。
            </summary>
            <param name="path"></param>
            <param name="count"></param>
            <param name="isReadConent"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadGetEpochCount(System.String)">
            <summary>
            历元数量。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadNextNoNullLine(System.IO.StreamReader)">
            <summary>
            读取下一行有内容的行，非空行，空白行。
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.GetFirstContentLine(System.String)">
            <summary>
            读取第一个内容行。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.ReadContentLine(System.IO.StreamReader,System.Collections.Generic.List{System.String})">
            <summary>
            读取并返回 RINEX 内容行。如果有注释行，则读取注释，继续读取，返回新的内容行，空行也直接返回。
            </summary>
            <param name="r">StreamReader</param>
            <param name="comments">注释</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.IsCommentLine(System.String)">
            <summary>
            判断本行是否是注释行。即，在60列时，具有COMMENT标识。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.GetCommenValue(System.String)">
            <summary>
            获取注释行的内容。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.SubString(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            截取包含非ascii码的字符串，如汉字
            </summary>
            <param name="line"></param>
            <param name="nonAscCount"></param>
            <param name="fromIndex"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileReader.GetRatioOfSatCount(System.String,System.Double)">
            <summary>
            最小比例
            </summary>
            <param name="inpath"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsFile">
            <summary>
            观测数据文件，一个测站所有的观测信息。
            所有的文件都保存在这个类中。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile._data">
            <summary>
            记录内容。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.Header">
            <summary>
            头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.IsChanged">
            <summary>
            数据是否改变，否则直接采用上一次结果。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.SiteInfo">
            <summary>
            测站信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.Item(System.Int32)">
            <summary>
            索引器获取历元观测信息
            </summary>
            <param name="index">编号</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.UpdateAndGetHeaderTimePeriodWithContentTime">
            <summary>
            采用内容时间更新头文件时间信息，并返回。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.CheckOrUpdateAndGetHeaderIntervalWithContent">
            <summary>
            采用观测内容更新采用率
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.StartTime">
            <summary>
            首次观测时间，若无则返回  Time.Default.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.EndTime">
            <summary>
            最后观测时间，若无则返回 null
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.Count">
            <summary>
            观测历元数量。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFile.Interval">
            <summary>
            采样间隔,单位：秒
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Add(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            追加
            </summary>
            <param name="recs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Add(System.Collections.Generic.IEnumerable{Gnsser.Data.Rinex.RinexEpochObservation})">
            <summary>
            追加
            </summary>
            <param name="recs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Add(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            增加一个
            </summary>
            <param name="rec"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Get(System.Int32)">
            <summary>
            获取指定编号的观测数据。如果失败则返回null
            </summary>
            <param name="gpsTime">时刻</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetEpochObservation(Geo.Times.Time,System.Double)">
            <summary>
            获取指定时刻的观测数据。
            </summary>
            <param name="gpsTime">时刻</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetItems(System.Int32,System.Int32)">
            <summary>
            获取一部分原始数据
            </summary>
            <param name="fromIndex">从编号，含</param>
            <param name="count">数量</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetPrns">
            <summary>
            获取出现过的卫星编号列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetSatTypedPrns">
            <summary>
            卫星
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetEpochObservations(Gnsser.SatelliteNumber)">
            <summary>
            通过卫星编号获取该卫星所有的观测值列表。
            </summary>
            <param name="prn">卫星编号</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetEpochTimedObservations(Gnsser.SatelliteNumber)">
            <summary>
            返回单星观测列表
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.GetEnumerator">
            <summary>
            遍历器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            遍历器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.RemoveObsType(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.List{System.String}})">
            <summary>
            移除指定的观测类型
            </summary> 
            <param name="obsTypesTobeRemove"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.RemoveObsType(Gnsser.SatelliteType,System.String)">
            <summary>
            移除指定的观测类型
            </summary>
            <param name="obsType"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.RemoveObsType(Gnsser.SatelliteType,System.Collections.Generic.List{System.String})">
            <summary>
            移除指定的观测类型
            </summary>
            <param name="satType"></param>
            <param name="obsTypes"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Remove(System.Collections.Generic.List{Gnsser.SatelliteNumber},Geo.Times.TimePeriod)">
            <summary>
            移除
            </summary>
            <param name="prns"></param>
            <param name="epochs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Remove(Gnsser.SatelliteNumber,Geo.Times.TimePeriod)">
            <summary>
            移除
            </summary>
            <param name="prn"></param>
            <param name="epochs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Remove(Gnsser.SatelliteNumber,System.Collections.Generic.List{Geo.Times.Time})">
            <summary>
            移除
            </summary>
            <param name="prn"></param>
            <param name="epochs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.Remove(Gnsser.SatelliteNumber)">
            <summary>
            移除
            </summary>
            <param name="prn"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.BuildObjectTable(Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            针对某一个卫星绘制
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFile.BuildObjectTable(System.Boolean)">
            <summary>
            构建数据表，绘制相位数据
            </summary>
            <param name="isDrawAllPhase"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsFileHeader">
            <summary>
            Rinex 观测文件头文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.#ctor(Gnsser.IObsInfo,Gnsser.ISiteInfo)">
            <summary>
            以基本信息初始化
            </summary>
            <param name="ObsInfo"></param>
            <param name="SiteInfo"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.#ctor">
            <summary>
            Rinex 头文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.HasNavFile">
            <summary>
            是否具有导航文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.NavFilePath">
            <summary>
            导航文件路径，如果有的话。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.GlonassSlotFreqNums">
            <summary>
            GLONASS_SLOT_FRQ
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.SystemPhaseShift">
            <summary>
            Phase shift correction used to generate phases consistent w/r to cycle shifts
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.GetCodeSatTypedPrns">
            <summary>
            用于RINEX输出
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.GlonassCodePhaseBias">
            <summary>
            GLONASS COD/PHS/BIS
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.MarkerName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.AntDeltaXyz">
            <summary>
            天线偏差 ANTENNA_DELTA_XYZ
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.ApproxXyz">
            <summary>
            概略坐标.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.Hen">
            <summary>
            天线坐标偏移
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.StartTime">
            <summary>
            第一次观测时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.EndTime">
            <summary>
            最后一次观测时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.Interval">
            <summary>
            采样率
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.CountryCode">
            <summary>
            国家代码，为从RINEX3文件名提取，通常为3个字符的代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.FileType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.SatTypeMarker">
            <summary>
            卫星系统，单一卫星系统起作用，如果为多系统，代码为M，则需要进一步判断。
            这只是一个前期头部记录器。
            这是一个简单的标记、记录，需要赋值判断。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.FileInfo">
            <summary>
            文件信息，通常是创建信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.MarkerType">
            <summary>
            RINEX 3.0
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.GetObsTypesCount(Gnsser.SatelliteType)">
            <summary>
            观测值数量,V2 对于所有系统均采用同样的观测类型
            如果 M 设置了，则不统计它。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.LeapSeconds">
            <summary>
            闰秒
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileHeader.TimeSystem">
            <summary>
            Time system:- GPS (=GPS time system)
            - GLO (=UTC time system)
            - GAL (=Galileo System Time)
            - QZS (= QZSS time system)
            - BDT (=BDS Time system)
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.SetTypeOfObservesV2(System.String[])">
            <summary>
            V2 的区别是:对所有的系统采用同样的观测码类型，如C1,C2
            但此处只是简单记录，并不所有都赋予，系统将在读取内容数据前进行甄别和更新。
            此处采用的是懒加载的方式。避免 TotallObserTypesCount 出现统计错误。
            </summary>
            <param name="typeOfObs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.TrySetAndGetContryCodeWithFileName">
            <summary>
            尝试采用文件名称设置国家代码
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileHeader.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsFileWriter">
            <summary>
            RINEX O 文件写入器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.#ctor(System.String,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="path">路径</param>
            <param name="Version">版本</param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.IsUseXCodeAsPLWhenEmpty">
            <summary>
            RINEX3转换2，当没有P2L2时，是否用其它代替。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.FilePath">
            <summary>
            数据流读写器。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.Writer">
            <summary>
            文件写
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.Header">
            <summary>
            头部信息，所有的写入都以头部信息为基准，或者说头部信息的 ObsCodes 为基准。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsFileWriter.ObsCodes">
            <summary>
            观测代码
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.WriteHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            写头部文件
            </summary>         
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.ReWriteHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            重写头部信息
            </summary>
            <param name="header"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.WriteEpochObservation(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            写一个观测历元
            </summary>
            <param name="epochObs"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.Write(Gnsser.Data.Rinex.RinexObsFile,System.Int32)">
            <summary>
            写入到指定的文件路径
            </summary>
            <param name="obsFile"></param>
            <param name="minIntervalSeconds"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.Write(System.IO.StreamWriter,Gnsser.Data.Rinex.RinexObsFile,System.Double,System.Int32)">
            <summary>
            写文件
            </summary>
            <param name="Writer"></param>
            <param name="obsFile"></param>
            <param name="version"></param>
            <param name="minIntervalSeconds"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.GetRinexString(Gnsser.Data.Rinex.RinexObsFile,System.Double,System.Int32)">
            <summary>
             to RINEX String，自动采用观测文件内容更新时间。
            </summary>
            <param name="obsFile"></param>
            <param name="minIntervalSeconds">最小采样率</param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.GetRecordStringV2(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            一个历元观测量
            </summary>
            <param name="epochObs"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.GetOutputPrns(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            获取将要输出的卫星列表
            </summary>
            <param name="epochObs"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.GetRecordStringV3(Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            一个历元观测量
            </summary>
            <param name="epochObs"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.ToRinexValueString(Gnsser.Data.Rinex.RinexObsValue)">
            <summary>
            V2 和 V3 格式相同，都是14为记录，3为小数，1位LLI，1位信号强度。
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.ObsHeaderToRinexString(Gnsser.Data.Rinex.RinexObsFileHeader,System.Double)">
            <summary>
             RINEX文件的头文件。
            </summary>
            <param name="header">头部文件</param>
            <param name="version">版本</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.BuildGnsserCommentLines">
            <summary>
            构建Gnsser 注释信息，以字符串返回，末尾未加换行符。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.BuildCommentLine(System.String)">
            <summary>
            构建RINEX注释行
            </summary>
            <param name="writingInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.BuildApproxXyzLine(Geo.Coordinates.XYZ)">
            <summary>
            构建初始坐标行。含标签。
            </summary>
            <param name="xyz"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.BuildObsCodeLineRinexV2(Gnsser.Data.Rinex.RinexObsFileHeader,System.Text.StringBuilder)">
            <summary>
            获取 RINEX2.0 形式的观测码文本行。多系统情况下还需要解决。！！2015.10.28
            </summary>
            <param name="header"></param>
            <param name="sb"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.Flush">
            <summary>
            立刻写入
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsFileWriter.Write(Gnsser.Data.Rinex.RinexObsFile,System.String,System.Double,System.Int32)">
            <summary>
            写入文件
            </summary>
            <param name="obsFile"></param>
            <param name="path"></param>
            <param name="verion"></param>
            <param name="minInterval"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.LossLockIndicator">
            <summary>
            0-7 为rinex自有。8-9位Gnsser数据指示，其中8表示OK，9表示Bad。
            信号失锁指示，信号质量描述。Loss of lock indicator (LLI).0 or blank: OK or not known
            Bit 0 set : Lost lock between previous and current observation: Cycleslip possible. For phase observations only.
            Bit 1 set : Half-cycle ambiguity/
            possible. Software not capable of  handling half cycles should skip this observation. Valid for the current epoch only.
            Bit 2 set : Galileo BOC-tracking of an MBOC-modulated signal (may suffer from increased noise).
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.OKOrNotKnown">
            <summary>
            OK or not known
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.CyclePossible1">
            <summary>
             01
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.Two">
            <summary>
             Bit 2 set : Galileo BOC-tracking of an MBOC-modulated signal (may suffer from increased noise).
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.CyclePossible3">
            <summary>
            可能周跳
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.Four">
            <summary>
            第 4
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.CyclePossible5">
            <summary>
            可能周跳
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.Six">
            <summary>
            第 6 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.CyclePossible7">
            <summary>
            可能周跳
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.OK">
            <summary>
            没问题
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.LossLockIndicator.Bad">
            <summary>
            9
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexObsValue">
            <summary>
            RINEX 观测值数据
            OBSERVATIONS
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsValue.#ctor(System.Double,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Value"></param>
            <param name="observationCode"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsValue.#ctor(System.Double,Gnsser.ObservationCode)">
            <summary>
            构造函数
            </summary>
            <param name="Value"></param>
            <param name="ObservationCode"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.ObservationCode">
            <summary>
            观测码
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.Value">
            <summary>
            观测数值
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.LossLockIndicator">
            <summary>
            失锁指示(LLI)
            LLI 的范围为0~7。0或空格表示正常或未知；
            bit 0 若设置，表示可能有周跳；即 1 3 5 7 可能有周跳
            bit 1 设置表示可能有半周跳；
            bit 2 Galileo BOC-tracking of an MBOC-modulated signal (may suffer from increased noise).
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.SignalStrength">
            <summary>
            信号强度
            在RINEX格式中，用1~9表示信号强度：1表示可能的最小信号强度，5表示良好S/N比的阈值，9表示可能的最大信号强度，0或空格表示未知或未给出。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.IsLossLock">
            <summary>
            是否产生了周跳。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexObsValue.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexObsValue.Zero">
            <summary>
            值为0。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.TimedRinexSatObsData">
            <summary>
            具有时间的历元数据。
            存储一个卫星的观测值记录
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.TimedRinexSatObsData.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.TimedRinexSatObsData.#ctor(Geo.Times.Time,Gnsser.Data.Rinex.RinexSatObsData)">
            <summary>
            构造函数
            </summary>
            <param name="Time"></param>
            <param name="data"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.TimedRinexSatObsData.SatObsData">
            <summary>
            观测记录
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.TimedRinexSatObsData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexSatObsData">
            <summary>
            存储一个卫星的观测值记录。
            直接读取自RINEX文件，是原始的数据，不应该出现在计算当中。
            是观测数据类型的遍历器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.#ctor">
            <summary>
            初始化变量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.#ctor(Gnsser.SatelliteNumber)">
            <summary>
            构造函数
            </summary>
            <param name="Prn"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.RinexVersion">
            <summary>
            RIENX 文件版本，或者直接引入 Header ？？？ //2018.09.25,czs, hmx
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexSatObsData._values">
            <summary>
            观测数据原始记录。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.ObsTypes">
            <summary>
            观测类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.Item(System.String)">
            <summary>
            检索器
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.PhaseA">
            <summary>
            L1 返回第一个匹配非0结果, 无则为null
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.PhaseB">
            <summary>
            L2 返回第一个匹配非0结果, 无则为null
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.RangeA">
            <summary>
            P1 or C1 返回第一个匹配非0结果, 无则为null
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.RangeB">
            <summary> 
            P2 or C2 返回第一个匹配非0结果, 无则为null
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.GetRinexObsValue(Gnsser.FrequenceType,System.String[])">
            <summary>
            获取
            </summary>
            <param name="frequenceType"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Rinex.RinexSatObsData.IsIonoFreeCombinationAvaliable">
            <summary>
            是否可以组成无电离层组合
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.RemoveRedundantObsForIonoFree">
            <summary>
            移除对于双频无电离层组合多余的观测量
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.GetFrequenceNums">
            <summary>
            获取频率列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.GetObservations(System.Int32,System.Boolean)">
            <summary>
            获取同一频率的观测量集合。
            </summary>
            <param name="freqNum"></param>
            <param name="ignoreZero">忽略0值,节约内存</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.Remove(System.String)">
            <summary>
            移除指定的观测量。
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            移除
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.Add(System.String,Gnsser.Data.Rinex.RinexObsValue)">
            <summary>
            添加一个观测类型和值
            </summary>
            <param name="type"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.Add(System.String,System.Double)">
            <summary>
            添加一个观测类型和值
            </summary>
            <param name="type"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.GetFirstValuableCode(System.Collections.Generic.List{System.String})">
            <summary>
            顺序遍历，选择第一个非0值的代码编号.如果没有找到，则返回null。
            </summary>
            <param name="candidateCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.TryGetValue(System.String)">
            <summary>
            获取记录值,如果没有该记录，则返回 0 .
            </summary>
            <param name="type">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.TryGetObsValue(System.String)">
            <summary>
            返回原始观测，若无返回 null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.RemoveOtherFrequences(System.Collections.Generic.List{System.Int32})">
            <summary>
            移除不包括的频率编号
            </summary>
            <param name="frequenceNumToRemained"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.RemoveFrequences(System.Collections.Generic.List{System.Int32})">
            <summary>
            移除指定频率编号
            </summary>
            <param name="frequenceNumToBeRemoved"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.TryGetValue(System.Collections.Generic.List{System.String})">
            <summary>
            获取值，若第一个非0，则直接返回。
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.Contains(System.String)">
            <summary>
            是否包含数据类型
            </summary>
            <param name="type">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.GetEnumerator">
            <summary>
            遍历器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexSatObsData.RemoveOthers(System.Collections.Generic.List{System.String})">
            <summary>
            移除其它。
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:Gnsser.Data.Rinex.IObservationStream`1">
            <summary>
            通用观测数据源接口。所有观测数据源都应该实现此接口。
            </summary>
            <typeparam name="TMaterial"></typeparam>
        </member>
        <member name="P:Gnsser.Data.Rinex.IObservationStream`1.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.IObservationStream`1.ObsInfo">
            <summary>
            观测概略信息
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ISingleSiteObsStream">
            <summary>
            单站通用观测数据源接口。所有观测数据源都应该实现此接口。
            以数据流方式传递的观测数据源。
            这种数据源比较节约内存，但是只能从起始位置一步一步的往下读取数据，不能获知整个数据流大小。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ISingleSiteObsStream.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ISingleSiteObsStream.NavPath">
            <summary>
            导航文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ISingleSiteObsStream.Get(Geo.Times.Time,System.Double)">
            <summary>
            获取指定时刻的观测数据。这种获取一般是原始数据，根据需要，采用处理器处理。
            </summary>
            <param name="gpsTime">时刻</param>
            <param name="toleranceSeccond">允许的时间差，单位秒</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SatelliteSystem">
            <summary>
            RINEX卫星系统类型。
            与 SatelliteType 不同。
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.G">
            <summary>
            GPS
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.R">
            <summary>
            GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.E">
            <summary>
            Galileo
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.S">
            <summary>
            SBAS payload
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.M">
            <summary>
            Mixed
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.SatelliteSystem.C">
            <summary>
            Compass
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileProcesserChain">
            <summary>
            责任链
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileProcesser">
            <summary>
            观测文件处理器。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.EpochObsProcesser">
            <summary>
            观测文件处理器。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.ObsFileTypeManager">
            <summary>
            观测文件观测类型管理器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.#ctor(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            构造函数
            </summary>
            <param name="ObsFile"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.ObsFileTypeManager.ObsFile">
            <summary>
            观测文件。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.ObsFileTypeManager.SatObsTypeMarkers">
            <summary>
            统计各类型的卫星观测类型出勤率。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.GetObsTypesWithAppearanceLesserThan(System.Double)">
            <summary>
            获取出现百分比小于指定值的观测类型
            </summary>
            <param name="maxPercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.RemoveObservers(System.Double)">
            <summary>
             若某一观测量值出勤率低， 则直接删除该观测量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.RemoveObserversInfo(Gnsser.Data.Rinex.RinexObsFile@,System.Double)">
            <summary>
            返回一个便于显示的字符串。
            </summary>
            <param name="obsFile"></param>
            <param name="maxPercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.RemoveObservers(Gnsser.Data.Rinex.RinexObsFile@,System.Double)">
            <summary>
             若某一观测量值出勤率低， 则直接删除该观测量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.GetObsTypesWithAppearanceLesserThan(Gnsser.Data.Rinex.RinexObsFile,System.Double)">
            <summary>
            获取出现百分比小于指定值的观测类型。
            </summary>
            <param name="maxPercentage"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.ObsFileTypeManager.GetSatObsTypeMarkers(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            获取文件的类型出入次数
            </summary>
            <param name="ObsFile"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SatObsTypeMarker">
            <summary>
            观测类型标记，用于统计观测类型的出勤次数，进而进行数据筛选。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SatObsTypeMarker.SatelliteType">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.SatObsTypeMarker.Markers">
            <summary>
            字典标记，标记出现的次数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.Markes(System.String)">
            <summary>
            设置该标记是否有值
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.SetObsTypeCount(System.String,System.Int32)">
            <summary>
            设置一个数字
            </summary>
            <param name="type"></param>
            <param name="count"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.Contains(System.String)">
            <summary>
            是否包含记录
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.TryGetCount(System.String)">
            <summary>
            若有，则返回，若无，则返回0.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.GetMaxCount">
            <summary>
            获取最大的数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.GetPercentage(System.String)">
            <summary>
            获取百分比。
            </summary>
            <param name="type"></param>
            <param name="totalCount"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatObsTypeMarker.GetPercentage(System.String,System.Int32)">
            <summary>
            获取百分比
            </summary>
            <param name="type"></param>
            <param name="totalCount"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.SatOrbitCaculator">
            <summary>
            依据卫星轨道参数获取卫星位置。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.SatOrbitCaculator.GetSatPos(Gnsser.EphemerisParam,Geo.Times.Time)">
            <summary>
             依据卫星轨道参数获取卫星位置。
            </summary>
            <param name="record"></param>
            <param name="gpstime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3File">
            <summary>
            Rinex Sp3 文件，一个对象代表一个SP3文件。采用时间和卫星编号双索引管理。
            按时间顺序依次向后排列。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.#ctor(Gnsser.Data.Rinex.Sp3Header)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.SatEphemerisCollection">
            <summary>
            按照卫星编号管理
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.IsBuildCollection">
            <summary>
            指示是否构建集合
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.CheckOrBuildIndexCollection">
            <summary>
            构建索引
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.SourceCode">
            <summary>
            数据源代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3File.Prns">
            <summary>
            所有的PRN
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.Add(Gnsser.Data.Rinex.Sp3Section)">
            <summary>
            添加到双索引
            </summary>
            <param name="Sp3Section"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.BuildIndexCollection">
            <summary>
            构建索引集合
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.RemoveFirst">
            <summary>
            快速移除第一个历元的数据
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.GetSatEphemerisCollection">
            <summary>
            生成集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3File.ToString">
            <summary>
            信息显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3Reader">
            <summary>
            Sp3 记录部分。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Reader.IsAvailableOnly">
            <summary>
            是否只读取合法数据
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Reader.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Reader.FilterdPrn">
            <summary>
            过滤PRN，，只读取这个，可以写为数组？？或增加系统类型？？2016.03.06
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.ReadAll">
            <summary>
            读取文件
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.TryGetStartTime">
            <summary>
            从文件开始获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.TryGetEndTime">
            <summary>
            从文件末尾获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.MoveNext">
            <summary>
            移动到下一个，尝试解析，如果到末尾了，则返回false
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Reader.RecordHeadSymbol">
            <summary>
            Sp3 LINE 23 (epoch header clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Reader.PositionClockSymbol">
            <summary>
            Sp3 LINE 24 (position and clock clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Reader.VelocityClockSymbol">
            <summary>
            Sp3 LINE 25 (velocity and clock clk)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Reader.EphemerisPosition">
            <summary>
            double add sp3为#cV格式时的单颗星星历内容第二行首两位字符
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.Sp3Reader.EphemerisVelocity">
            <summary>
            double add sp3为#cV格式时的单颗星星历内容第四行首两位字符
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.ReadSection(Gnsser.Data.Rinex.Sp3Header,System.IO.StreamReader,System.String,Gnsser.SatelliteNumber,System.Boolean)">
            <summary>
            读取 SP3 
            </summary>
            <param name="header"></param>
            <param name="r"></param>
            <param name="firstLine"></param>
            <param name="satNum">是否读取指定卫星的值</param>
            <param name="availableOnly">是否只返回可用的记录</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.ParseLine(System.String,System.Double@)">
            <summary>
            解析一行。原始读取。
            </summary>
            <param name="firstLine"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="clock"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.ParseTime(System.String)">
            <summary>
            解析时间
            </summary>
            <param name="firstLine"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Reader.IsEpochSectionFirstLine(System.String)">
            <summary>
            判断是否是起始行
            </summary>
            <param name="firstLine"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.Sp3Section">
            <summary>
            一个历元 的 Sp3 记录列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Section.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.Sp3Section.#ctor(Geo.Times.Time)">
            <summary>
            默认构造函数
            </summary>
            <param name="Time"></param>
        </member>
        <member name="P:Gnsser.Data.Rinex.Sp3Section.Time">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.InstantSp3Section">
            <summary>
            不同系统存储一个时刻的改正数。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.InstantSp3Section.GetMaxTime">
            <summary>
            获取最新时间。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.InstantSp3Section.GetMinTime">
            <summary>
            获取最老时间。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexHeaderLabel">
            <summary>
            Rinex 头文件标签。
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.RINEX_VERSION_TYPE">
            <summary>
            The "RINEX VERSION / TYPE" clk must be the prevObj clk in coefficient fileB
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.GLONASS_SLOT_FRQ">
            <summary>
            GLONASS SLOT / FRQ # RINEX 3.03
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.GLONASS_COD_PHS_BIS">
            <summary>
            GLONASS COD/PHS/BIS  RINEX 3.03
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.SYS_OBS_TYPES">
            <summary>
            Rinex 3.0
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.MARKER_TYPE">
            <summary>
            rinex 3.0
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.IONOSPHERIC_CORR">
            <summary>
            Ionospheric correction parameters
            - Correction type
            GAL = Galileo ai0 – ai2
            GPSA = GPS alpha0 - alpha3
            GPSB = GPS beta0 - beta3
            - Parameters
            GPS: alpha0-alpha3 or beta0-beta3 |
            GAL: ai0, ai1, ai2, zero
            </summary>
        </member>
        <member name="F:Gnsser.Data.Rinex.RinexHeaderLabel.TIME_SYSTEM_CORR">
             <summary>
             Corrections to transform the system time | |*
            to UTC or other time systems | |
            - Correction type | A4,1X, |
            GAUT = GAL to UTC a0, a1 | |
            GPUT = GPS to UTC a0, a1 | |
            SBUT = SBAS to UTC a0, a1 | |
            GLUT = GLO to UTC a0=TauC, a1=zero | |
            GPGA = GPS to GAL a0=A0G, a1=A1G | |
            GLGP = GLO to GPS a0=TauGPS, a1=zero | |
            - a0,a1 Coefficients of 1-deg polynomial | D17.10, |
            (a0 sec, a1 sec/sec) | D16.9, |
            CORR(s) = a0 + a1*DELTAT | |
            - TProduct Reference time for polynomial | I7, |
            (Fraction into GPS/GAL week) | |
            - W Reference week number | I5, |
            (GPS/GAL week, continuous number) | |
            TProduct and W zero for GLONASS. | |
            - S EGNOS, WAAS, or MSAS ... | 1X,A5,1X |
            (left-justified) | |
            Derived from MT17 service provider. | |
            If not known: Use Snn with | |
            nn = PRN-100 of satellite | |
            broadcasting the MT12 | |
            - U UTC Identifier (0 if unknown) | I2,1X |
            1=UTC(NIST), 2=UTC(USNO), 3=UTC(SU), | |
            4=UTC(BIPM), 5=UTC(Europe Lab), | |
            6=UTC(CRL), >6 = not assigned yet | |
            S and U for SBAS only. |
             </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexHeaderLabel.ContainLabel(System.String)">
            <summary>
            是否包含头部标签
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexHeaderLabel.HeaderLabels">
            <summary>
            头部标签
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Rinex.RinexUtil">
            <summary>
            RINEX文件工具。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexUtil.GetSatelliteType(Gnsser.Data.Rinex.RinexFileType)">
            <summary>
            由文件类型确定导航系统。
            </summary>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexUtil.SkipLines(System.IO.StreamReader,System.Int32)">
            <summary>
            StreamReader 略过的行数
            </summary>
            <param name="r">数据流阅读器</param>
            <param name="lineCount"></param>
        </member>
        <member name="M:Gnsser.Data.Rinex.RinexUtil.SkipHeader(System.IO.StreamReader)">
            <summary>
            /略去头部
            </summary>
            <param name="r">数据流阅读器</param>
        </member>
        <member name="T:Gnsser.Data.SatSimpleClockCollection">
            <summary>
            组合多文件简易钟差
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatSimpleClockCollection.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="M:Gnsser.Data.SatSimpleClockCollection.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Gnsser.Data.Rinex.SimpleClockFile}}},System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">按照类型读入的原始数据结构</param>
            <param name="isUniqueSource"></param>
            <param name="indicatedSource"></param>
        </member>
        <member name="T:Gnsser.Data.SatClockCollection">
            <summary>
            组合多文件钟差
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatClockCollection.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="M:Gnsser.Data.SatClockCollection.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Gnsser.Data.Rinex.ClockFile}}},System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">按照类型读入的原始数据结构</param>
            <param name="isUniqueSource"></param>
            <param name="indicatedSource"></param>
        </member>
        <member name="T:Gnsser.Data.SatClockCollection`2">
            <summary>
            单颗卫星的星历列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatClockCollection`2.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="M:Gnsser.Data.SatClockCollection`2.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{`1}}},System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">按照类型读入的原始数据结构</param>
            <param name="isUniqueSource"></param>
            <param name="indicatedSource"></param>
        </member>
        <member name="T:Gnsser.Data.TimedSatObjectCollection`1">
             <summary>
            多系统卫星的属性列表
             </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObjectCollection`1.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="M:Gnsser.Data.TimedSatObjectCollection`1.Create(Gnsser.SatelliteNumber)">
            <summary>
            创建一个
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TimedSatObjectCollection`2">
             <summary>
            多系统卫星的属性列表
             </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObjectCollection`2.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.SourceCode">
            <summary>
            数据源前缀，一般以前两个字母表示，如ig，wh
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.IsSameSourceRequired">
            <summary>
            是否需要相同的数据源。精密定位时需要。默认需要。
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.TimePeriod">
            <summary>
            最长的时间段
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.Interval">
            <summary>
            返回其中一个间隔，默认为1
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.Prns">
            <summary>
            当前所有的卫星编号集合
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObjectCollection`2.SatelliteTypes">
            <summary>
            卫星系统类型
            </summary>
        </member>
        <member name="T:Gnsser.Data.TimedSatObject`1">
            <summary>
            单颗卫星具有时间的对象
            </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.#ctor(Gnsser.SatelliteNumber)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObject`1.SourceCode">
            <summary>
            数据源前缀，一般以前两个字母表示，如ig，wh
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObject`1.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObject`1.IsOrdered">
            <summary>
            用于指示，是否已经按照时间大小排序。
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObject`1.IsSameSourceRequired">
            <summary>
            是否需要相同的数据源。精密定位时需要。默认需要。
            </summary>
        </member>
        <member name="P:Gnsser.Data.TimedSatObject`1.OrderedTimes">
            <summary>
            排序后的时间序列,注意：每生成一次，对象切换一次。
            </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.GetInterval">
            <summary>
            计算并获取采样间隔
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Gnsser.Data.TimedSatObject`1.TimePeriod" -->
        <member name="M:Gnsser.Data.TimedSatObject`1.RemoveFirst">
            <summary>
            快速移除第一个历元的数据
            </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.CheckTimeOrder(System.Int32)">
            <summary>
            确保已排序
            </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.Add(Gnsser.Data.TimedSatObject{`0})">
            <summary>
            批量添加
            </summary>
            <param name="satEphemeris"></param>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加
            </summary>
            <param name="satEphemeris"></param>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.Add(System.Collections.Generic.ICollection{`0})">
            <summary>
            添加
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.Add(`0)">
            <summary>
            添加一个星历结果。
            </summary>
            <param name="ephemeris"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.Build">
            <summary>
            构建排序索引
            </summary>
        </member>
        <member name="M:Gnsser.Data.TimedSatObject`1.ToString">
            <summary>
            简要信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.BaseIgsProductSourceProvider`1">
            <summary>
            基础的IGS产品提供器
            </summary>
        </member>
        <member name="M:Gnsser.Data.BaseIgsProductSourceProvider`1.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.TimeIntervalSeconds">
            <summary>
            时间间隔，决定是时(3600)、天(86400)、还是周
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.IgsProductUrlPathBuilder">
            <summary>
            IGS URL地址生成器
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.IgsProductSourceType">
            <summary>
            IGS 产品类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.Option">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.InputFileManager">
            <summary>
            文件路径管理器
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.IgsProductLocalPathBuilder">
            <summary>
            路径生成器
            </summary>
        </member>
        <member name="P:Gnsser.Data.BaseIgsProductSourceProvider`1.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.BaseIgsProductSourceProvider`1.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.BaseIgsProductSourceProvider`1.GetIgsProductLocalPathes(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            获取本地库的IGS产品路径,如果指定了唯一数据源，则会只返回该数据源，否则，返回全部。
            自动过滤并删除大小为0的文件。
            </summary>
            <param name="satType"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.BaseIgsProductSourceProvider`1.DownloadProduct(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            下载IGS产品。并返回成功后的本地路径。
            </summary>
            <param name="gpsTime"></param>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsGridIonoSourceProvider">
            <summary>
            根据输入设置，提供连续的多系统的星历服务
            </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsGridIonoSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoSourceProvider.BuildFileBufferKey(System.String)">
            <summary>
            构建文件缓存关键字
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:Gnsser.Data.IgsErpSourceProvider">
             <summary>
            根据设置和需求，自动获取ERP服务
             </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsErpSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsErpSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsErpSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsErpSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsGridIonoServiceAutoProvider">
            <summary>
            IGS ERP服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsGridIonoServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsErpServiceAutoProvider">
            <summary>
            IGS ERP服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsErpServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsErpServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsErpServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsServiceAutoProvider`1">
            <summary>
            抽象IGS服务提供者
            </summary>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="P:Gnsser.Data.IgsServiceAutoProvider`1.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsServiceAutoProvider`1.DataSourceOption">
            <summary>
            一些额外信息的获取
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsServiceAutoProvider`1.Option">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsServiceAutoProvider`1.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.GetService(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            获取星历
            </summary>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.GetService(Geo.Times.Time,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            获取星历
            </summary>
            <param name="time"></param>
            <param name="SatelliteTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.GetService(Gnsser.SessionInfo)">
            <summary>
            获取星历
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.GetService(Geo.Times.Time)">
            <summary>
            获取星历,与系统无关
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.GetService">
            <summary>
            获取星历
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsServiceAutoProvider`1.CreateService(Geo.Times.Time)">
            <summary>
            创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsEphemerisServiceAutoProvider">
            <summary>
            IGS 星历服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsEphemerisServiceAutoProvider.#ctor(System.Int32,System.Boolean)">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.Data.IgsEphemerisServiceAutoProvider.InerpolateOrder">
            <summary>
            插值阶次
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsEphemerisServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IndicatedEphemerisService">
            <summary>
            指定路径的多系统星历服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IndicatedEphemerisService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.IndicatedEphemerisService.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.String},Gnsser.GnssProcessOption,Gnsser.Data.IgsProductSourceOption)">
            <summary>
            构造函数
            </summary>
            <param name="pathes"></param>
        </member>
        <member name="P:Gnsser.Data.IndicatedEphemerisService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.Data.IndicatedEphemerisService.TimePeriod">
            <summary>
            时间段
            </summary>
        </member>
        <member name="T:Gnsser.Data.IIgsProductFile">
            <summary>
            IGS产品接口
            </summary>
        </member>
        <member name="P:Gnsser.Data.IIgsProductFile.TimePeriod">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.IIgsProductFile.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="T:Gnsser.Data.AbstractIgsProductSourceProvider`2">
            <summary>
            根据输入设置，提供连续的多系统的产品服务。
            如果本地没有，则自动从网络下载。
            </summary> 
        </member>
        <member name="F:Gnsser.Data.AbstractIgsProductSourceProvider`2.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="F:Gnsser.Data.AbstractIgsProductSourceProvider`2.LoadedIgsProductFiles">
            <summary>
            IGS产品缓存，避免重复读取，减少内存压力
            </summary>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.BuildMultiSysServices">
            <summary>
            按照不同系统类型建立按服务类字典。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.AbstractIgsProductSourceProvider`2.IsConnectIgsProduct">
            <summary>
            是否拼接IGS产品，如星历可以隔日计算。
            </summary>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.CreateSatTypeBasedServices(Gnsser.SatelliteType)">
            <summary>
            建立按天组织的服务。一个系统类型一个服务。
            如果失败，则网络获取一次。
            </summary>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.AddToDic(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{`0}},System.Collections.Generic.List{`0})">
            <summary>
            将产品分类存储
            </summary>
            <param name="dic"></param>
            <param name="files"></param>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.GetFiles(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            根据类型和历元，按照给定的文件命名规则，读取本地文件
            </summary>
            <param name="satType">卫星类型</param>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.BuildFileBufferKey(System.String)">
            <summary>
            构建文件缓存关键字
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AbstractIgsProductSourceProvider`2.LoadFile(System.String)">
            <summary>
            在本地读取IGS产品
            </summary>
            <param name="localPath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsSatSimpleClockSourceProvider">
            <summary>
            根据输入设置，提供连续的多系统的星历服务
            </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsSatSimpleClockSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsSatSimpleClockSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsSatSimpleClockSourceProvider.IsSkipSite">
            <summary>
            是否略过测站钟差，这样可以节约内存
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsSatSimpleClockSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsSatSimpleClockSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsSatClockSourceProvider">
            <summary>
            根据输入设置，提供连续的多系统的星历服务
            </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsSatClockSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsSatClockSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsSatClockSourceProvider.IsSkipSite">
            <summary>
            是否略过测站钟差，这样可以节约内存
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsSatClockSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsSatClockSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsProductDirectoryModel">
            <summary>
            IGS 产品目录模板，即存储文件的位置
            </summary>
        </member>
        <member name="F:Gnsser.Data.IgsProductDirectoryModel.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductDirectoryModel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.Data.IgsProductSourceOption">
            <summary>
            IGS  产品选项。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsProductSourceOption.#ctor(Geo.Times.BufferedTimePeriod,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认构造函数
            </summary>
            <param name="SatelliteType">系统类型</param>
            <param name="timePeriod">时段信息</param>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IsConnectIgsProduct">
            <summary>
            是否连接IGS产品
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.InterpolateOrder">
            <summary>
            星历插值阶次
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IsSkipIonoContent">
            <summary>
            有时候只需要头文件即可，如Iono
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.MinSequentialSatCount">
            <summary>
            最小连续的卫星数量，用于星历拟合
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.Sp3EphMaxBreakingCount">
            <summary>
            精密星历允许的断裂次数
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IsDownloadingSurplurseIgsProducts">
            <summary>
            是否下载多余的IGS产品，否则只下载一个。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.TimePeriod">
            <summary>
            数据源时段信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.SatelliteTypes">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductSourceDic">
            <summary>
            IGS数据源关键字,按照不同系统指定。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductUrlDirectories">
            <summary>
            URL 目录
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductUrlModels">
            <summary>
            URL 模板
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductSources">
            <summary>
            通用 IGS 数据源关键字。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductLocalDirectory">
            <summary>
            IGS 产品本地目录。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IgsProductLocalDirectories">
            <summary>
            IGS 产品本地目录。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IsUniqueSource">
            <summary>
            是否采用唯一数据源,即IndicatedSourceCode的内容，高精度常用
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.IndicatedSourceCode">
            <summary>
            指定的数据源代码如，ig,wh,co
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductSourceOption.MaxIgsProductCacheCount">
            <summary>
            IGS产品最大缓存数量,含SP3、Clk等总共的数量
            </summary>
        </member>
        <member name="T:Gnsser.Data.IgsProductFileNameModel">
            <summary>
            IGS产品名称生成器
            </summary>
        </member>
        <member name="F:Gnsser.Data.IgsProductFileNameModel.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileNameModel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductFileNameModel.extensions">
            <summary>
            扩展名数据
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductFileNameModel.GetExtensionModel(Gnsser.IgsProductType)">
            <summary>
            获取扩展名
            </summary>
            <param name="IgsProductType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsEphemerisSourceProvider">
            <summary>
            根据输入设置，提供连续的多系统的星历服务
            </summary> 
        </member>
        <member name="F:Gnsser.Data.IgsEphemerisSourceProvider.log">
            <summary>
            日志记录。错误信息记录在日志里面。
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsEphemerisSourceProvider.#ctor(Gnsser.Data.IgsProductSourceOption,Gnsser.IgsProductType,System.Int32)">
            <summary>
            多系统数据源服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsEphemerisSourceProvider.GetDataSourceService">
            <summary>
            返回服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsEphemerisSourceProvider.LoadFile(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatEphemerisCollection">
            <summary>
            卫星星历集合
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatEphemerisCollection.#ctor(System.Boolean,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="isUniqueSource">是否唯一数据源，高精度的需求</param>
            <param name="SourceCode">数据源代码，默认ig</param>
        </member>
        <member name="M:Gnsser.Data.SatEphemerisCollection.#ctor(System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Gnsser.Data.Rinex.Sp3File}}},System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="data">按照类型读入的原始数据结构</param>
            <param name="isUniqueSource"></param>
            <param name="indicatedSource"></param>
        </member>
        <member name="P:Gnsser.Data.SatEphemerisCollection.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ClockFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.#ctor(Gnsser.Data.SatSimpleClockCollection)">
            <summary>
            构造函数
            </summary>
            <param name="SatClockCollection"></param>
        </member>
        <member name="F:Gnsser.Data.SimpelCombinedSatClockService.clockInterpolators">
            <summary>
            缓存插值器
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpelCombinedSatClockService.ClockFile">
            <summary>
            钟差文件，采用懒加载的方式
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpelCombinedSatClockService.SatelliteTypes">
            <summary>
            包含的卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取指定卫星在时段内的序列
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.GetClocks(Gnsser.SatelliteNumber)">
            <summary>
            指定卫星的所有钟差序列
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.GetInterval">
            <summary>
            采样间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.Get(System.String,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="nameOrPrn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否可用
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.GetClockInterpolator(System.String)">
            <summary>
            插值器
            </summary>
            <param name="prnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.SimpelCombinedSatClockService.TimePeriod">
            <summary>
            有效时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.CompareTo(Gnsser.Data.SimpelCombinedSatClockService)">
            <summary>
            时段比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpelCombinedSatClockService.ToString">
            <summary>
            打印输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.CombinedSatClockService">
             <summary>
            只针对卫星的，多文件组合钟差数据源
             </summary>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="ClockFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.#ctor(Gnsser.Data.SatClockCollection)">
            <summary>
            构造函数
            </summary>
            <param name="SatClockCollection"></param>
        </member>
        <member name="F:Gnsser.Data.CombinedSatClockService.clockInterpolators">
            <summary>
            缓存插值器
            </summary>
        </member>
        <member name="P:Gnsser.Data.CombinedSatClockService.ClockFile">
            <summary>
            钟差文件，采用懒加载的方式
            </summary>
        </member>
        <member name="P:Gnsser.Data.CombinedSatClockService.SatelliteTypes">
            <summary>
            包含的卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取指定卫星在时段内的序列
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.GetClocks(Gnsser.SatelliteNumber)">
            <summary>
            指定卫星的所有钟差序列
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.GetInterval">
            <summary>
            采样间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.Get(System.String,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="nameOrPrn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否可用
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.GetClockInterpolator(System.String)">
            <summary>
            插值器
            </summary>
            <param name="prnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.CombinedSatClockService.TimePeriod">
            <summary>
            有效时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.CompareTo(Gnsser.Data.CombinedSatClockService)">
            <summary>
            时段比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.CombinedSatClockService.ToString">
            <summary>
            打印输出
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.AbstractClockService">
            <summary>
            抽象的钟差服务类
            </summary>
        </member>
        <member name="T:Gnsser.Data.AbstractSimpleClockService">
            <summary>
            抽象的钟差服务类
            </summary>
        </member>
        <member name="T:Gnsser.Data.AbstractClockService`1">
            <summary>
            抽象的钟差服务类
            </summary>
        </member>
        <member name="T:Gnsser.Data.IgsSimpleClockServiceAutoProvider">
            <summary>
            IGS 钟差服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsSimpleClockServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsSimpleClockServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsSimpleClockServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsClockServiceAutoProvider">
            <summary>
            IGS 钟差服务提供器，提供无间断，多系统的星历。
            自动匹配提供。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsClockServiceAutoProvider.#ctor">
            <summary>
            默认构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.IgsClockServiceAutoProvider.#ctor(Gnsser.Data.IgsProductSourceOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="opt"></param>
        </member>
        <member name="M:Gnsser.Data.IgsClockServiceAutoProvider.CreateService(Geo.Times.Time)">
            <summary>
            通过给定的时间创建服务
            </summary>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.AbstractErpService">
            <summary>
            ERP服务接口
            </summary>
        </member>
        <member name="P:Gnsser.Data.AbstractErpService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.AbstractErpService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.Data.AbstractErpService.Get(Geo.Times.Time)">
             <summary>
            获取服务
             </summary>
             <param name="time"></param>
             <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsFile">
            <summary>
            球谐系数 文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsFile.MaxDegree">
            <summary>
            最大的阶数。
            </summary>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsItem">
            <summary>
            球谐系数项目，下标编号为次数Order。
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsItem.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="count"></param> 
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsItem.C">
            <summary>
            C 
            </summary>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsItem.S">
            <summary>
            S
            </summary>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsItem.Anm">
            <summary>
            系数 C 的别称
            </summary>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsItem.Bnm">
            <summary>
            系数 S 的别称
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsItem.Set(System.Int32,Geo.RmsedNumeral,Geo.RmsedNumeral)">
            <summary>
            设置
            </summary>
            <param name="order">阶次</param>
            <param name="cOrAnm"></param>
            <param name="sOrBnm"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsItem.Set(System.Int32,Geo.RmsedNumeral)">
            <summary>
            设置,通过Order的正负判断数据是C还是S，后者为负。
            </summary>
            <param name="order">阶次</param>
            <param name="cOrAnm_sOrBnm"></param> 
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsItem.GetPair(System.Int32)">
            <summary>
            获取，First cOrAnm, Second sOrBnm
            </summary>
            <param name="order">阶次</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsWriter">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsWriter.#ctor(Geo.FileOption)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsWriter.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsWriter.Write(Gnsser.Data.SphericalHarmonicsFile,System.Int32)">
            <summary>
            写入
            </summary>
            <param name="filePath"></param>
            <param name="maxOrder">只读取到相应的阶次，节约时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsReader">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsReader.#ctor(Geo.FileOption)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsReader.Read(System.Int32)">
            <summary>
            读取 
            </summary> 
            <param name="maxOrder">只读取到相应的阶次，节约时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FastLegendreCalculater">
            <summary>
            勒让德函数递推
            </summary>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.#ctor(System.Double)">
            <summary>
            勒让德函数递推
            </summary>
            <param name="Theta">天顶距？？</param>
        </member>
        <member name="F:Gnsser.Data.FastLegendreCalculater.GM">
            <summary>
            const
            </summary>
        </member>
        <member name="P:Gnsser.Data.FastLegendreCalculater.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="F:Gnsser.Data.FastLegendreCalculater.a">
            <summary>
            m
            </summary>
        </member>
        <member name="P:Gnsser.Data.FastLegendreCalculater.theta">
            <summary>
            天顶距
            </summary>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.CheckLegendre(System.Int32,System.Double,System.Func{System.Int32,System.Int32,System.Double,System.Double})">
            <summary>
            检核勒让德精度
            </summary>
            <param name="n"></param>
            <param name="theta"></param>
            <param name="Legendre"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.GetValue(System.Int32,System.Int32)">
            <summary>
            取值
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.Leg(System.Int32,System.Double)">
            <summary>
            新方法，返回数组，下标对应m
            </summary>
            <param name="n"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.legMsmallThanN(System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            如果M小于N时
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta"></param>
            <param name="next1"></param>
            <param name="next2"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.legDiagonal(System.Int32,System.Double)">
            <summary>
            刚好在对角线上时
            </summary>
            <param name="dimension"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.legDiagonal(System.Int32,System.Double,System.Double)">
            <summary>
            刚好在对角线上时dimension==n
            </summary>
            <param name="dimension"></param>
            <param name="theta"></param>
            <param name="prevDiagonal"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.LegendreBelikov(System.Int32,System.Int32,System.Double)">
            <summary>
            Belikov 列推法
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.BelikovNotMormal(System.Int32,System.Int32,System.Double)">
            <summary>
            ｐｎｍ （ｃｏｓθ）是非正常化的勒让德函数
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.LegendreStrideOrder(System.Int32,System.Int32,System.Double)">
            <summary>
            跨阶次递推法
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.GetDeltaValue(System.Int32)">
            <summary>
            计算 σｍ
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.LegendreCosTheta(System.Int32,System.Int32,System.Double)">
            <summary>
            大地测量中经常使用的是标准前向列推法.
            可以看出,当m接近于n时,有anm≈ n。因此,当cosθ接近1,n取值较大时,m取值从1到n,相应的递推系数(anmcosθ)较大,
            同样,不得不考虑递推过程中计算舍入误差的传递问题。
            故此,就必须考虑改进上述递推公式或改变递推路径
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.LegendreCosThetaFormRow(System.Int32,System.Int32,System.Double)">
            <summary>
            !!!计算错误！！！！！2017.11.07， czs
            标准前向行推法,勒让德函数递推,天顶距，单位rad.
            依据(1)～ (3)式便可求出任意阶次的 Pnm(cosθ)。但当θ接近两极极点,并且n、m取值较大时,递推系数(gnm cotθ)较大,
            这就不得不考虑递推过程中计算舍入误差的传递问题,亦即能否满足精度要求。
            (1)式的递推是极其不稳定的,因此该递推方法在大地测量中运用较少。
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="theta">天顶距，单位rad</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.LegendreSinPhi(System.Int32,System.Int32,System.Double)">
            <summary>
            勒让德多项式函数，SIN 高度角
            </summary>
            <param name="n">N</param>
            <param name="m">M</param>
            <param name="phi">此处为SIN 则是高度角，非天顶距，单位： rad</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FastLegendreCalculater.D_leg(System.Int32,System.Int32,System.Double)">
            <summary>
            计算勒让德导数函数
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="phi"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsCalculater">
            <summary>
            球谐函数计算器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.#ctor(Gnsser.Data.SphericalHarmonicsFile)">
            <summary>
            球谐函数计算器
            </summary>
            <param name="File"></param>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsCalculater.IsCommon2DSphericalHarmonics">
            <summary>
            是否是从0开始的普通球谐函数，与高程无关，二维，如电离层、高程和深度数据，即没有高程
            </summary>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsCalculater.File">
            <summary>
            文件
            </summary>
        </member>
        <member name="F:Gnsser.Data.SphericalHarmonicsCalculater.a">
            <summary>
            m
            </summary>
        </member>
        <member name="F:Gnsser.Data.SphericalHarmonicsCalculater.GM">
            <summary>
            const
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.GetValue(System.Int32,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取值
            </summary>
            <param name="order">最大阶次</param>
            <param name="coord">经纬度坐标，球面坐标</param>
            <param name="radius">球半径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.GetValue(System.Int32,Geo.Coordinates.Polar)">
            <summary>
            获取值
            </summary>
            <param name="order"></param>
            <param name="coord">球坐标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.GetValue(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            计算值，单位：弧度
            </summary>
            <param name="nMax">最大阶次</param>
            <param name="r">球半径</param>
            <param name="phi_rad">球坐标的纬度，高度角，弧度</param>
            <param name="lambda_rad">球坐标的经度，方位角，弧度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.FirstSuperposition(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            前面的迭代
            </summary>
            <param name="nMax"></param>
            <param name="lambda_rad"></param>
            <param name="phi_rad">地心纬度</param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.GetCommon2DSphericalHarmonicsValue(System.Int32,System.Double,System.Double)">
            <summary>
            常规高程无关球谐函数，如获取高程或深度，电离层电子数等。
            </summary>
            <param name="nMax"></param>
            <param name="lambda_rad"></param>
            <param name="phi_rad"> 地心纬度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.HarmonicsSuperposition(System.Int32,System.Double,System.Double,Gnsser.Data.FastLegendreCalculater)">
            <summary>
            球谐函数迭代
            </summary>
            <param name="theta_rad">rad</param>
            <param name="n"></param>
            <param name="lambda">rad</param>
            <param name="leg">rad，勒让德直接取值</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsCalculater.GetItemValue(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            计算叠加项
            </summary>
            <param name="Cnm"></param>
            <param name="Snm"></param>
            <param name="lambda">rad</param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SphericalHarmonicsService">
            <summary>
            球谐系数
            </summary>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsService.#ctor(System.String)">
            <summary>
            球谐系数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SphericalHarmonicsService.#ctor(Geo.FileOption)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.SphericalHarmonicsService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Gnsser.Data.FcbFileHeaderLabel">
            <summary>
            头文件标签
            </summary>
        </member>
        <member name="T:Gnsser.Data.FcbFileHeader">
            <summary>
            FCB 头部文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.Verion">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.StationNames">
            <summary>
            参与计算的测站列表。
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.StationCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.Comments">
            <summary>
            注释。
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFileHeader.SatType">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="T:Gnsser.Data.WideLaneValue">
            <summary>
            /WL Value
            </summary>
        </member>
        <member name="M:Gnsser.Data.WideLaneValue.GetBsdDic(Gnsser.SatelliteNumber)">
            <summary>
            BSD
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FcbFile">
            <summary>
            FCB 数据文件。IGS发布的产品。
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbFile.#ctor(Gnsser.Data.FcbFileHeader)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFile.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFile.Interval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbFile.FcbInfos">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbFile.Clear">
            <summary>
            Method to clear all previously loaded satellite satData.
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbFile.GetFcbOfBsdDic(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取产品
            </summary>
            <param name="time"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbFile.GetFcbOfBsdValue(Geo.Times.Time,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            FcbOfBsdValue 
            </summary>
            <param name="Time"></param>
            <param name="prn"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbFile.GetValue(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            检索获取
            </summary>
            <param name="prn"></param>
            <param name="Time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbFile.GetFcbValue(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取第一个满足条件的对象
            </summary>
            <param name="prn">卫星编号</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FcbValue">
            <summary>
             FCB 数据服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbValue.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double,System.Double)">
            <summary>
            初始化一个卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbValue.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.FcbValue.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Gnsser.Data.FcbFileReader">
            <summary>
            FCB信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbFileReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.FcbFileReader.ReadHeader(System.String)">
            <summary>
            读取头文件。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbFileReader.Read">
            <summary>
            读取FCB信息。
            由于信息文件较小，这里一次性读取完毕。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbFileReader.SkipHeader(System.IO.StreamReader,System.String)">
            <summary>
            跳过头部
            </summary>
            <param name="streamReader"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FcbDataService">
            <summary>
            卫星DCB服务。
            </summary>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dcbFileDir">地址目录</param>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="dcbFileDir">地址目录</param>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.GetWLFcbOfBsd(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取产品
            </summary>
            <param name="time"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.GetWLFcb(Geo.Times.Time)">
            <summary>
            获取产品
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.GetNLFcbOfBsd(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取产品
            </summary>
            <param name="time"></param>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.GetNLFcbOfBsdValue(Geo.Times.Time,Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            获取FCB
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <param name="basePrn">基准卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FcbDataService.BuildName(Geo.Times.Time,System.String)">
            <summary>
            sgg19260_igs.fcb
            </summary>
            <param name="time"></param>
            <param name="sourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Gpt2File.#ctor(System.Collections.Generic.List{Gnsser.Data.Gpt2Value})">
            <summary>
            构造函数
            </summary>
            <param name="VMF1Infos"></param>
        </member>
        <member name="P:Gnsser.Data.Gpt2File.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Gpt2File.Gpt2Infos">
            <summary>
            数据列表
            </summary>   
        </member>
        <member name="M:Gnsser.Data.Gpt2File.Clear">
            <summary>
            清除所有
            </summary>
        </member>
        <member name="M:Gnsser.Data.Gpt2File.GetGridInfo(Geo.Times.Time,System.Double,System.Double,System.Double)">
            <summary>
            获取四个格网点,并进行内插
            </summary>
            <param name="lat"></param>
            <param name="lon"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Gpt2File1Degree.#ctor(System.Collections.Generic.List{Gnsser.Data.Gpt2Value1Degree})">
            <summary>
            构造函数
            </summary>
            <param name="VMF1Infos"></param>
        </member>
        <member name="P:Gnsser.Data.Gpt2File1Degree.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Gpt2File1Degree.Gpt2Infos">
            <summary>
            数据列表
            </summary>   
        </member>
        <member name="M:Gnsser.Data.Gpt2File1Degree.Clear">
            <summary>
            清除所有
            </summary>
        </member>
        <member name="M:Gnsser.Data.Gpt2File1Degree.GetGridInfo_1Degree(Geo.Times.Time,System.Double,System.Double,System.Double)">
            <summary>
            获取四个格网点,并进行内插
            </summary>
            <param name="lat"></param>
            <param name="lon"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Gpt2Res.GeoCoord">
            <summary>
            大地坐标
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.lon">
            <summary>
            经度
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.hgt">
            <summary>
            大地高
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.p">
            <summary>
            压强 pressure in hPa 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.T">
            <summary>
            temperature in degrees Celsius 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.dT">
            <summary>
            temperature lapse rate in degrees per km  
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.e">
            <summary>
             water vapour pressure in hPa 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.ah">
            <summary>
            hydrostatic mapping function coefficient at zero height (VMF1)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.aw">
            <summary>
            wet mapping function coefficient (VMF1)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res.undu">
            <summary>
            geoid undulation in m (vector of length nstat)
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res1Degree.la">
            <summary>
            water vapor decrease factor 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Res1Degree.Tm">
            <summary>
            mean temperature of the water vapor in degrees Kelvin 
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.lon">
            <summary>
            经度
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.pre">
            <summary>
            Pressure pressure in Pascal
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.T">
            <summary>
            temperature in Kelvin
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.dT">
            <summary>
            temperature lapse rate in Kelvin/m
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.Q">
            <summary>
            specific humidity in kg/kg
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.undu">
            <summary>
            大地水准面起伏geoid undulation in m
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.Hs">
            <summary>
            orthometric grid height in m
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.ah">
            <summary>
            hydrostatic mapping function coefficient, dimensionless
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value.aw">
            <summary>
            wet mapping function coefficient, dimensionless
            </summary>
        </member>
        <member name="T:Gnsser.Data.pressure">
            <summary>
            Pressure pressure in Pascal
            </summary>
        </member>
        <member name="T:Gnsser.Data.T">
            <summary>
            温度 temperature in Kelvin
            </summary>
        </member>
        <member name="T:Gnsser.Data.Q">
            <summary>
            specific humidity in kg/kg
            </summary>
        </member>
        <member name="T:Gnsser.Data.dT">
            <summary>
            temperature lapse rate in Kelvin/m
            </summary>
        </member>
        <member name="T:Gnsser.Data.ah">
            <summary>
            hydrostatic mapping function coefficient, dimensionless
            </summary>
        </member>
        <member name="T:Gnsser.Data.aw">
            <summary>
            wet mapping function coefficient, dimensionless
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value1Degree.la">
            <summary>
            % water vapor decrease factor, dimensionless
            </summary>
        </member>
        <member name="F:Gnsser.Data.Gpt2Value1Degree.Tm">
            <summary>
            % mean temperature in Kelvin
            </summary>
        </member>
        <member name="T:Gnsser.Data.Tm">
            <summary>
              mean temperature of the water vapor in degrees Kelvin
            </summary>
        </member>
        <member name="M:Gnsser.Data.Gpt2FileReader.#ctor(System.String)">
            <summary>
            读取器
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2FileReader.Read">
            <summary>
            读取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Gpt2FileReader1Degree.#ctor(System.String)">
            <summary>
            读取器
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2FileReader1Degree.Read">
            <summary>
            读取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="gpt2FilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gpt2FilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService.Acquire(Geo.Times.Time,Geo.Coordinates.GeoCoord)">
            <summary>
            获取
            </summary>
            <param name="time"></param>
            <param name="geoCoord"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Gpt2DataService.Count">
            <summary>
            数量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService1Degree.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="gpt2FilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService1Degree.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gpt2FilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService1Degree.Acquire(Geo.Times.Time,Geo.Coordinates.GeoCoord)">
            <summary>
            获取
            </summary>
            <param name="time"></param>
            <param name="geoCoord"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Gpt2DataService1Degree.Count">
            <summary>
            数量。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Gpt2DataService1Degree.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoFile">
            <summary>
            电离层文件。
            TEC 单位为TECU，1 TECU= 1E16 个电子
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.DcbsOfSites">
            <summary>
            DCB of Site
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.DcbsOfSats">
            <summary>
            DCB of PRN
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoFile.TimePeriod">
            <summary>
            时间范围读完后赋值
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoFile.Add(Gnsser.Data.IonoSection)">
            <summary>
            增加一个
            </summary>
            <param name="section"></param>
        </member>
        <member name="T:Gnsser.Data.IonoSection">
            <summary>
            电离层历元结果，关键字为纬度，记录值为经度和数值
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoSection.#ctor">
            <summary>
            构造函数,关键字为纬度，记录值为经度和数值
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoSection.Header">
            <summary>
            头部
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoSection.Time">
            <summary>
            当前历元
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoSection.GetNumeralKeyDic(System.Boolean)">
            <summary>
            数据字典
            </summary>
            <param name="isRms"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoSection.GetGeoCoords(System.Boolean)">
            <summary>
            获取坐标集合,其中，高程作为数据
            </summary>
            <param name="isRms"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoRecord">
            <summary>
            电离层记录,一个纬度对应全部经度。
            </summary>
        </member>
        <member name="T:Gnsser.Data.IncreaseValue">
            <summary>
            增量数据。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IncreaseValue.Start">
            <summary>
            起始数据
            </summary>
        </member>
        <member name="P:Gnsser.Data.IncreaseValue.End">
            <summary>
            结束数据
            </summary>
        </member>
        <member name="P:Gnsser.Data.IncreaseValue.Increament">
            <summary>
            增量
            </summary>
        </member>
        <member name="P:Gnsser.Data.IncreaseValue.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="M:Gnsser.Data.IncreaseValue.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoHeader">
            <summary>
            电离层头文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoHeader.#ctor">
            <summary>
            电离层头文件
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.Interval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.FileInfo">
            <summary>
            文件信息，通常是创建信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.StationsWithBiasRms">
            <summary>
            测站 DIFFERENTIAL CODE BIASES
            </summary>
        </member>
        <member name="P:Gnsser.Data.IonoHeader.SatellitesWithBiasRms">
            <summary>
            卫星 DIFFERENTIAL CODE BIASES
            </summary>
        </member>
        <member name="T:Gnsser.Data.IonoReader">
            <summary>
            电离层 记录部分，不适用于遍历，更适用于一次性读取。
            遍历的话，先全读取数据部分，遍历的只是最后RMS部分。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.IonoReader.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoReader.ReadHeader(System.String)">
            <summary>
             读取RINEX文件的头文件。
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.ReadAll(System.Boolean)">
            <summary>
            读取文件
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.TryGetStartTime">
            <summary>
            从文件开始获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.TryGetEndTime">
            <summary>
            从文件末尾获取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.IsStartLineOfEpochMapSection(System.String)">
            <summary>
            是否是数据的开始
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.IsFirstLineOfEpochMapSectionWithTime(System.String)">
            <summary>
            第一行
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.MoveNext">
            <summary>
            移动到下一个，尝试解析，如果到末尾了，则返回false
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.ReadSection(Gnsser.Data.IonoFile,Gnsser.Data.IonoHeader,System.IO.StreamReader)">
            <summary>
            读取历元对象
            </summary>
            <param name="Header"></param>
            <param name="StreamReader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoReader.ReadNextNoNullLine(System.IO.StreamReader)">
            <summary>
            读取下一行有内容的行，非空行，空白行。
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.GetFirstContentLine(System.String)">
            <summary>
            读取第一个内容行。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.ReadContentLine(System.IO.StreamReader,System.Collections.Generic.List{System.String})">
            <summary>
            读取并返回 RINEX 内容行。如果有注释行，则读取注释，继续读取，返回新的内容行。
            </summary>
            <param name="r">StreamReader</param>
            <param name="comments">注释</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.IsCommentLine(System.String)">
            <summary>
            判断本行是否是注释行。即，在60列时，具有COMMENT标识。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.GetCommenValue(System.String)">
            <summary>
            获取注释行的内容。
            </summary>
            <param name="line">输入行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IonoReader.SubString(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            截取包含非ascii码的字符串，如汉字
            </summary>
            <param name="line"></param>
            <param name="nonAscCount"></param>
            <param name="fromIndex"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.GridIonoFileService">
            <summary>
            电离层文件的读取与服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.#ctor(Gnsser.Data.IonoFile)">
            <summary>
            以文件初始化
            </summary>
            <param name="IonoFile"></param>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.Init">
            <summary>
            初始化插值器
            </summary>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.SetFile(Gnsser.Data.IonoFile)">
            <summary>
            修改数据源，重新初始化。
            </summary>
            <param name="IonoFile"></param>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.IonoFile">
            <summary>
              文件 
            </summary>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.TimePeriod">
            <summary>
            有效服务时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.HeightOfModel">
            <summary>
            电离层薄层模型的高度 450 000 M
            </summary>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.DcbsOfSites">
            <summary>
            DCB of Site
            </summary>
        </member>
        <member name="P:Gnsser.Data.GridIonoFileService.DcbsOfSats">
            <summary>
            DCB of PRN
            </summary>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetDcb(Geo.Times.Time,System.String)">
            <summary>
            获取当天测站DCB
            </summary>
            <param name="time"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetDcb(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取当天卫星DCB
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSlope2(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取斜距方向!这是一种错误的做法！！！！！！！！！
            </summary>
            <param name="time">时间</param>
            <param name="geocentricLonLatOfIntersection">穿刺点球坐标（经纬度，单位：度）</param>
            <param name="satElevationOfPuncturePointDeg">穿刺点的卫星高度角，单位：度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取倾斜延迟距离
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <param name="freq">频率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取斜距方向
            </summary>
            <param name="time">时间</param>
            <param name="geocentricLonLatOfIntersection">穿刺点球坐标（经纬度，单位：度）</param>
            <param name="satElevationOfSiteDeg">测站的卫星高度角，单位：度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSatZenithAngleOfPuncturePointInSphereRad(System.Double,System.Double)">
            <summary>
            计算电离层穿刺点到测站与地球球心的夹角,也是穿刺点的卫星天顶距,返回弧度
            </summary>
            <param name="satElevationOfSiteDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetSlopeLen(Geo.Times.Time,Geo.Coordinates.GeoCoord,System.Double,System.Double)">
            <summary>
            斜距影响
            </summary>
            <param name="time"></param>
            <param name="geoCoordOfIntersection">电离层坐标</param>
            <param name="satElevationDeg"></param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.GetIonoDelayRange(System.Double,System.Double)">
            <summary>
            电离层对于伪距的延迟距离
            </summary>
            <param name="tec">单位 1e16.</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取服务为，原始数据。单位 1e16.
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.GridIonoFileService.Interpolate(Gnsser.Data.IonoSection,Geo.Coordinates.LonLat)">
            <summary>
            内插不同经纬度的值。
            </summary>
            <param name="IonoSection"></param>
            <param name="geoCoord">待内插坐标</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IonoParamService">
            <summary>
            电离层参数服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoParamService.#ctor">
            <summary>
            电离层参数服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoParamService.#ctor(System.String)">
            <summary>
            以一个导航文件初始化
            </summary>
            <param name="navPath"></param>
        </member>
        <member name="P:Gnsser.Data.IonoParamService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Gnsser.Data.IonoParamService.Get(Geo.Times.Time)">
            <summary>
            获取
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.KlobucharIonoService">
            <summary>
            参数电离层服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.#ctor(Gnsser.Data.Rinex.ParamNavFile)">
            <summary>
            电离层参数模型改正，构造函数。
            </summary>
            <param name="IonoService"></param> 
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.HeightOfModel">
            <summary>
            模型高度，此处无用
            </summary>
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.IsCorrectionOnPhase">
            <summary>
            是否改正到相位上。
            </summary>
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.IonoParamService">
             <summary>
            电离层数据源
             </summary>
        </member>
        <member name="P:Gnsser.Data.KlobucharIonoService.SatelliteType">
            <summary>
            特定的类型不同的改正，目前只支持GPS
            </summary>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取，未实现
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            斜距
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            斜距
            </summary>
            <param name="receiverTime"></param>
            <param name="geocentricLonLat"></param>
            <param name="satElevationOfSiteDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            电离层模型改正。返回改正距离。 单位：米
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetIonoDelayRange(System.Double,System.Double)">
            <summary>
            电离层对于伪距的延迟距离
            </summary>
            <param name="tec">单位 1e16.</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetSatZenithAngleOfPuncturePointInSphereRad(System.Double,System.Double)">
            <summary>
            计算电离层穿刺点到测站与地球球心的夹角,也是穿刺点的卫星天顶距,返回弧度
            </summary>
            <param name="satElevationOfSiteDeg"></param>
            <param name="HeightOfModel"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetCorrectorInDistance(System.Double,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.IIonoParam)">
            <summary>
            电离层模型改正。返回改正距离。 单位：米
            Tiono is referred to the L1 frequency; if the user is operating on the L2 frequency, 
            the correction term must be multiplied by γ (reference paragraph 20.3.3.3.3.2),
            </summary>
            <param name="weekSecond">周秒</param>
            <param name="satXyz">卫星位置</param>
            <param name="receiverXyz">接收机位置</param>
            <param name="ionParam">电离层参数</param>
            <returns> </returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.IonoCorrection(System.Double,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,Gnsser.IIonoParam)">
            <summary>
            电离层模型改正。返回时间延迟，单位：秒。
            broadcast iono (coeff.v. icd-200)
            input time:    fraction of ut (or gps time of secondOfWeek)      (machts nicht)
            </summary>
            <param name="weekSecond">周秒</param>
            <param name="satXyz">卫星位置</param>
            <param name="rcvXyz">接收机位置</param>
            <returns>time delay in fraction</returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetTimeDelay(System.Double,System.Double,System.Double)">
            <summary>
            计算电离层时间延迟
            </summary>
            <param name="f"></param>
            <param name="amp"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetX(Gnsser.IIonoParam,System.Double,System.Double)">
            <summary>
            计算X，模型参数之一。phase (radians)
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <param name="tlocal"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetAMP(Gnsser.IIonoParam,System.Double)">
            <summary>
            计算AMP，模型参数之一。amplitude
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetF(System.Double)">
            <summary>
            计算F，模型参数之一。
            obliquity factor (dimensionless)
            </summary>
            <param name="E">elevation angle between the user and satellite (semi-circles)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetMeanIonLat(System.Double,System.Double)">
            <summary>
            电离层交叉点地球投影的地磁纬度（平均电离层高度假定为350 km）（半圆）
            geomagnetic latitude of the earth projection of the ionospheric intersection point (mean ionospheric height assumed 350 km) (semi-circles)
            </summary>
            <param name="inoLat"></param>
            <param name="inoLon"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetEarthsCentralAngle(System.Double)">
            <summary>
            earth's central angle between the user position and the earth projection of ionospheric intersection point (semi-circles)
            </summary>
            <param name="E">卫星高度角，单位半周elevation angle between the user and satellite (semi-circles)</param>
            <returns>单位半周</returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetIonLon(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            获取电离层穿刺点经度，单位：半周
            </summary>
            <param name="A">此处应该为弧度才能计算。
            azimuth angle between the user and satellite,
            measured clockwise positive from the true North (semi-circles)</param>
            <param name="rcvLon"></param>
            <param name="psi"></param>
            <param name="inoLat">单位：半周</param>
            <returns>单位：半周</returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetIonLat(System.Double,System.Double,System.Double)">
            <summary>
            获取电离层穿刺点纬度,单位：半周
            </summary>
            <param name="A">只参与三角计算，故单位为弧度</param>
            <param name="rcvLat"></param>
            <param name="psi"></param>
            <returns>单位：半周</returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetLocalTime(System.Double,System.Double)">
            <summary>
            local time (sec)
            </summary>
            <param name="weekSecond">GPS time</param>
            <param name="inoLon">geodetic longitude of the earth projection of the ionospheric intersection point (semi-circles)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.KlobucharIonoService.GetPER(Gnsser.IIonoParam,System.Double)">
            <summary>
            计算PER，模型参数之一。period
            </summary>
            <param name="ionParam"></param>
            <param name="ionMLat">电离层穿刺点平均纬度，单位：半周</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.ObsFileToTableBuilder">
            <summary>
            表生成器 
            </summary>
        </member>
        <member name="M:Gnsser.Data.ObsFileToTableBuilder.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.Data.ObsFileToTableBuilder.Build(System.String)">
            <summary>
            读取并构建
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ObsFileToTableBuilder.Build(Gnsser.Data.Rinex.RinexObsFile)">
            <summary>
            直接转换
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ObsFileToTableBuilder.ObsToRow(Geo.ObjectTableStorage,Gnsser.Data.Rinex.RinexEpochObservation)">
            <summary>
            转换一个历元
            </summary>
            <param name="table"></param>
            <param name="epochInfo"></param>
        </member>
        <member name="T:Gnsser.Data.TableObsFileReader">
            <summary>
            表读取器 
            </summary>
        </member>
        <member name="M:Gnsser.Data.TableObsFileReader.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.Data.TableObsFileReader.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Gnsser.Data.TableObsFileReader.TableToRinexObsFileBuilder">
            <summary>
            转换器
            </summary>
        </member>
        <member name="M:Gnsser.Data.TableObsFileReader.Read">
            <summary>
            读取
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.TableToRinexObsFileBuilder">
            <summary>
            表格文件向RINEX观测对象的转换器
            </summary>
        </member>
        <member name="M:Gnsser.Data.TableToRinexObsFileBuilder.BuildObs(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            构建观测历元。
            </summary>
            <param name="row"></param>
            <param name="indexColName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.TableToRinexObsFileBuilder.BuidHeader(Geo.ObjectTableStorage)">
            <summary>
            构建头部信息
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.StationInfoReader">
            <summary>
            坐标文件写入器
            </summary>
        </member>
        <member name="M:Gnsser.Data.StationInfoReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoReader.Init(Geo.IO.Gmetadata)">
            <summary>
            初始化
            </summary>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoReader.ParseString(System.String,System.Reflection.PropertyInfo)">
            <summary>
            解析字符串为对象
            </summary>
            <param name="valString"></param>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.StationInfoWriter">
            <summary>
            坐标文件写入器
            </summary>
        </member>
        <member name="M:Gnsser.Data.StationInfoWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoWriter.#ctor(System.IO.Stream,Geo.IO.Gmetadata)">
            <summary>
            构造函数，以数据流初始化
            </summary>
            <param name="stream"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.Data.StationInfoWriter.PropertyToString(System.Object)">
            <summary>
            属性转为字符串
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.StationInfo">
            <summary>
            GNSSer测站天线文件,与SiteInfo的区别在于，此处为测站时段信息。
            </summary>
        </member>
        <member name="M:Gnsser.Data.StationInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.StationInfo.#ctor(Gnsser.ISiteInfo,Gnsser.IObsInfo)">
            <summary>
            构造函数
            </summary>
            <param name="siteInfo"></param>
            <param name="obsInfo"></param>
        </member>
        <member name="P:Gnsser.Data.StationInfo.Id">
            <summary>
            标识符,可以自定义，作为全局唯一标识。
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.TimeFrom">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.TimeTo">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.StationName">
            <summary>
            站名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.ReceiverType">
            <summary>
            接收机名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.ReceiverNumber">
            <summary>
            接收机编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntennaNumber">
            <summary>
            天线编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntennaType">
            <summary>
            天线类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.HeightCode">
            <summary>
            高度类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.Info">
            <summary>
            附加信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntN">
            <summary>
            天线北方向
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntE">
            <summary>
            天线东方向
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntU">
            <summary>
            天线上方向
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntNEU">
            <summary>
            天线坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.StationInfo.AntHEN">
            <summary>
            以HEN标识的天线坐标
            </summary>
        </member>
        <member name="T:Gnsser.Data.IgsProductUrlPathBuilder">
            <summary>
            IGS（日，默认）产品地址生成器
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.#ctor(System.String[],System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.List{System.String}},System.String[],Gnsser.IgsProductType,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="urlDirectories"></param>
            <param name="SourceNames"></param>
            <param name="urlModels"></param>
            <param name="ProductType"></param>
            <param name="TimeIntervalInSeconds"></param>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.#ctor(Gnsser.IgsProductType,System.Int32)">
            <summary>
            构造函数,采用内置固定URL参数。
            </summary>
            <param name="ProductType"></param>
            <param name="TimeIntervalInSeconds"></param>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.#ctor(System.String[],System.String[],System.String[],System.DateTime,System.DateTime,Gnsser.IgsProductType,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="UrlDirectories"></param>
            <param name="UrlModels"></param>
            <param name="SourceNames"></param>
            <param name="timeFrom"></param>
            <param name="timeTo"></param>
            <param name="ProductType"></param>
            <param name="TimeIntervalInSeconds"></param>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.TimeIntervalInSeconds">
            <summary>
            时间间隔，单位秒，日为86400，周为604800，时段服务信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.ProductType">
            <summary>
            数据产品类型。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.UrlDirectories">
            <summary>
            地址模板
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.UrlModels">
            <summary>
            地址模板
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.TimeFrom">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.TimeTo">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.SourceNameDic">
            <summary>
            多系统数据源字典
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.SatelliteType">
            <summary>
            卫星系统类型，若不指定的话，为U
            </summary>
        </member>
        <member name="P:Gnsser.Data.IgsProductUrlPathBuilder.SiteNames">
            <summary>
            测站名称，观测文件有效
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.Build(Geo.Times.Time)">
            <summary>
            构建
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.RemoveRedundancy(System.Collections.Generic.List{System.String})">
            <summary>
            移除多余的东西
            </summary>
            <param name="pathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.BuildWithUrlDirectory(System.Collections.Generic.List{System.String})">
            <summary>
            第一步替换
            </summary>
            <param name="urlModels"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductUrlPathBuilder.BuildWithSiteNames(System.Collections.Generic.List{System.String})">
            <summary>
            替换测站名称
            </summary>
            <param name="urlModels"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.AntennaFileService">
            <summary>
            天线文件数据服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.AntennaFileService.#ctor(Geo.FileOption)">
            <summary>
            天线数据源。
            </summary>
            <param name="antennaPath">天线文件路径</param>
        </member>
        <member name="M:Gnsser.Data.AntennaFileService.#ctor(System.String)">
            <summary>
            天线数据源。
            </summary>
            <param name="antennaPath">天线文件路径</param>
        </member>
        <member name="P:Gnsser.Data.AntennaFileService.typedBuffer">
            <summary>
            存储一般的测站天线
            </summary>
        </member>
        <member name="M:Gnsser.Data.AntennaFileService.Get(System.String)">
            <summary>
            根据天线类型获取天线对象。测站一般采用此法。
            </summary>
            <param name="typeAndRadome">天线类型, 加上天线罩</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntennaFileService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取天线，通常是卫星天线
            </summary>
            <param name="serial">序号，通常是卫星的PRN</param>
            <param name="epoch">历元时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Antenna">
            <summary>
            天线类。按照IGS标准构建。 
            </summary>
        </member>
        <member name="M:Gnsser.Data.Antenna.#ctor">
            <summary>
            天线类默认构造函数 Default constructor
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.Data">
            <summary>
            按照卫星频率存储的天线数据。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.SatelliteFrequences">
            <summary>
            GNSS 系统频率
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.SinexCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.SatCode">
            <summary>
            卫星代码。 satellite obs Code
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.CosparID">
            <summary>
            何年入轨，当年编号，发射编号等 COSPAR ID "YYYY-XXXA"，可选。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.Agency">
            <summary>
            antenna calibration agency
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.NumOfAntennas">
            <summary>
             校准的天线数量，一类型天线可能有多个。number of individual antennas calibrated
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.Date">
            <summary>
            校准日期。calibration date
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.AntennaType">
            <summary>
            天线类型,一般都是大写。
            </summary> 
        </member>
        <member name="P:Gnsser.Data.Antenna.Radome">
            <summary>
            天线罩
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.SerialOrSatFreqCode">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.CalibrationMethod">
            <summary>
            校准方法
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.DeltaAzimuth">
            <summary>
            方位角的增量。Increment of the azimuth
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.ZenithStart">
            <summary>
            起始天顶角的值。 Initial zenith grid value
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.ZenithEnd">
            <summary>
            终点天顶角。 Final zenith grid value
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.DeltaZenith">
            <summary>
            天顶角增量。 Increment of the zenith
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.NumOfFrequencies">
            <summary>
            频率的数量。 Number of frequencies
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.ValidDateFrom">
            <summary>
            有效起始日期
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.ValidDateUntil">
            <summary>
            有效截止日期。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.TimePeriod">
            <summary>
            有效时段
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.Comments">
            <summary>
            注释。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.DataCount">
            <summary>
            相位偏心表频率的数量。
            Get aboutSize of antenna phase center eccentricities map.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Antenna.IsValid">
            <summary>
            是否有效。是否包含数据。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Antenna.Contains(Gnsser.RinexSatFrequency)">
            <summary>
            是否包含
            </summary>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.GetPcvValue(Gnsser.RinexSatFrequency,System.Double)">
            <summary>
            获取天线中心相位的改正量。不依赖方位角， 单位：度。如果没有找到，则返回 0.
            Get antenna phase center variation. Use this method when you
            don't have azimuth dependent phase center patterns.
            This method returns a Triple, in UEN system, with the elevation-dependent phase center variation.
            </summary>
            <param name="freq">GNSS系统和对应的频率 </param>
            <param name="elevation">高度角 elevation Elevation (degrees)</param>
            @warning The phase center variation Triple is in UEN system.
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.GetPcvValue(Gnsser.RinexSatFrequency,System.Double,System.Double)">
            <summary>
            获取某方向到天线平均相位中心的改正量PCV。如果没有找到具有方位角的数据，则从不带方位角的数据中计算。
            如果都没有找到，则返回null.
            Get antenna phase center variation.
            This method returns a Triple, in UEN system, with the elevation and azimuth-dependent phase center variation.
            </summary>
            <param name="freq">频率。Frequency</param>
            <param name="elevation">高度角，单位：度。Elevation (degrees)</param>
            <param name="azimuth">方位角，单位：度。Azimuth (degrees)</param>
            @warning The phase center variation Triple is in UEN system.
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.GetPcoValue(Gnsser.RinexSatFrequency)">
            <summary>
            如果失败则返回 NEU 0.
            </summary>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.AddComment(System.String)">
            <summary>
            添加一个注释。
            Add antenna comments.
            </summary>
            <param name="comments"> Antenna comments line</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaEcc(Gnsser.RinexSatFrequency,Geo.Coordinates.NEU)">
            <summary>
            添加或设置天线的相位中心偏差。单位：米。
            Add antenna phase center ecccentricities, in METERS.
            </summary>
            <param name="freq"> Frequency.</param>
            <param name="trEcc">Eccentricity Triple, in METERS.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaRmsEcc(Gnsser.RinexSatFrequency,Geo.Coordinates.NEU)">
            <summary>
            添加天线偏心差 PCO RMS。单位：米。
            Add antenna phase center RMS eccentricities, in METERS.
            </summary>
            <param name="freq">频率。Frequency.</param>
            <param name="ecc">NEU方向的均方根。North eccentricity RMS component, in METERS.</param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaNoAziPattern(Gnsser.RinexSatFrequency,System.Collections.Generic.List{System.Double})">
            <summary>
            添加不依赖方位角的天线偏心差，单位：米。
            Add antenna non-azimuth dependent pattern, in METERS.
            </summary>
            <param name="freq">Frequency</param>
            <param name="pcVec">  Vector of phase centers, in METERS.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaPattern(Gnsser.RinexSatFrequency,System.Double,System.Collections.Generic.List{System.Double})">
             <summary>
            添加依赖方位角的天线偏心差，单位：米。
             Add antenna azimuth dependent pattern, in METERS.
             </summary>
             <param name="freq">Frequency</param>
             <param name="azi">Azimuth</param>
             <param name="pcVec">Vector of phase centers, in METERS.</param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaNoAziRms(Gnsser.RinexSatFrequency,System.Collections.Generic.List{System.Double})">
            <summary>
            添加不依赖方位角的天线偏心中误差，单位：米。
            Add antenna non-azimuth dependent RMS, in METERS.
            </summary>
            <param name="freq">Frequency</param>
            <param name="pcRMS"> Vector of phase centers RMS, in METERS.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.SetAntennaPatternRms(Gnsser.RinexSatFrequency,System.Double,System.Collections.Generic.List{System.Double})">
            <summary>
            添加依赖方位角的天线偏心中误差，单位：米。
            Add antenna azimuth dependent RMS, in METERS.
            </summary>
            <param name="freq">Frequency</param>
            <param name="azimuth">Azimuth</param>
            <param name="pcRmsVector">Vector of phase centers RMS, in METERS.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.ToDetailString">
            <summary>
            详细信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.CheckZenith(System.Double)">
            <summary>
            检查天顶距离大小范围
            </summary>
            <param name="zenith">单位：度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.RecudeToRange(System.Double,System.Double,System.Double)">
            <summary>
            将数据归算到一个范围内。
            </summary>
            <param name="val">待归算数据</param>
            <param name="minInclude">最小值（含）</param>
            <param name="maxExcludeAndCycle">最大值（不含），周期</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Antenna.LinearInterpol(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            线性插值。
            </summary>
            <param name="dataList"> 按照间隔存放的数据。</param>
            <param name="zenithAngle">天顶距离，单位:度</param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.AntennaFile">
            <summary>
            天线文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.AntennaFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.AntennaFile.Antennas">
            <summary>
            用于存储已经搜寻过的天线数据，下一次使用时，可以直接获取之。
            </summary>
        </member>
        <member name="P:Gnsser.Data.AntennaFile.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="T:Gnsser.Data.IAntenna">
            <summary>
            天线接口，包括接收机和卫星天线。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Data">
            <summary>
            按照卫星频率存储的天线数据。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.SatelliteFrequences">
            <summary>
            GNSS 系统频率
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Header">
            <summary>
            接收机基本的信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Agency">
            <summary>
            校验机构
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.DataCount">
            <summary>
            天线数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Radome">
            <summary>
            天线罩
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.SerialOrSatFreqCode">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.AntennaType">
            <summary>
            天线类型,一般都是大写。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.CalibrationMethod">
            <summary>
            校准方法
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.SatCode">
            <summary>
            卫星代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Comments">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.CosparID">
            <summary>
            何年入轨，当年编号，发射编号等 COSPAR ID "YYYY-XXXA"，可选。
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.DeltaAzimuth">
            <summary>
            方位角增量
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.DeltaZenith">
            <summary>
            天顶距离增量
            </summary>
        </member>
        <member name="M:Gnsser.Data.IAntenna.GetPcoValue(Gnsser.RinexSatFrequency)">
            <summary>
            获取平均天线相位中心偏差PCO NEU尝试获取天线偏心改正，如果失败则返回 NEU.Zero.
            </summary>
            <param name="freq">卫星频率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IAntenna.GetPcvValue(Gnsser.RinexSatFrequency,System.Double)">
            <summary>
            获取天线相位变化偏差 PCV, 不依赖方位角
            </summary>
            <param name="freq"></param>
            <param name="elevation"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IAntenna.GetPcvValue(Gnsser.RinexSatFrequency,System.Double,System.Double)">
            <summary>
            获取天线相位变化偏差 PCV，依赖方位角
            </summary>
            <param name="freq"></param>
            <param name="elevation"></param>
            <param name="azimuth"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.IAntenna.IsValid">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.NumOfAntennas">
            <summary>
            校准的天线数量，一类型天线可能有多个。number of individual antennas calibrated
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.NumOfFrequencies">
            <summary>
            频率数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.SinexCode">
            <summary>
            通常为 IGS14_2000 等
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.ValidDateFrom">
            <summary>
            有效起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.ValidDateUntil">
            <summary>
            有效停止时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.ZenithStart">
            <summary>
            起始天顶距
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.ZenithEnd">
            <summary>
            终止天顶距
            </summary>
        </member>
        <member name="P:Gnsser.Data.IAntenna.TimePeriod">
            <summary>
            有效时段
            </summary>
        </member>
        <member name="T:Gnsser.Data.IAntennaFileService">
            <summary>
            天线服务接口
            </summary>
        </member>
        <member name="M:Gnsser.Data.IAntennaFileService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取一个天线对象。
            </summary>
            <param name="serial"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.AntexReader">
            参加：
            rcvr_ant.tab: Offical IGS naming conventions for GNSS equipment
            antex13.txt: ANTEX format definition
            igs05_wwww.atx: Absolute IGS phase center corrections for satellite and receiver antennas. Field 'wwww'represents GPS week of last file change
            igs05.atx: Link to latest igs05_wwww.atx file
            igs01.atx: Relative IGS phase center corrections for satellite and receiver antennas
            <summary>
            天线文件读取和查找获取.
            </summary>
        </member>
        <member name="M:Gnsser.Data.AntexReader.#ctor(System.String)">
            <summary>
            天线文件读取器的默认构造函数。
            </summary>
            <param name="fileName">Antex satData file to read</param>
        </member>
        <member name="P:Gnsser.Data.AntexReader.SiteAntennas">
            <summary>
            测站天线，通过类型获取，无时间相关。用于存储已经搜寻过的天线数据，下一次使用时，可以直接获取之。
            </summary>
        </member>
        <member name="P:Gnsser.Data.AntexReader.SatAntennas">
            <summary>
            卫星相关的天线和时间相关。
            </summary>
        </member>
        <member name="P:Gnsser.Data.AntexReader.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.AntexReader.FilePath">
            <summary>
            文件地址
            </summary>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ReadFile(System.String)">
            <summary>
            获取文件中所有的天线对象。
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ReadHeader(System.String)">
            <summary>
            读取头文件。
            </summary>
            <param name="fileName">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ParsePcvType(Gnsser.AntennaHeader,System.String)">
            <summary>
            解析PCV
            </summary>
            <param name="header"></param>
            <param name="line"></param>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ParseAntenna(System.String,System.IO.StreamReader,Gnsser.AntennaHeader)">
            <summary>
            解析一个天线段。
             Fill most Antenna satData
            </summary>
            <param name="firstLine"></param>
            <param name="sr"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ParseFrequencyRms(System.IO.StreamReader,Gnsser.Data.Antenna,System.String@)">
            <summary>
             The section includes the rms values of  the phase center eccentricities and of the phase pattern values.
            </summary>
            <param name="sr"></param>
            <param name="antenna"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ParseFrequency(System.IO.StreamReader,Gnsser.Data.Antenna,System.String)">
            <summary>
            解析主体数据部分
            </summary>
            <param name="sr"></param>
            <param name="antenna"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.ParseNEU(System.String)">
            <summary>
             Add antenna eccentricities or rms , as METERS
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.CreateAntenna(System.String)">
            <summary>
            创建一个天线实例，采用第一行解析初始化。
            </summary>
            <param name="firstLine">第一行</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.GetAntenna(System.String)">
            <summary>
            从指定的IGS天线类型中，获取天线数据。
            首先判断缓存中是否具有该数据，如果没有则从文件中读取，如果也没有 则抛出异常，or 返回空 null？？
             Method to get antenna satData from a given IGS model.
            </summary>
            <param name="model">20个字符或15以内，IGS天线名称或加上天线罩</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.GetAntenna(System.String,Geo.Times.Time)">
            <summary>
            获取天线数据，根据给定的序列号和时间获取。
            </summary>
            <param name="serial"> Antenna serial number, 如卫星的PRN</param>
            <param name="epoch">Validity epoch.</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.FindFromFile(System.String,System.String)">
            <summary>
            从天线文件查找一个,只负责查找
            </summary>
            <param name="uModel"></param>
            <param name="uRadome"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.AntexReader.FindFromFile(Geo.Times.Time,System.String)">
            <summary>
            通过 SERIAL 和时段查找，这个通常为卫星接收机。
            </summary>
            <param name="epoch"></param>
            <param name="uSerial">G01，E01d等</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.AntexReader.IsAbsolute">
             <summary>
            是否绝对标定
             </summary>
        </member>
        <member name="T:Gnsser.Data.IClockService">
            <summary>
            常用钟差服务
            </summary>
        </member>
        <member name="T:Gnsser.Data.ISimpleClockService">
            <summary>
            常用钟差服务
            </summary>
        </member>
        <member name="T:Gnsser.Data.IClockService`1">
            <summary>
            常用钟差服务
            </summary>
        </member>
        <member name="T:Gnsser.Data.SimpleClockService">
            <summary>
            钟差数据源。接收钟差文件或列表进行插值计算。
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="ClockFilePath"></param>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.Reader">
            <summary>
            读取器
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.InputPath">
            <summary>
            输入路径
            </summary>
        </member>
        <member name="F:Gnsser.Data.SimpleClockService.clockInterpolators">
            <summary>
            缓存插值器
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.ClockFile">
            <summary>
            钟差文件，采用懒加载的方式
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.IsLoadedFile">
            <summary>
            是否完全加载到内存
            </summary>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.SatelliteTypes">
            <summary>
            包含的卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取指定卫星在时段内的序列
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.GetClocks(Gnsser.SatelliteNumber)">
            <summary>
            指定卫星的所有钟差序列
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.GetInterval">
            <summary>
            采样间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.Get(System.String,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="nameOrPrn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否可用
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.GetClockInterpolator(System.String)">
            <summary>
            插值器
            </summary>
            <param name="prnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.SimpleClockService.TimePeriod">
            <summary>
            有效时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.ToString">
            <summary>
            名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.SimpleClockService.CompareTo(Gnsser.Data.SimpleClockService)">
            <summary>
            时段比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.ClockService">
            <summary>
            钟差数据源。接收钟差文件或列表进行插值计算。
            </summary>
        </member>
        <member name="M:Gnsser.Data.ClockService.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="ClockFilePath"></param>
        </member>
        <member name="P:Gnsser.Data.ClockService.Header">
            <summary>
            头部信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.ClockService.Reader">
            <summary>
            读取器
            </summary>
        </member>
        <member name="P:Gnsser.Data.ClockService.InputPath">
            <summary>
            输入路径
            </summary>
        </member>
        <member name="F:Gnsser.Data.ClockService.clockInterpolators">
            <summary>
            缓存插值器
            </summary>
        </member>
        <member name="P:Gnsser.Data.ClockService.ClockFile">
            <summary>
            钟差文件，采用懒加载的方式
            </summary>
        </member>
        <member name="P:Gnsser.Data.ClockService.IsLoadedFile">
            <summary>
            是否完全加载到内存
            </summary>
        </member>
        <member name="P:Gnsser.Data.ClockService.SatelliteTypes">
            <summary>
            包含的卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.Data.ClockService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            获取指定卫星在时段内的序列
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.GetClocks(Gnsser.SatelliteNumber)">
            <summary>
            指定卫星的所有钟差序列
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.GetInterval">
            <summary>
            采样间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.Get(System.String,Geo.Times.Time)">
            <summary> 
            根据接收机时间和位置，获取计算卫星发射时刻的位置。不计算相对地面的延迟。
            </summary>
            <param name="nameOrPrn">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns>如果返回 null，在表示计算失败</returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否可用
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.GetClockInterpolator(System.String)">
            <summary>
            插值器
            </summary>
            <param name="prnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.ClockService.TimePeriod">
            <summary>
            有效时间
            </summary>
        </member>
        <member name="M:Gnsser.Data.ClockService.ToString">
            <summary>
            名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.ClockService.CompareTo(Gnsser.Data.ClockService)">
            <summary>
            时段比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.DcbFile">
            <summary>
            时间段的卫星状态文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbFile.#ctor(System.Collections.Generic.List{Gnsser.Data.DcbValue})">
            <summary>
            构造函数
            </summary>
            <param name="SatInfos">卫星状态列表</param>
        </member>
        <member name="P:Gnsser.Data.DcbFile.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbFile.DcbInfos">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbFile.Clear">
            <summary>
            Method to clear all previously loaded satellite satData.
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbFile.GetSatInfo(Gnsser.SatelliteNumber)">
            <summary>
            获取第一个满足条件的对象
            </summary>
            <param name="satelliteType">卫星编号</param>
            <param name="epoch">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.DcbValue">
            CODE每月发布DCB文件
            <summary>
            DCB基础信息。
            说明：CODE发布了 "P1P2YYMM.DCB P1C1YYMM.DCB"文件，用于记录卫星信息，包括PRN，VALUE，RMS等。
            该文件对于精密定位具有重要的作用。
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbValue.#ctor(Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            初始化一个卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbValue.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="T:Gnsser.Data.DcbFileReader">
            T差分码偏差是不同类型的两种伪距观测量之间的相对硬件延迟。
            CODE每月发布DCB改正参数文件
            DCB大小通常为-10ns到10ns
            <summary>
            DCB信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbFileReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.DcbFileReader.Read">
            <summary>
            读取DCB信息。
            由于信息文件较小，这里一次性读取完毕。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.DcbDataService">
            <summary>
            卫星DCB服务。
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.#ctor(System.String,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="dcbFileDir">地址目录</param>
            <param name="Option">设置</param>
        </member>
        <member name="P:Gnsser.Data.DcbDataService.TotalLocalDirectories">
            <summary>
            总共
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbDataService.GnssOption">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbDataService.DownloadDirectory">
            <summary>
            本地下载目录
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbDataService.IgsProductDirectories">
            <summary>
            IGS 产品目录
            </summary>
        </member>
        <member name="P:Gnsser.Data.DcbDataService.InputFileManager">
            <summary>
            文件路径管理器
            </summary>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.GetPosibleFilePathes(System.String)">
            <summary>
            所有可能的
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.Get(Gnsser.SatelliteNumber,Geo.Times.Time,System.String)">
            <summary>
            获取
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.GetP2C2_rinex(Gnsser.SatelliteNumber,Geo.Times.Time,System.String)">
            <summary>
            P2C2与P1C1和P1P2不同
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.BuildUrl(Geo.Times.Time,System.String)">
            <summary>
            构建远程路径
            </summary>
            <param name="time"></param>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.DcbDataService.TimeTokey(Geo.Times.Time,System.String)">
            <summary>
            P1P21709
            </summary>
            <param name="time"></param>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FileEphemerisType">
            <summary>
            星历文件类型。
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Unkown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.GpsNFile">
            <summary>
            GPS 导航文件
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Glonass">
            <summary>
            格洛纳斯
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Compass">
            <summary>
            北斗
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Galileo">
            <summary>
            伽利略
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Sp3">
            <summary>
            星历
            </summary>
        </member>
        <member name="F:Gnsser.Data.FileEphemerisType.Mixed">
            <summary>
            混合
            </summary>
        </member>
        <member name="T:Gnsser.Data.FileEphemerisServicePool">
            <summary>
            星历文件服务池。
            </summary>
        </member>
        <member name="T:Gnsser.Data.EphemerisDataSourceFactory">
            <summary>
            以文件为星历数据源工厂
            </summary>
        </member>
        <member name="M:Gnsser.Data.EphemerisDataSourceFactory.CreateFromFile(System.String)">
            <summary>
            从文件判断。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.EphemerisDataSourceFactory.Create(System.String,Gnsser.Data.FileEphemerisType,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            自动判断路径文件类型，进行星历数据源类的初始化。
            </summary>
            <param name="naviFilePath"></param>
            <param name="fileType"></param>
            <param name="IsAvailableOnly"></param>
            <param name="MinSequentialSatCount"></param>
            <param name="MaxBreakingCount"></param>
            <param name="ephInterOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.EphemerisDataSourceFactory.GetFileEphemerisTypeFromPath(System.String)">
            <summary>
            分析文件路径最后一个字符，判断导航文件的类型。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.ErpFile">
            <summary>
            ERP 文件
            </summary>
        </member>
        <member name="M:Gnsser.Data.ErpFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpFile.SourceCode">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpFile.Erps">
            <summary>
            一周的ERP信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpFile.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="T:Gnsser.Data.ErpItem">
             <summary>
             ERP类，记录单天的ERP参数信息。
            单位在读取时已经被转换为正常的数值。
             </summary>
        </member>
        <member name="M:Gnsser.Data.ErpItem.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Mjd">
            <summary>
            日期 modified Julian secondOfWeek, with 0.01-secondOfWeek precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Xpole">
            <summary>
             Xpole             10**-6 arcsec, 0.000001-arcsec precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Ypole">
            <summary>
             Ypole             10**-6 arcsec, 0.000001-arcsec precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Ut12Utc">
            <summary>
             10**-7 s, 0.0000001-s precision (.1 us)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Lod">
            <summary>
            LOD, LODR         10**-7 s/secondOfWeek  0.0001-ms/secondOfWeek precision (.1 us/secondOfWeek)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Xsig">
            <summary>
             Xsig              10**-6 arcsec, 0.000001-arcsec precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Ysig">
            <summary>
              Ysig              10**-6 arcsec, 0.000001-arcsec precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.UTsig">
            <summary>
             UTsig             10**-7 s, 0.0000001-sec precision (.1 us)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.LODsig">
            <summary>
             LODsig            10**-7 s/day, 0.0001-ms/day    "     (.1 us/day)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Nr">
            <summary>
             number of receivers in the solution (integer)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Nf">
            <summary>
             Nf                number of receivers with "fixed" coordinates
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Nt">
            <summary>
             Nt                number of satellites (transmitters) in the solution     (integer)
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Xrt">
            <summary>
             10**-6 arcsec/secondOfWeek 0.001-mas/secondOfWeek precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Yrt">
            <summary>
            10**-6 arcsec/secondOfWeek 0.001-mas/secondOfWeek precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Xrtsig">
            <summary>
            10**-6 arcsec/secondOfWeek 0.001-mas/secondOfWeek    "
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Yrtsig">
            <summary>
              10**-6 arcsec/secondOfWeek 0.001-mas/secondOfWeek    "
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.XYCorr">
            <summary>
             X-Y   Correlation 0.001 precision
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.XUTCor">
            <summary>
              X-UT1 Correlation 0.01    "
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.YUTCor">
            <summary>
            Y-UT1 Correlation 0.01    "
            </summary>
        </member>
        <member name="M:Gnsser.Data.ErpItem.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.ErpItem.Zero">
            <summary>
            0
            </summary>
        </member>
        <member name="P:Gnsser.Data.ErpItem.IsZero">
            <summary>
            是否是0
            </summary>
        </member>
        <member name="M:Gnsser.Data.ErpItem.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.ErpFileReader">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.ErpFileReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.ErpFileReader.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Gnsser.Data.ErpFileReader.Read">
            <summary>
            读取卫星信息。
            由于卫星信息文件较小，这里一次性读取完毕。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.FileErpService">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.FileErpService.#ctor">
            <summary>
            ERP读取与服务
            </summary>
        </member>
        <member name="P:Gnsser.Data.FileErpService.Empty">
            <summary>
            ERP 文件服务
            </summary>
        </member>
        <member name="M:Gnsser.Data.FileErpService.#ctor(System.String)">
            <summary>
            ERP读取与服务
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.FileErpService.#ctor(Gnsser.Data.ErpFile)">
            <summary>
            ERP读取与服务
            </summary>
            <param name="ErpFile"></param>
        </member>
        <member name="P:Gnsser.Data.FileErpService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.FileErpService.IsEmpty">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="M:Gnsser.Data.FileErpService.Get(Geo.Times.Time)">
            <summary>
            根据历元时刻查找相应的IGS发布的ERP信息
            ERP信息是读取某周的ERP文件
            </summary>
            <param name="date">历元时刻</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.FileErpService.GetErpItem(Geo.Times.Time)">
            <summary>
            获取服务，新算法 //2018.05.02, czs, hmx
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.FileErpService.Erps">
            <summary>
            一周的ERP参数信息
            </summary>
        </member>
        <member name="M:Gnsser.Data.FileErpService.GetErp(Geo.Times.Time)">
            <summary>
            崔阳老算法。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IErpFileService">
            <summary>
            ERP服务接口
            </summary>
        </member>
        <member name="P:Gnsser.Data.IErpFileService.IsEmpty">
            <summary>
            服务是否为空
            </summary>
        </member>
        <member name="T:Gnsser.Data.OceanLoadingHarmonicsService">
            <summary>
            海洋潮汐数据源。
            </summary>
        </member>
        <member name="M:Gnsser.Data.OceanLoadingHarmonicsService.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="OceanLoadingFile">海洋潮汐文件</param>
        </member>
        <member name="M:Gnsser.Data.OceanLoadingHarmonicsService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="OceanLoadingFile">海洋潮汐文件</param>
        </member>
        <member name="M:Gnsser.Data.OceanLoadingHarmonicsService.Get(System.String)">
            <summary>
            返回矩阵
            </summary>
            <param name="markerName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatExcludeItem">
            <summary>
            卫星可用性类，记录不可用卫星。
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatExcludeItem.#ctor(Geo.Times.Time,System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatExcludeItem.Prns">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatExcludeItem.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Gnsser.Data.SatExcludeReader">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatExcludeReader.#ctor(Geo.FileOption)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SatExcludeReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.SatExcludeReader.ExcludeSats">
            <summary>
            排除的卫星列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatExcludeReader.Read">
            <summary>
            读取卫星信息。
            由于卫星信息文件较小，这里一次性读取完毕。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatExcludeFileService">
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatExcludeFileService.#ctor(Geo.FileOption)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SatExcludeFileService.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.Data.SatExcludeFileService.ExcludeSats">
            <summary>
            排除的卫星列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatExcludeFileService.IsExcluded(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            指定日期指定编号是否包含。
            </summary>
            <param name="date">日期</param>
            <param name="satelliteType">卫星编号</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatInfo">
             Jet Propulsion Laboratory (JPL) provides a file called "PRN_GPS"
            * with satellite information such as launch and deactivation dates,
            * block type GPS number, etc. This information is important for some
            * precise GPS satData processing algorithms, and is used in Gipsy/OASIS
            * software.
             <summary>
             卫星基础信息。
             说明：喷气推进实验室Jet Propulsion Laboratory (JPL)发布了 "PRN_GPS"文件，用于记录卫星信息，包括有效时间，编号，钟类型等。
             该文件对于精密定位具有重要的作用。
             </summary>
        </member>
        <member name="M:Gnsser.Data.SatInfo.#ctor">
            <summary>
            初始化一个卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatInfo.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatInfo.TimePeriod">
            <summary>
            有效时段
            </summary>
        </member>
        <member name="F:Gnsser.Data.SatInfo.GpsNumber">
            <summary>
            序号
            </summary>
        </member>
        <member name="F:Gnsser.Data.SatInfo.Block">
            <summary>
            天线类型
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatInfo.Orbit">
            <summary>
            轨道
            </summary>
        </member>
        <member name="P:Gnsser.Data.SatInfo.Clock">
            <summary>
            卫星钟类型
            </summary>
        </member>
        <member name="T:Gnsser.Data.SatInfoFile">
            <summary>
            时间段的卫星状态文件。
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatInfoFile.#ctor(System.Collections.Generic.List{Gnsser.Data.SatInfo})">
            <summary>
            构造函数
            </summary>
            <param name="SatInfos">卫星状态列表</param>
        </member>
        <member name="M:Gnsser.Data.SatInfoFile.GetBlock(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取第一个满足条件的对象
            </summary>
            <param name="prn"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatInfoReader">
            This is a class to read and parse satellite satData from
              PRN_GPS-like files.
            
            
             Jet Propulsion Laboratory (JPL) provides a file called "PRN_GPS"
             with satellite information such as launch and deactivation dates,
             block type GPS number, etc. This information is important for some
             precise GPS satData processing algorithms, and is used in Gipsy/OASIS
             software.
            
             You may find this file using FTP:
            
             ftp://sideshow.jpl.nasa.gov:/pub/gipsy_products/gipsy_params
            
             where the PRN_GPS file resides, usually compressed in .gz format.
            
             A typical way to use this class follows:
            
             @obsCodeode
               SatDataReader satread;
            
               SatID prn28(28, SatID::systemGPS);
               DayTime time(1995, 331, 43200);
            
               satread.open("PRN_GPS");
            
               string prn28Block = satread.getBlock(prn28, time);
               // From 1992 to 1997, PRN 28 belonged to a block IIA satellite
             @endcode
            
             @warning Be aware that PRN numbers are recycled, so several
             different satellites may have the same PRN number at different
             epochs. Therefore, you must provide the epoch of interest when
             calling get methods.
            <summary>
            卫星信息读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatInfoReader.#ctor(System.String)">
            <summary>
            构造函数。可以指定文件路径，但此处并不读取，需要调用Read()方法才读取。
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.SatInfoReader.Read(System.String)">
            <summary>
            读取卫星信息。
            由于卫星信息文件较小，这里一次性读取完毕。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SatInfoService">
            <summary>
            卫星状态数据源。
            </summary>
        </member>
        <member name="M:Gnsser.Data.SatInfoService.#ctor(Geo.FileOption)">
            <summary>
            卫星状态数据源
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:Gnsser.Data.SatInfoService.#ctor(System.String)">
            <summary>
            卫星状态数据源
            </summary>
            <param name="filePath">文件路径</param>
        </member>
        <member name="P:Gnsser.Data.SatInfoService.SatInfoFile">
            <summary>
            卫星状态信息。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexBuilder">
            <summary>
            Sinex Block 工厂。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexBuilder.ToSinex(Gnsser.Data.Sinex.SinexFile)">
            <summary>
            转换为文本
            </summary>
            <param name="SinexFile"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexReader">
            <summary>
            Sinex Block 工厂。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexReader.ParseText(System.String,System.String,System.Boolean)">
            <summary>
            读取解析 Sinex 文件。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexReader.Read(System.String,System.Boolean)">
            <summary>
            读取解析 Sinex 文件。
            </summary>
            <param name="path"></param>
            <param name="skipMatrix"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexReader.Read(System.IO.Stream,System.String,System.Boolean)">
            <summary>
             读取解析 Sinex 文件。
            </summary>
            <param name="stream"></param>
            <param name="skipMatrix"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.BlockTitle">
            <summary>
            Each SINEX line has at most 80 ASCII characters.
            The SINEX fileB is subdivided in groups of satData called blocks. Each fileRefferblock is
            enclosed by coeffOfParams header and trailer line. Each fileRefferblock has coeffOfParams fixed format. The
            blocks contain information on the fileB, its input, the sites and the solution.  
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.CharDefinition">
            <summary>
            定义的符号
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.CollectionBlock`1">
            <summary>
            集合区。
            </summary>
            <typeparam name="TProduct"></typeparam>
        </member>
        <member name="T:Gnsser.Data.Sinex.FileAcknowledgement">
            <summary>
            致谢
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.FileComment">
            <summary>
            注释
            +INPUT/HISTORY
            *_Version_ Cre __Creation__ Own _Data_start_ _Data_end___ TProduct Param S Type_
            +GLK 1.06 SIO 12:365:84606 SIO 12:365:00000 12:365:86370 P 00732 2 S E A
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.FileReferBlock">
            <summary>
            参考信息
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.FileReferBlock.ToString">
            DESCRIPTION        My agency/institute                                        
            OUTPUT             One-session solution generated by RNX2SNX BerBpe               
            CONTACT            My east-mail address                                           
            SOFTWARE           Bernese GPS Software Version 5.0                            
            HARDWARE           My computer                                                 
            INPUT              IGS/IGLOS GNSS tracking satData 
        </member>
        <member name="T:Gnsser.Data.Sinex.InputFile">
            <summary>
            文件信息。
            +INPUT/HISTORY
            *_Version_ Cre __Creation__ Own _Data_start_ _Data_end___ TProduct Param S Type_
            +GLK 1.06 SIO 12:365:84606 SIO 12:365:00000 12:365:86370 P 00732 2 S E A
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.InputHistory">
            <summary>
            历史记录。
            +INPUT/HISTORY
            *_Version_ Cre __Creation__ Own _Data_start_ _Data_end___ TProduct Param S Type_
            +GLK 1.06 SIO 12:365:84606 SIO 12:365:00000 12:365:86370 P 00732 2 S E A
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.ICollectionBlock`1.Count">
            <summary>
            包含元素的数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.ICollectionBlock`1.HasItems">
            <summary>
            是否具有元素。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.ICollectionBlock`1.Items">
            <summary>
            包含的元素集合
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.MatrixLine">
            <summary>
            SINEX矩阵行。
            一行最多可写三个数字。列的数据不能大于行。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.MatrixLine.Init(System.String)">
            <summary>
            以文本行初始化。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.MatrixLine.ParseLine(System.String)">
            <summary>
            解析矩阵行。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.MatrixUnit">
            <summary>
            矩阵记录单元。格式： E21.14
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SatelliteId">
             <summary>
            +SATELLITE/ID
            G063 01 --------- P 11:197:00000 00:000:00000 BLOCK IIF 
             </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SatellitePhaseCenter">
             <summary>
            +SATELLITE/PHASE_CENTER
            G063 5 1.5613 0.3940 0.0000 0 0.0000 0.0000 0.0000 IGS08_1717 A E
             </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexFileHeader">
            <summary>
            %=SNX 2.01 SIO 12:366:00857 SIO 12:365:00000 12:365:86370 P 00249 0 S E
            The header line must be the prevObj line in coeffOfParams SINEX fileB
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.FileAgencyCode">
            <summary>
            Identify the agency creating the fileB
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.AgencyCode">
            <summary>
            Identify the agency providing the satData in the SINEX fileB
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.StartTime">
            <summary>
            StartTime time of the satData used in the
             SINEX solution  Value 00:000:00000 should be
             avoided in case of an analysis output (for coeffOfParams SINEX template it can be used).
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.EndTime">
            <summary>
            EndTime time  of the satData used in the
             SINEX solution  Value 00:000:00000 should be
             avoided in case of an analysis output (for coeffOfParams SINEX template it can be used).
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.ObservationCode">
            <summary>
            Technique(s) used to generate the SINEX solution
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.NumberOfEstimates">
            <summary>
            Number of parameters estimated in this SINEX fileB. Mandatory field.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.ConstraintCode">
            <summary>
            Single character indicating the constraint in the SINEX solution. Mandatory field.
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFileHeader.SolutionContents">
            <summary>
            Solution types contained in this SINEX fileB. Each character in this 
            field may be one of the following: 
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFileHeader.Read(System.String)">
            <summary>
            CreateFromODir 
            %=SNX 2.01 SIO 12:366:00857 SIO 12:365:00000 12:365:86370 P 00249 0 S E
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SiteAntenna">
            <summary>
            天线信息。
            +SITE/ANTENNA
            *SITE PT SOLN TProduct DATA_START__ DATA_END____ DESCRIPTION_________ S/N__
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteAntenna.ToString">
            <summary>
            *SITE PT SOLN TProduct DATA_START__ DATA_END____ DESCRIPTION_________ S/N__ FIRMWARE___
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SiteEccentricity">
            <summary>
            偏心信息。
            *SITE PT SOLN TProduct DATA_START__ DATA_END____ AXE ARP->BENCHMARK(M)_________
            AJAC  A 0001 P 02:143:00000 02:143:86370 UNE   0.0000   0.0000   0.0000
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SiteGpsPhaseCenter">
            <summary>
            GPS相位中心信息。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SiteId">
            <summary>
            测站标识。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteId.#ctor">
            <summary>
            默认构造函数，除了初始化一个对象，什么也不干。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SiteId.ApproximateLongitude">
            <summary>
            先验经度，单位度。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SiteId.ApproximateLatitude">
            <summary>
            先验纬度，单位度。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SiteId.ApproximateHeight">
            <summary>
            先验高度，单位米。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SiteId.GeoCoord">
            <summary>
            先验大地坐标。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteId.ToString">
            <summary>
            *CODE PT __DOMES__ TProduct _STATION DESCRIPTION__ APPROX_LON_ APPROX_LAT_ _APP_H_
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteId.ToSnxString(Geo.Coordinates.DMS)">
            <summary>
            355 30 12.3.
            0 -40 12.2
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteId.PareSnx(System.String)">
            <summary>
            注意判断度为0，分为0 时的正负号问题。
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SiteReceiver">
            <summary>
            接收机信息。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SiteReceiver.ToString">
            <summary>
            *SITE PT SOLN TProduct DATA_START__ DATA_END____ DESCRIPTION_________ S/N__ FIRMWARE___
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionAprioriGroup">
            <summary>
            参数先言值。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SolutionAprioriGroup.GetGroups(System.Collections.Generic.List{Gnsser.Data.Sinex.SolutionValue})">
            <summary>
            假设list的XYZ为相邻。分别为XYZ。
            </summary>
            <param name="colName"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionEpoch">
            <summary>
            星历信息。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionEstimateGroup">
            <summary>
            参数估计值。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SolutionEstimateGroup.GetGroups(System.Collections.Generic.List{Gnsser.Data.Sinex.SolutionValue})">
            <summary>
            假设list的XYZ为相邻。分别为XYZ。
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionMatrixBlock">
            <summary>
            SOLUTION/MATRIX_ESTIMATE Block (Mandatory)
            Description:
            The Estimate Matrix can be stored in an Upper or Lower triangular form. Only
            the Upper or Lower portion needs to be stored because the matrix is always
            symmetrical.
            The matrix contents can be:
            CORR - Correlation Matrix 相互关系, 关连, 相关
            COVA - Covariance Matrix 协方差
            INFO - Information Matrix (of Normals 正常, 标准), time.east. COVA^(-1)
            The distinction between the form and its contents is given by the title block
            which must take one of the following forms:
            SOLUTION/MATRIX_ESTIMATE L CORR
            SOLUTION/MATRIX_ESTIMATE U CORR
            SOLUTION/MATRIX_ESTIMATE L COVA
            SOLUTION/MATRIX_ESTIMATE U COVA
            SOLUTION/MATRIX_ESTIMATE L INFO
            SOLUTION/MATRIX_ESTIMATE U INFO
            Comment:
            The Matrix Estimate Row/Column Number correspond to the Estimated Parameters
            Index in the SOLUTION/ESTIMATE block.
            If the CORR matrix is used, standard deviations must be stored in the diagonal
            elements instead of 1.000.
            Missing elements in the matrix are assumed to be zero (0); consequently, zero
            elements may be omitted to reduce the aboutSize of this block.
            NOTE: The same scale (variance) factor MUST be used for both MATRIX_ESTIMATE
            and MATRIX_APRIORI, as well as for the standard deviations in the ESTIMATE
            and APRIORI Blocks. This scale factor should be stored as 'VarianceOfUnitWeight Factor' in the
            SOLUTION/STATISTICS block.
            If you use the INFO type this block should contain the constrained normal equation
            matrix of your least square adjustment.
            
            SOLUTION/NORMAL_EQUATION_MATRIX Block (Mandatory for normal equations)
            Description:
            This block is mandatory if the normal equation is to be provided directly in the
            SINEX fileB.
            The block should contain the original (reduced) normal equation matrix (time.east.,
            without constraints).
            The normal equation matrix can be stored in an Upper or Lower triangular form. Only
            the Upper or Lower portion needs to be stored because the matrix is always
            symmetrical. The distinction between the forms is given by the title block
            which must take one of the following forms:
            SOLUTION/NORMAL_EQUATION_MATRIX L
            SOLUTION/NORMAL_EQUATION_MATRIX U
            Comment:
            The NEQ-Matrix Row/Column Number correspond to the Estimated Parameters
            Index in the SOLUTION/ESTIMATE block.
            Missing elements in the matrix are assumed to be zero (0); consequently, zero
            elements may be omitted to reduce the aboutSize of this block.
            
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionNomalEquationVector">
            SOLUTION/NORMAL_EQUATION_VECTOR Block (Mandatory for normal equations)
            Description:
            If the SINEX fileB shall provide the normal equation directly this block is mandatory
            and contains the vector of the right hand side of the unconstrained (reduced) normal equation.
            Comment:
            The indices correspond to the indices of the SOLUTION/ESTIMATE block
            <summary>
            如果SINEX文件直接提供法方程，则必须提供本模块，包含了此法方程的右手边。
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionStatistic">
            <summary>
            统计信息。
            the following is from standard v2.
            4) The block SOLUTION/STATISTICS is now RECOMMENDED if the requested values are 
            available because for coeffOfParams further combination of solutions it is necessary to have 
            the complete statistical information.
            The preference is given to the original values like 'NUMBER OF OBSERVATIONS' 
            and 'NUMBER OF UNKNOWNS' instead of 'DEGREE OF FREEDOM'.
            The 'NUMBER OF OBSERVATIONS' should represent only the number of 'real'   observations.
            A new value became necessary if unconstrained normal equations are stored 
            because the variance factor contains the constraints of the solution. Therefore 
            the weighted square sum of the vector 'observed minus computed' should be given 
            in the SOLUTION/STATISTICS block to become independent of the influence of the 
            constraints on the variance factor: (o-c)' P (o-c), where (o-c) represents the 
            vector 'observed minus computed' and P denotes the weigth matrix. This new value 
            can be stored under the name WEIGHTED SQUARE SUM OF O-C
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SolutionValue">
            <summary>
            参数值，通常包括方差先验值或方差估计值。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SolutionValue.StdDev">
            <summary>
            Estimated standard deviation for the parameter.
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexFactory">
            <summary>
            Sinex Block 工厂。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Gnsser.Data.Sinex.SinexFile" -->
        <member name="M:Gnsser.Data.Sinex.SinexFile.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.#ctor(System.String)">
            <summary>
            手动创建请用此函数。
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.EstimateParamCount">
            <summary>
            参数数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteCount">
            <summary>
            测站数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.Header">
            <summary>
            头部信息。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.InputHistoryBlock">
            <summary>
            历史记录 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.InputFilesBlock">
            <summary>
            输入文件 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.FileCommentBlock">
            <summary>
            文件描述
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.FileAcknowledgementBlock">
            <summary>
            致谢 信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.FileReferBlock">
            <summary>
            参考信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SatelliteIdBlock">
            <summary>
            卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SatellitePhaseCenterBlock">
            <summary>
            卫星相位中心
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteIdBlock">
            <summary>
            测站基本信息 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteReceiverBlock">
            <summary>
            测站接收机 区。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteAntennaBlock">
            <summary>
            测站 天线 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteGpsPhaseCenterBlock">
            <summary>
            测站GPS相位中心 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SiteEccentricityBlock">
            <summary>
            测站偏心 区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionStattisticsBlock">
            <summary>
            统计区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionEpochBlock">
            <summary>
            历元区
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionEstimateBlock">
            <summary>
            估计值区域
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionAprioriBlock">
            <summary>
            先验值区域
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionMatrixAprioriCova">
            <summary>
            方差先验值
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionMatrixEstimateCova">
            <summary>
            方差估计值
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionNormalEquationMatrix">
            <summary>
            法方程系数阵
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.SolutionNormalEquationVectorBlock">
            <summary>
            法方程右手边
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteCods">
            <summary>
            以顺序数组形式返回测站的编号名称。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetAprioriMatrix">
            <summary>
            得到参数的先验矩阵，是一个二维数组表达的一维列向量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetEstimateMatrix">
            <summary>
            得到参数的估值矩阵，是一个二维数组表达的一维列向量。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetEstimateVector">
            <summary>
            参数估值向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetAprioriVector">
            <summary>
            参数先验值向量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetAprioriCovaMatrix">
            <summary>
            得到先验协方差阵。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetEstimateCovaMatrix">
            <summary>
            估值协方差阵。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetNormalEquationMatrix">
            <summary>
            法方程系数阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetNormalEquationVector">
            <summary>
            法方程右手边
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.ToString">
            <summary>
            转换为SINEX格式。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.HasNormalEquationVectorMatrix">
            <summary>
            是否有法方程右手边。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.HasNormalEquationMatrix">
            <summary>
            是否有法方程系数阵。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.HasEstimateCovaMatrix">
            <summary>
            是否有参数估值协方差阵。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.HasAprioriCovaMatrix">
            <summary>
            是否有参数先验值协方差阵。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexFile.IsOnlyEstimateCoordValue">
            <summary>
            是否只包含坐标先验值和估值
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.CleanNonCoordSolutionValue">
            <summary>
            清理非坐标的值和对应矩阵，对文件进行瘦身。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteId(System.String)">
            <summary>
            由测站名称提取SiteId， 若无，则返回 null.
            </summary>
            <param name="sideCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteEstimatedCoords">
            <summary>
            测站和估值坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteEstimateRmsdCoords">
            <summary>
            测站和估值坐标.z注意名称全为大写
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSinexSites">
            <summary>
            便于使用的测站信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetStatistic">
            <summary>
            获取统计信息
            </summary>
            <returns>文件统计信息</returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetParamIndexes(System.Collections.Generic.List{System.String})">
            <summary>
            指定的测站在本测站集合中的参数编号顺序。
            </summary>
            <param name="sideCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetParamIndexesExcept(System.Collections.Generic.List{System.String})">
            <summary>
            获取不包含指定测站的测站参数索引
            </summary>
            <param name="sideCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteCodeIndexes(System.Collections.Generic.List{System.String})">
            <summary>
            指定的测站在本测站集合中的编号顺序。
            </summary>
            <param name="sideCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSiteCodeIndexesExcept(System.Collections.Generic.List{System.String})">
            <summary>
            获取不包含指定测站的测站索引。
            </summary>
            <param name="sideCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetParamIndexes(System.Collections.Generic.List{System.Int32})">
            <summary>
            将测站编号转换为参数编号列表。
            </summary>
            <param name="sideCodeIndexes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetDistinctSiteCodes(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            提取两个文件所有的测站编号，如果相同则只返回第一个。
            提取顺序为，以 第一个参数 fileA 的编号为基准，fileB 的依次顺序添加。如果 fileA 中已经有的，则略过。
            注：顺序做索引用，不可改变。
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSameSiteCodes(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            提取两个文件都具有的测站名称。
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexFile.GetSameSiteCodes(Gnsser.Data.Sinex.SinexFile,System.Collections.Generic.List{System.String})">
            <summary>
            提取具有的测站名称
            </summary>
            <param name="fileA">SinexFile</param>
            <param name="namesB">测站名称</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexMatrixConvertor">
            <summary>
            Sinex 文件的矩阵与数组之间的转换。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetStdDevs(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine})">
            <summary>
            获取其内的标准差
            </summary>
            <param name="colName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.Merge(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine})">
            <summary>
            合并，产生新的。
            </summary>
            <param name="linesA"></param>
            <param name="linesB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.Merge(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Double,System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Double)">
            <summary>
            合并，产生新的。
            乘以协方差系数。 varFactor = NowFactor / OldFactor
            </summary>
            <param name="list1"></param>
            <param name="varFactorA"></param>
            <param name="list2"></param>
            <param name="varFactorB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrixLines(System.Double[][])">
            <summary>
            将数组转换为Sinex行。
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrix(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Int32,System.Boolean)">
            <summary>
            获取指定大小的交错矩阵。
            从左上角开始截取。
            </summary>
            <param name="aboutSize"></param>
            <param name="isTriangular">是否为三角阵，如果是在只读一半就行了，加快读取时间。</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrix(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Boolean)">
            <summary>
            交错数组.是否为三角阵，如果是在只读一半就行了，加快读取时间。
            </summary>
            <param name="Items"></param>
            <param name="isTriangular"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrixArrayJagged(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Boolean)">
            <summary>
            交错数组.是否为三角阵，如果是在只读一半就行了，加快读取时间。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrixArray2D(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Int32,System.Boolean)">
            <summary>
            获取指定大小的二位数组矩阵。
            从左上角开始截取。
            </summary>
            <param name="aboutSize"></param>
            <param name="isTriangular">是否为三角阵，如果是在只读一半就行了，加快读取时间。</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMatrixConvertor.GetMatrixArray2D(System.Collections.Generic.List{Gnsser.Data.Sinex.MatrixLine},System.Boolean)">
            <summary>
            二位数组
            </summary>
            <param name="isTriangular">是否为三角阵，如果是在只读一半就行了，加快读取时间。</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexMerger">
            <summary>
            Sinex 文件合并器。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.EmergeBasic(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile)">
            <summary>
            合并两个文件的基础信息，如测站名、接收机、天线等信息。
            协方差、平差结果等需要计算后添加进来。
            只有两个文件都有的信息块才会被合并。
            </summary>
            <param name="fileA"></param>
            <param name="fileB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.Merge(Gnsser.Data.Sinex.SinexFile,Gnsser.Data.Sinex.SinexFile,System.Boolean)">
            <summary>
            两个文件合并，本方法只适合计算站点不重复,且不相关的情况。
            信息只是简单的叠加。只有两个文件都有的信息块才会被合并。
            </summary>
            <param name="fileB"></param>
            <param name="eraseNonCoord"> 是否清理非坐标的值和对应矩阵</param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.MergeSolutionMatrix(Gnsser.Data.Sinex.SolutionMatrixBlock,Gnsser.Data.Sinex.SolutionMatrixBlock,System.Double,Gnsser.Data.Sinex.SolutionMatrixBlock,System.Double,Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue})">
            <summary>
            合并协方差阵，并更新标准差。
            </summary>
            <param name="merge"></param>
            <param name="solutionMatrixBlockA"></param>
            <param name="varFactorA"></param>
            <param name="solutionMatrixBlockB"></param>
            <param name="varFactorB"></param>
            <param name="SolutionValueBlockMerged"></param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.UpdateStdDev(Gnsser.Data.Sinex.SolutionMatrixBlock,Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue})">
            <summary>
            更新标准差
            </summary>
            <param name="merge"></param>
            <param name="SolutionValueBlockMerged"></param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.CleanNonCoordSolutionValue(Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue},Gnsser.Data.Sinex.SolutionMatrixBlock)">
            <summary>
            清除非坐标的信息。同时清理对应的矩阵。
            </summary>
            <param name="solutionValues"></param>
            <param name="matrixBlock"></param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.MergeBlock``1(Gnsser.Data.Sinex.ICollectionBlock{``0},Gnsser.Data.Sinex.ICollectionBlock{``0},Gnsser.Data.Sinex.ICollectionBlock{``0})">
            <summary>
            将a和b合并到merged里面，先合并a，在合并b，若b中有相同的则剔除。
            </summary>
            <typeparam name="TProduct"></typeparam>
            <param name="merged"></param>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexMerger.MergeSolutionValue(Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue},Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue},Gnsser.Data.Sinex.ICollectionBlock{Gnsser.Data.Sinex.SolutionValue})">
            <summary>
            /合并解算结果，更新编号，但不更新标准差
            </summary>
            <param name="SolutionValueBlockMerged"></param>
            <param name="SolutionValueBlockA"></param>
            <param name="SolutionValueBlockB"></param>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexSite">
            <summary>
            测站，及其属性。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.Name">
            <summary>
            名称，代码。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.DateStart">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.DateEnd">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.ApproxGeoCoord">
            <summary>
            初始估值。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.Eccentricity">
            <summary>
            偏心坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.AprioriGeoCoord">
            <summary>
            先验大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.AprioriXYZ">
            <summary>
            先验空间直角坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.AprioriXyzStdDev">
            <summary>
            先验空间直角坐标均方差（标准差）
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.EstimateGeoCoord">
            <summary>
            估值大地坐标
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.EstimateXYZ">
            <summary>
            估值空间直角坐标。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.EstimateXyzStdDev">
            <summary>
            估值空间直角坐标均方差（？标准差）
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.Receiver">
            <summary>
            接收机
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexSite.Antenna">
            <summary>
            天线
            </summary>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexSiteDetail">
            <summary>
            测站，及其属性。
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexSiteDetail.Compare(Gnsser.Data.Sinex.SinexSiteDetail)">
            <summary>
            与另一个测站进行比较
            </summary>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexSiteDetail.Compare(System.Collections.Generic.List{Gnsser.Data.Sinex.SinexSiteDetail},System.Collections.Generic.List{Gnsser.Data.Sinex.SinexSiteDetail})">
            <summary>
            比较列表。以A为基准，比较两个列表同时有的测站。
            </summary>
            <param name="sitesA"></param>
            <param name="sitesB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexSiteDetail.Compare(Gnsser.Data.Sinex.SinexSiteDetail,Gnsser.Data.Sinex.SinexSiteDetail)">
            <summary>
            两个测站信息之差。
            </summary>
            <param name="one"></param>
            <param name="another"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Sinex.SinexStatistic">
            <summary>
            统计信息
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.NumberOfObservations">
            <summary>
            of observations used in the adjustment.
            观测值数量。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.NumberOfUnknown">
            <summary>
            未知数数量。
            of unknowns solved in the adjustment
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.SamplingIntervalSeconds">
            <summary>
            Interval in fraction between successives observations.
            抽样间隔（秒）。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.SquareSumOfResidualsVTPV">
            <summary>
            SQUARE SUM OF RESIDUALS (VTPV)'
            Sum of squares of residuals.  (V'PV); 
            V - resid. vector; 残差向量
            P - weight matrix 权矩阵
            残差平方和(V'PV)。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.PhaseMeasurementsSigma">
            <summary>
            'PHASE MEASUREMENTS SIGMA'
            Sigma used for the phase measurements.
            相位测量Sigma
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.CodeMeasurementsSigma">
            <summary>
            'CODE MEASUREMENTS SIGMA'
            Sigma used for the obsCodeode (pseudo-range) measurements.
            伪距测量Sigma
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.NumberOfDegreesOfFreedom">
            <summary>
            'NUMBER OF DEGREES OF FREEDOM' 
            # of observations minus the
            # of unknowns (df)
            自由度数量。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.VarianceOfUnitWeight">
            <summary>
            'VARIANCE FACTOR' 
            Sum of squares of residuals divided by the degrees of freedom (V'PV/df). 
            Equivalent to Chi-squared/df. 
            残差平方和除以自由度。单位权方差因子？
            </summary>
        </member>
        <member name="P:Gnsser.Data.Sinex.SinexStatistic.WeightedSqureSumOfOMinusC">
            <summary>
            'WEIGHTED SQUARE SUM OF O-C' 
            Sum of squares of the vector 
            'observed minus computed': (o-c)'P(o-c) 
            with P - weigth matrix
            观测值减计算值加权平方和
            </summary>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexStatistic.Merge(Gnsser.Data.Sinex.SinexStatistic)">
            <summary>
            合并两个统计信息产生一个新的。
            本方法假定两文件观测内容不重复，且独立不相关。
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexStatistic.Merge(Gnsser.Data.Sinex.SinexStatistic,Gnsser.Data.Sinex.SinexStatistic)">
            <summary>
            合并两个统计信息产生一个新的。
            本方法假定两文件观测内容不重复，且独立不相关。
            单位权方差 = （单位权方差A * 自由度A + 单位权方差B * 自由度B）/（自由度A + 自由度B）
            </summary>
            <param name="one"></param>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Sinex.SinexStatistic.GetNewVarianceFactor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            单位权方差的合并。
            </summary>
            <param name="varianceA"></param>
            <param name="extraObsA"></param>
            <param name="varianceB"></param>
            <param name="extraObsB"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.SunMoonTimeStorage">
            <summary>
            存储太阳月亮时间和位置
            </summary>
        </member>
        <member name="T:Gnsser.Data.SunMoonTime">
            <summary>
            以分钟采用率为单位。
            </summary>
        </member>
        <member name="T:Gnsser.Data.UniverseObjectProvider">
            <summary>
            宇宙星体信息供应者
            </summary>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.Data.UniverseObjectProvider.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.BuildKey(Geo.Times.Time)">
            <summary>
            构建关键字，将时间划分为以分钟或半分钟为序列。
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetSunPosition(Geo.Times.Time)">
            <summary>
            获取指定时刻太阳的位置。
            </summary>
            <param name="Time">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetSunPosition(Geo.Times.Time,Gnsser.Data.ErpItem,Geo.Coordinates.XYZ@,Geo.Coordinates.XYZ@,System.Double@)">
            <summary>
            获取指定时刻太阳与月亮的位置
            </summary>
            <param name="time"></param>
            <param name="erpv"></param>
            <param name="rsun"></param>
            <param name="rmoon"></param>
            <param name="gmst"></param>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetOrCreate(Geo.Times.Time,Gnsser.Data.ErpItem)">
            <summary>
            计算
            </summary>
            <param name="time"></param>
            <param name="erpv"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetSunPosition(Geo.Times.Time,Gnsser.Data.ErpItem,Geo.Coordinates.XYZ@)">
            <summary>
            获取指定时刻太阳的位置。
            </summary>
            <param name="Time">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetMoonPosition(Geo.Times.Time)">
            <summary>
            获取指定时刻月亮的位置。
            </summary>
            <param name="Time">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.UniverseObjectProvider.GetEarthPoleDisplacement">
            <summary>
            地球极移，单位：弧度。
            pole displacement x y parameters, in arcseconds
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Vmf1File.#ctor(System.Collections.Generic.List{Gnsser.Data.Vmf1Value})">
            <summary>
            构造函数
            </summary>
            <param name="VMF1Infos"></param>
        </member>
        <member name="P:Gnsser.Data.Vmf1File.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1File.VMF1Infos">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="M:Gnsser.Data.Vmf1File.Clear">
            <summary>
            清除所有
            </summary>
        </member>
        <member name="T:Gnsser.Data.Vmf1Value">
            <summary>
            具体数值
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.stanam">
            <summary>
            测站名称station name (8 characters)
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.mjd">
            <summary>
            约化儒略日，一天分为四段 .00 .25 .50和.75 modified Julian date
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.ah">
            <summary>
            干分量的系数a hydrostatic coefficient a
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.aw">
            <summary>
            湿分量的系数a wet coefficient a
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.hzd">
            <summary>
            VMF1模型的干分量延迟 hydrostatic zenith delay
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.wzd">
            <summary>
            VMF1模型的湿分量延迟wet zenith delay
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.meantmpKe">
            <summary>
            卡尔文平均大气温度mean temperature of the atmosphere above the site in Kelvin
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.pressure">
            <summary>
            平均大气压强  pressure at the site in hPa
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.temCe">
            <summary>
            以摄氏度为单位的温度 temperature at the site in Celsius
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.waterPre">
            <summary>
            water vapour pressure at the site in hPa
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1Value.ortHeight">
            <summary>
            测站正高orthometric height of the station (using geoid EGM96)
            </summary>
        </member>
        <member name="T:Gnsser.Data.Vmf1FileReader">
            <summary>
            读取器
            </summary>
        </member>
        <member name="M:Gnsser.Data.Vmf1FileReader.#ctor(System.String)">
            <summary>
            读取器
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1FileReader.Read">
            <summary>
            读取
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.Vmf1DataService">
            <summary>
            对流层的VMF1模型
            </summary>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="vfmFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="vfmFilePath"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取
            </summary>
            <param name="stationName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Add(System.String,System.Collections.Generic.List{Gnsser.Data.Vmf1Value})">
            <summary>
            添加
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Set(System.String,System.Collections.Generic.List{Gnsser.Data.Vmf1Value})">
            <summary>
            设置
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Contains(System.String)">
            <summary>
            是否包含
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.Remove(System.String)">
            <summary>
            移除一个
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Gnsser.Data.Vmf1DataService.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Data.Vmf1DataService.Count">
            <summary>
            数量。
            </summary>
        </member>
        <member name="P:Gnsser.Data.Vmf1DataService.Item(System.String)">
            <summary>
            检索器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.IgsProductNameBuilder">
            <summary>
            计算产品名称，文件路径服务。通过一些条件提供路径服务。
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductNameBuilder.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
            <param name="extension"></param>
        </member>
        <member name="M:Gnsser.Data.IgsProductNameBuilder.#ctor(System.String,Gnsser.IgsProductType,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="M:Gnsser.Data.IgsProductNameBuilder.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            构造函数
            </summary>
            <param name="pathModels">路径模板，安装默认顺序</param>
        </member>
        <member name="P:Gnsser.Data.IgsProductNameBuilder.FilePathBuilder">
            <summary>
            文件路径生成
            </summary>
        </member>
        <member name="M:Gnsser.Data.IgsProductNameBuilder.Get(Geo.Times.Time)">
            <summary>
            根据时间获取路径
            </summary>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Data.IgsProductNameBuilder.GetFileExtension(Gnsser.IgsProductType,Geo.Times.Time)">
            <summary>
            获取后缀名称
            </summary>
            <param name="type"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Data.GnssFileService`1">
            <summary>
            GNSS 数据源服务。
            </summary>
        </member>
        <member name="M:Gnsser.Data.GnssFileService`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.Data.GnssFileService`1.#ctor(Geo.FileOption)">
            <summary>
            构造函数
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:Gnsser.Data.IGnssFileService">
            <summary>
            GNSS 数据源服务。
            </summary>
        </member>
        <member name="T:Gnsser.SiteObsBaselineManager">
            <summary>
            管理器
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.#ctor(System.Collections.Generic.List{Gnsser.SiteObsBaseline})">
            <summary>
            构造函数
            </summary>
            <param name="lines"></param>
        </member>
        <member name="P:Gnsser.SiteObsBaselineManager.RemovedLines">
            <summary>
            移除的基线
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Remove(Gnsser.GnssBaseLineName)">
            <summary>
            移除基线
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Remove(Gnsser.GnssBaseLineName,System.Boolean)">
            <summary>
            移除
            </summary>
            <param name="key"></param>
            <param name="isRecord"></param>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetLineNamesWithEstValue">
            <summary>
            获取具有平差值的名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Get(System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="siteName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Remove(System.String,System.Boolean)">
            <summary>
            移除包含指定测站的基线，返回移除数量
            </summary>
            <param name="siteName"></param>
            <param name="isRecord "></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Add(Gnsser.SiteObsBaseline)">
            <summary>
            添加
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Add(System.Collections.Generic.List{Gnsser.SiteObsBaseline},System.Boolean)">
            <summary>
            添加
            </summary>
            <param name="siteObsBaselines"></param>
            <param name="isOverWrite"></param>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetShortLines(System.Double)">
            <summary>
            短基线
            </summary>
            <param name="MaxShortLineLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetLongLines(System.Double)">
            <summary>
            长基线
            </summary>
            <param name="MaxShortLineLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetSiteNames">
            <summary>
            测站名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetEstimatedBaselines">
            <summary>
            获取所有的测量基线
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.BuidBaseLineNet">
            <summary>
            构建基线网
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetBaselineTable">
            <summary>
            获取基线表格
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.IsIndependent(Gnsser.GnssBaseLineName)">
            <summary>
            是否是独立基线，如果所有基线包含，其中一个测站，只有一个，则为独立基线。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetOrReversed(System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="siteA"></param>
            <param name="siteB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.GetOrReversed(Gnsser.GnssBaseLineName)">
            <summary>
            获取
            </summary>
            <param name="lineName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Contains(Gnsser.ObsSiteInfo)">
            <summary>
            是否包含测站对象
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Remove(Gnsser.ObsSiteInfo,System.Boolean)">
            <summary>
            移除，是否记录。
            </summary>
            <param name="site"></param>
            <param name="isRecord"></param>
        </member>
        <member name="M:Gnsser.SiteObsBaselineManager.Clear">
            <summary>
            清理
            </summary>
        </member>
        <member name="T:Gnsser.ResultState">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="T:Gnsser.SiteObsBaseline">
            <summary>
            测站基线
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.#ctor(Gnsser.ObsSiteInfo,Gnsser.ObsSiteInfo)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.NetPeriod">
            <summary>
            所在网络的时段
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.ResultState">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.LineName">
            <summary>
            基线名称
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.EstimatedResult">
            <summary>
            当前解算的结果
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.RefName">
            <summary>
             参考站名称
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.RovName">
            <summary>
             流动站名称
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.TimePeriod">
            <summary>
            时段，两个观测的共有时段。
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsBaseline.TimeSpan">
            <summary>
            共同时段信息。
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.GetLinesInPeriod(System.Collections.Generic.List{Gnsser.SiteObsBaseline},Geo.Times.TimePeriod,System.TimeSpan)">
            <summary>
            过滤获取指定时段的基线集合
            </summary>
            <param name="siteObsBaselines"></param>
            <param name="netPeriod"></param>
            <param name="minCommonSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.GetLength">
            <summary>
            获取长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.Contains(Gnsser.ObsSiteInfo)">
            <summary>
            包含
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.Equals(System.Object)">
            <summary>
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsBaseline.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatElevatoinTableBuilder">
            <summary>
            卫星高度角表格生成器。
            </summary>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.#ctor(System.String[],System.Collections.Generic.List{Gnsser.SatelliteType},System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="obsPathes"></param>
            <param name="satTypes"></param>
            <param name="outInterval"></param> 
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.#ctor(System.String[],System.Collections.Generic.List{Gnsser.SatelliteType},Geo.TimeLooper,System.Double,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="obsPathes"></param>
            <param name="satTypes"></param>
            <param name="outInterval"></param>
            <param name="TimeLooper">若指定星历文件，则只可以处理具体星历日期的数据。</param>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.#ctor(System.Collections.Generic.Dictionary{System.String,Geo.Coordinates.XYZ},Geo.TimeLooper,System.Collections.Generic.List{Gnsser.SatelliteType},System.Double)">
            <summary>
            卫星高度角生成器
            </summary>
            <param name="SiteCoords"></param>
            <param name="TimeLooper"></param>
            <param name="satTypes"></param>
            <param name="AngleCut"></param>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.EphemerisService">
            <summary>
            星历服务
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.OutInterval">
            <summary>
            输出的采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.TimeLooper">
            <summary>
            时间迭代器
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.ObsPathes">
            <summary>
            输入路径
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.NamePostfix">
            <summary>
            表的后缀名，以区别其他表格。
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.AngleCut">
            <summary>
            高度截止角
            </summary>
        </member>
        <member name="P:Gnsser.SatElevatoinTableBuilder.ProgressViewer">
            <summary>
            进度通知接口
            </summary>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.Build">
            <summary>
            生成表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.BuildTable(System.String)">
            <summary>
            一个测站，一个文件。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.BuildTable(Geo.TimeLooper,Geo.Coordinates.XYZ,System.Collections.Generic.List{Gnsser.SatelliteType},System.Double,Gnsser.Service.IEphemerisService,System.String)">
            <summary>
            生成一个卫星高度角表格
            </summary>
            <param name="TimeLooper"></param>
            <param name="siteXyz"></param>
            <param name="SatelliteTypes"></param>
            <param name="AngleCut"></param>
            <param name="EphemerisService"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.BuildTable(Geo.Times.Time,Geo.Times.Time,System.Double,Geo.Coordinates.XYZ,System.Collections.Generic.List{Gnsser.SatelliteType},System.Double,Gnsser.Service.IEphemerisService,System.String)">
            <summary>
            生成一个表格
            </summary>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="interval"></param>
            <param name="siteXyz"></param>
            <param name="SatelliteTypes"></param>
            <param name="AngleCut"></param>
            <param name="EphemerisService"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.BuildTable(System.String,System.Double,Gnsser.Service.IEphemerisService,System.String)">
            <summary>
            通过文件构建,按照文件坐标计算，按照其采样率输出。
            </summary>
            <param name="oFilePath"></param>
            <param name="EphemerisService"></param>
            <param name="tableName"></param>
            <param name="AngleCut"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevatoinTableBuilder.BuildTable(Gnsser.Data.Rinex.RinexObsFile,System.Double,Gnsser.Service.IEphemerisService,System.String)">
            <summary>
            通过文件构建,按照文件坐标计算，按照其采样率输出。
            </summary>
            <param name="obsFile"></param>
            <param name="EphemerisService"></param>
            <param name="tableName"></param>
            <param name="AngleCut"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.WideLaneBiasFile">
            <summary>
            文件，存储所有，快速响应。 
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasFile.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.WideLaneBiasService">
            <summary>
            法国宽项读取器。 
            ftp://ftpsedr.cls.fr/pub/igsac/Wide_lane_GPS_satellite_biais.wsb
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasService.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="P:Gnsser.WideLaneBiasService.Reader">
            <summary>
            读取
            </summary>
        </member>
        <member name="P:Gnsser.WideLaneBiasService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            如果获取失败，则返回 0 。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WideLaneBiasService.Get(Geo.Times.Time)">
            <summary>
            获取当天的
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ReversedSingleSiteObsStream">
            <summary>
            反转的单站观测数据源
            </summary>
        </member>
        <member name="M:Gnsser.ReversedSingleSiteObsStream.#ctor(Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            反转的单站观测数据源
            </summary>
            <param name="Stream"></param>
        </member>
        <member name="P:Gnsser.ReversedSingleSiteObsStream.OriginalSource">
            <summary>
            初始数据源
            </summary>
        </member>
        <member name="P:Gnsser.ReversedSingleSiteObsStream.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="P:Gnsser.ReversedSingleSiteObsStream.ObsInfo">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.ReversedSingleSiteObsStream.CurrentProduct">
            <summary>
            当前产品
            </summary>
        </member>
        <member name="E:Gnsser.ReversedSingleSiteObsStream.ProductProduced">
            <summary>
            产品产生
            </summary>
        </member>
        <member name="T:Gnsser.ReversedMultiSiteObsStream">
            <summary>
            反转的多观测数据源
            </summary>
        </member>
        <member name="M:Gnsser.ReversedMultiSiteObsStream.#ctor(Gnsser.MultiSiteObsStream)">
            <summary>
            反转的多观测数据源
            </summary>
            <param name="Stream"></param>
        </member>
        <member name="P:Gnsser.ReversedMultiSiteObsStream.OriginalSource">
            <summary>
            初始数据源
            </summary>
        </member>
        <member name="P:Gnsser.ReversedMultiSiteObsStream.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="P:Gnsser.ReversedMultiSiteObsStream.ObsInfo">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.ReversedMultiSiteObsStream.CurrentProduct">
            <summary>
            当前产品
            </summary>
        </member>
        <member name="E:Gnsser.ReversedMultiSiteObsStream.ProductProduced">
            <summary>
            产品产生
            </summary>
        </member>
        <member name="T:Gnsser.AbstractServiceProvider`1">
            <summary>
            提供某一会话的服务。
            </summary>
        </member>
        <member name="M:Gnsser.AbstractServiceProvider`1.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption)">
            <summary>
            构造函数.星历数据源提供适配器
            </summary>
            <param name="option"></param>
            <param name="processOption"></param> 
        </member>
        <member name="P:Gnsser.AbstractServiceProvider`1.DataSourceOption">
            <summary>
            全局数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.AbstractServiceProvider`1.ProcessOption">
            <summary>
            当前会话数据处理选项
            </summary>
        </member>
        <member name="P:Gnsser.AbstractServiceProvider`1.CurrentService">
            <summary>
            当前服务
            </summary>
        </member>
        <member name="M:Gnsser.AbstractServiceProvider`1.GetService">
            <summary>
            获取服务，根据设置自动判断。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.ErpServiceProvider">
            <summary>
            ERP数据源提供适配器。
            提供某一会话的 ERP 服务。
            </summary>
        </member>
        <member name="M:Gnsser.ErpServiceProvider.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption)">
            <summary>
            构造函数.星历数据源提供适配器
            </summary>
            <param name="option"></param>
            <param name="processOption"></param> 
        </member>
        <member name="M:Gnsser.ErpServiceProvider.GetService">
            <summary>
            获取服务，根据设置自动判断。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.SimpleClockServiceProvider">
            <summary>
            钟差数据源提供适配器。
            提供某一会话的星历服务。
            </summary>
        </member>
        <member name="M:Gnsser.SimpleClockServiceProvider.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption)">
            <summary>
            构造函数.星历数据源提供适配器
            </summary>
            <param name="option"></param>
            <param name="processOption"></param> 
        </member>
        <member name="M:Gnsser.SimpleClockServiceProvider.GetService">
            <summary>
            获取服务，根据设置自动判断。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.ClockServiceProvider">
            <summary>
            钟差数据源提供适配器。
            提供某一会话的星历服务。
            </summary>
        </member>
        <member name="M:Gnsser.ClockServiceProvider.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption)">
            <summary>
            构造函数.星历数据源提供适配器
            </summary>
            <param name="option"></param>
            <param name="processOption"></param> 
        </member>
        <member name="M:Gnsser.ClockServiceProvider.GetService">
            <summary>
            获取服务，根据设置自动判断。
            </summary> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalGlonassSlotFreqService">
            <summary>
            全局自动GLONASS频率服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalGlonassSlotFreqService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalGlonassSlotFreqService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalGlonassSlotFreqService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GlobalGlonassSlotFreqService.SatTimePeriodValueStoarge">
            <summary>
            存储对象
            </summary>
        </member>
        <member name="T:Gnsser.GlobalNavEphemerisService">
             <summary>
            全局自动导航星历服务
             </summary>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalNavEphemerisService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalNavEphemerisService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisService.GetService(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisService.SetEmptyServiceWithinSomeHours(Geo.Times.Time,Gnsser.Service.IEphemerisService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="P:Gnsser.GlobalNavEphemerisService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisService.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalKlobucharIonoService">
            <summary>
            全局自动 Klobuchar 电离层服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalKlobucharIonoService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalKlobucharIonoService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GlobalKlobucharIonoService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取值
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.GetService(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.SetEmptyServiceWithinSomeHours(Geo.Times.Time,Gnsser.Data.IIonoService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="receiverTime"></param>
            <param name="geocentricLonLat"></param>
            <param name="elevation"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GlobalKlobucharIonoService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.GlobalKlobucharIonoService.HeightOfModel">
            <summary>
            模型高度
            </summary>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取斜距对应的伪距的电离层延迟误差
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            斜距
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalIgsGridIonoDcbService">
            <summary>
            全局自动格网电离层DCB服务，不必读取内容
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.IsSkipContent">
            <summary>
            是否忽略体文件的读取
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetDcbMeterForP1(Geo.Times.Time,System.String)">
            <summary>
            获取DCB 对于P1的距离改正。
            </summary>
            <param name="time"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetDcbMeterForP1(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取DCB 对于P1的距离改正。
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetDcb(Geo.Times.Time,System.String)">
            <summary>
            获取当天测站DCB
            </summary>
            <param name="time"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetDcb(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取当天卫星DCB
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取值
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg">地心经纬度，球坐标，单位度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetService(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.SetEmptyServiceWithinSomeHours(Geo.Times.Time,Gnsser.Data.IGridIonoFileService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取倾斜延迟距离
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetSlope(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="time">历元</param>
            <param name="siteXyz">测站坐标</param>
            <param name="satXyz">卫星坐标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetIonoDelayRange(System.Double,System.Double)">
            <summary>
            电离层对于伪距的延迟距离，若是载波则需要换符号。
            </summary>
            <param name="tec">电子数量，单位 1e16.</param>
            <param name="freq">频率，单位 10^6</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="receiverTime">历元</param>
            <param name="geocentricLonLat">地心经纬度</param>
            <param name="elevation">测站卫星地心高度角</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoDcbService.HeightOfModel">
            <summary>
            模型高度
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoDcbService.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalCodeHarmoIonoService">
            <summary>
            全局自动CODE球谐函数电离层服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalCodeHarmoIonoService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalCodeHarmoIonoService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GlobalCodeHarmoIonoService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取值
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.GetService(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.SetEmptyServiceWithinSomeHours(Geo.Times.Time,Gnsser.Data.IIonoService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="receiverTime"></param>
            <param name="geocentricLonLat"></param>
            <param name="elevation"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GlobalCodeHarmoIonoService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.GlobalCodeHarmoIonoService.HeightOfModel">
            <summary>
            模型高度
            </summary>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取斜距对应的伪距的电离层延迟误差
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IonoSerivceType">
            <summary>
            电离层服务类型
            </summary>
        </member>
        <member name="F:Gnsser.IonoSerivceType.IgsGrid">
            <summary>
            IGS 格网电离层
            </summary>
        </member>
        <member name="F:Gnsser.IonoSerivceType.SphericalHarmonics">
            <summary>
            CODE 球谐函数模型
            </summary>
        </member>
        <member name="F:Gnsser.IonoSerivceType.GpsKlobuchar">
            <summary>
            GPS 导航 Klobuchar
            </summary>
        </member>
        <member name="T:Gnsser.GlobalIgsGridIonoService">
            <summary>
            全局自动格网电离层服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.IsSkipContent">
            <summary>
            是否忽略体文件的读取
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.GetDcb(Geo.Times.Time,System.String)">
            <summary>
            获取当天测站DCB
            </summary>
            <param name="time"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.GetDcb(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取当天卫星DCB
            </summary>
            <param name="time"></param>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.Get(Geo.Times.Time,Geo.Coordinates.LonLat)">
            <summary>
            获取值
            </summary>
            <param name="time"></param>
            <param name="geocentricLonlatDeg"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.GetService(Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.SetEmptyServiceWithinSomeHours(Geo.Times.Time,Gnsser.Data.IGridIonoFileService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.GetSlope(Geo.Times.Time,Geo.Coordinates.LonLat,System.Double)">
            <summary>
            获取倾斜电离层电子数
            </summary>
            <param name="receiverTime"></param>
            <param name="geocentricLonLat"></param>
            <param name="elevation"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsGridIonoService.HeightOfModel">
            <summary>
            模型高度
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.ToString">
            <summary>
            字符串显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsGridIonoService.GetSlopeDelayRange(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            获取斜距对应的伪距的电离层延迟误差
            </summary>
            <param name="time"></param>
            <param name="siteXyz"></param>
            <param name="satXyz"></param>
            <param name="freq"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalIgsErpService">
            <summary>
            全局自动ERP服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsErpService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsErpService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsErpService.TimePeriod">
            <summary>
            服务的时段信息
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsErpService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="M:Gnsser.GlobalIgsErpService.SetEmptyServiceWithinSomeHours(Geo.Times.Time)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsErpService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsErpService.ToString">
            <summary>
            显示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalIgsSimpleClockService">
            <summary>
            全局自动钟差服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsSimpleClockService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsSimpleClockService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsSimpleClockService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsSimpleClockService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsSimpleClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取星历。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsSimpleClockService.SetEmptyServiceWithinSomeHours(Gnsser.SatelliteNumber,Geo.Times.Time,Gnsser.Data.ISimpleClockService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsSimpleClockService.TimePeriod">
            <summary>
            时间段。没什么用
            </summary>
        </member>
        <member name="T:Gnsser.GlobalIgsClockService">
            <summary>
            全局自动钟差服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsClockService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsClockService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsClockService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsClockService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsClockService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取星历。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsClockService.SetEmptyServiceWithinSomeHours(Gnsser.SatelliteNumber,Geo.Times.Time,Gnsser.Data.IClockService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsClockService.TimePeriod">
            <summary>
            时间段。没什么用
            </summary>
        </member>
        <member name="T:Gnsser.GlobalNavEphemerisServiceHolder">
            <summary>
            Iono 服务池。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalNavEphemerisServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.GlobalKlobucharIonoServiceHolder">
            <summary>
            Iono 服务池。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalKlobucharIonoServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.GlobalCodeHarmoIonoServiceHolder">
            <summary>
            Iono 服务池。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalCodeHarmoIonoServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.IgsGridIonoServiceHolder">
            <summary>
            grid Iono 服务池。
            </summary>
        </member>
        <member name="M:Gnsser.IgsGridIonoServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.ErpServiceHolder">
            <summary>
            ERP 服务池。
            </summary>
        </member>
        <member name="M:Gnsser.ErpServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.ServiceHoulder`1">
            <summary>
            不用考虑系统类型的服务池
            </summary>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:Gnsser.ServiceHoulder`1.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ServiceHoulder`1.MaxHoulderCount">
            <summary>
            最大的保有数量，超出后去除第一个。
            </summary>
        </member>
        <member name="P:Gnsser.ServiceHoulder`1.IsCanBuffered">
            <summary>
            是否可以跨时段访问,根据时间buffer设置
            </summary>
        </member>
        <member name="P:Gnsser.ServiceHoulder`1.Current">
            <summary>
            当前的
            </summary>
        </member>
        <member name="P:Gnsser.ServiceHoulder`1.LastVisitTime">
            <summary>
            存储刚刚访问的时间，超过时限才释放资源
            </summary>
        </member>
        <member name="P:Gnsser.ServiceHoulder`1.MinExpireTime">
            <summary>
            最小的过期时间，超过才能释放资源
            </summary>
        </member>
        <member name="M:Gnsser.ServiceHoulder`1.Set(Geo.Times.BufferedTimePeriod,`0)">
            <summary>
            设置
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.ServiceHoulder`1.Contains(Geo.Times.Time)">
            <summary>
            是否包含
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ServiceHoulder`1.GetService(Geo.Times.Time)">
            <summary>
            是否包含该时间
            </summary>
            <param name="time"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.EphemerisServiceHolder">
            <summary>
            多系统星历服务池。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.ClockServiceHolder">
            <summary>
            多系统钟差服务池。
            </summary>
        </member>
        <member name="M:Gnsser.ClockServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.SimpleClockServiceHolder">
            <summary>
            多系统钟差服务池。
            </summary>
        </member>
        <member name="M:Gnsser.SimpleClockServiceHolder.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.MultiSysServiceHoulder`1">
            <summary>
            多系统服务池
            </summary>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="M:Gnsser.MultiSysServiceHoulder`1.#ctor(System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.MultiSysServiceHoulder`1.MaxHoulderCount">
            <summary>
            最大的保有数量，超出后去除第一个。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSysServiceHoulder`1.Current">
            <summary>
            当前的
            </summary>
        </member>
        <member name="M:Gnsser.MultiSysServiceHoulder`1.Contains(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            是否包含
            </summary>
            <param name="satType"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSysServiceHoulder`1.GetService(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            是否包含该时间
            </summary>
            <param name="time"></param>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSysServiceHoulder`1.Create(Gnsser.SatelliteType)">
            <summary>
            创建默认
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalIgsEphemerisService">
            <summary>
            全局星历服务。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.Init(Gnsser.GnsserConfig)">
            <summary>
            初始化
            </summary>
            <param name="DataSourceOption"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.IgsEphAutoProvider">
            <summary>
            IGS 星历自动提供
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.GnsserConfig">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.IsAvailable(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            通过实际数据获取判断是否可用
            </summary>
            <param name="time"></param>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.CurrentService">
            <summary>
            当前服务
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取星历。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.SetEmptyServiceWithinSomeHours(Gnsser.SatelliteNumber,Geo.Times.Time,Gnsser.Service.IEphemerisService)">
            <summary>
            设置在一定时间内，不再访问
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <param name="services"></param>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.TimePeriod">
            <summary>
            时间段。没什么用
            </summary>
        </member>
        <member name="P:Gnsser.GlobalIgsEphemerisService.Prns">
            <summary>
            没什么用
            </summary>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.Gets">
            <summary>
            没什么用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            没什么用
            </summary>
            <param name="prn"></param>
            <param name="timeStart"></param>
            <param name="timeEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GlobalIgsEphemerisService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            没什么用
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GlobalDataSourceService">
            <summary>
            封装全局 GNSS 数据源服务，如天线文件服务，海潮等，应该包括星历。
            </summary>
        </member>
        <member name="M:Gnsser.GlobalDataSourceService.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.Instance">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="M:Gnsser.GlobalDataSourceService.Init(Gnsser.GnsserConfig)">
            <summary>
            加载所有数据源.//2015.05.12, czs, 应该采用懒加载模式，用则加载，不用则不加载，可以提高效率
            </summary> 
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IonoEpochParamService">
            <summary>
            历元电离层参数服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.gpt2DataService">
            <summary>
            GPT2模型
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.gpt2DataService1Degree">
            <summary>
            GPT2模型 1度分辨率
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.SiteCoordService">
            <summary>
            坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.StaionInfoService">
            <summary>
            坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.SatInfoService">
            <summary>
            SatInfoService  数据
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.DcbDataService">
            <summary>
            DCB 数据
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.ErpDataService">
            <summary>
            ERP 数据
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.Vmf1DataService">
            <summary>
            VMF1模型
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IgsAutoEphemerisService">
            <summary>
            必须指定卫星提供者。多星历服务的第一个系统的星历服务。
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IgsNavEphemerisService">
            <summary>
            必须指定卫星提供者。多星历服务的第一个系统的星历服务。
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.HasEphemerisService">
            <summary>
            是否具有星历服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.HasClockService">
            <summary>
            是否具有钟差服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.HasErpService">
            <summary>
            是否具有ERP服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.ClockService">
            <summary>
            钟差文件，精密钟差。可选。
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.AntennaDataSource">
            <summary>
            天线数据源
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.AntennaDataSourceIgs14">
            <summary>
            天线数据源 IGS 14
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.AntennaDataSourceIgs08">
            <summary>
            天线数据源 IGS 08
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.OceanLoadingDataSource">
            <summary>
            海洋潮汐数据源
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.SatStateDataSource">
            <summary>
            卫星状态数据源
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.UniverseObjectProvider">
            <summary>
            宇宙目标数据源
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IgsCodeHarmoIonoFileService">
            <summary>
            IGS 电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IgsGridIonoFileService">
            <summary>
            IGS   电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IgsKlobucharIonoService">
            <summary>
            IGS Klobuchar 电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.IonoParamModelService">
            <summary>
            电离层参数服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.TropAugService">
            <summary>
            对流层增强服务
            </summary>
        </member>
        <member name="P:Gnsser.GlobalDataSourceService.GridIonoDcbDataService">
            <summary>
            IGS电离层DCB改正
            </summary>
        </member>
        <member name="T:Gnsser.DataSourceContext">
            <summary>
            封装，提供更便利的数据源。所有的数据源服务，如星历、钟差等，都应该在此类注册和使用。
            每次任务都具有一个数据上下文，因而不应该定义为单利模式。
            数据源首先应该在此注册，使用时先判断是否注册了，再使用。
            应该分开考虑：2016.10.02.07.58, czs
            1、与时域相关；
            2、与测站相关；
            3、与系统相关。
            </summary>
        </member>
        <member name="M:Gnsser.DataSourceContext.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.DataSourceContext.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption,Gnsser.SessionInfo)">
            <summary>
            通用构造函数
            </summary>
            <param name="GlobalDataOption"></param>
            <param name="option"></param>
            <param name="session"></param>
        </member>
        <member name="P:Gnsser.DataSourceContext.GlobalDataSource">
            <summary>
            全局数据源
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.GlobalDataOption">
            <summary>
            数据源选项
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.Option">
            <summary>
            处理选项。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.Session">
            <summary>
            当前会话信息
            </summary>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadDataSource">
            <summary>
            加载所有数据源.//2015.05.12, czs, 应该采用懒加载模式，用则加载，不用则不加载，可以提高效率
            </summary> 
        </member>
        <member name="M:Gnsser.DataSourceContext.SetAntennaDataSource">
            <summary>
            根据星历选择天线文件，首先依据星历指定值，其次按照时间分隔
            </summary>
        </member>
        <member name="M:Gnsser.DataSourceContext.CheckOrUpdateEphAndClkService(System.String,System.String,System.Boolean)">
            <summary>
            检查并更新
            </summary>
            <param name="ephFilePath"></param>
            <param name="clkFilePath"></param>
            <param name="isForceToUpdate"></param>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadIonoDataSourceService(System.Boolean)">
            <summary>
            加载电离层服务，主要是检查并加载手动的电离层服务。具体用哪一个需要在Option和使用中决定！！
            </summary>
            <param name="isIgsProductAwailable">是否可用</param>
        </member>
        <member name="M:Gnsser.DataSourceContext.AddSiteCoordService">
            <summary>
            增加坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SiteSatPeriodDataService">
            <summary>
            测站卫星出现时段记录数据与服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SiteSatAppearenceService">
            <summary>
            测站卫星出现时段记录与服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.IonoEpochParamService">
            <summary>
            历元电离层参数服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SiteCoordService">
            <summary>
            坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.StaionInfoService">
            <summary>
            坐标服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.ObservationDataSource">
            <summary>
            观测数据源,观测数据集合的第一个。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.ObservationDataSources">
            <summary>
            观测数据源，是一个集合
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.DcbDataService">
            <summary>
            DCB 数据
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.ErpDataService">
            <summary>
            ERP 数据
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.GnsserFcbOfUpdService">
            <summary>
            FCB 服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.EphemerisService">
            <summary>
            必须指定卫星提供者。多星历服务的第一个系统的星历服务。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SecondEphemerisService">
            <summary>
            第二星历，通常为自身的导航文件。多星历服务的第一个系统的星历服务。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.HasEphemerisService">
            <summary>
            是否具有星历服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.HasClockService">
            <summary>
            是否具有钟差服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.HasErpService">
            <summary>
            是否具有ERP服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SimpleClockService">
            <summary>
            钟差文件，精密钟差。可选。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.ClockService">
            <summary>
            钟差文件，精密钟差。可选。
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SatInfoService">
            <summary>
            SatInfoService  数据
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.gpt2DataService">
            <summary>
            GPT2模型
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.gpt2DataService1Degree">
            <summary>
            GPT2模型 1度分辨率
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.Vmf1DataService">
            <summary>
            VMF1模型
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.OceanLoadingDataSource">
            <summary>
            海洋潮汐数据源
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.SatStateDataSource">
            <summary>
            卫星状态数据源
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.UniverseObjectProvider">
            <summary>
            宇宙目标数据源
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.AntennaDataSource">
            <summary>
            天线数据源
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.IgsGridIonoFileService">
            <summary>
            IGS 电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.IgsKlobucharIonoService">
            <summary>
            IGS Klobuchar 电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.KlobucharIonoService">
            <summary>
            电离层服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.IonoKlobucharParamService">
            <summary>
            电离层参数服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.IgsCodeHarmoIonoFileService">
            <summary>
            IGS CODE 球谐函数 电离层文件服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.TropAugService">
            <summary>
            对流层增强服务
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.GridIonoDcbDataService">
            <summary>
            IGS电离层DCB改正
            </summary>
        </member>
        <member name="P:Gnsser.DataSourceContext.ClockJumpFile">
            <summary>
            钟跳文件
            </summary>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadDefault(Gnsser.GnssProcessOption,System.String,Gnsser.Service.IEphemerisService,Gnsser.Data.ISimpleClockService)">
            <summary>
            加载方法
            </summary>
            <param name="Option"></param>
            <param name="obsPath"></param>
            <param name="navFile"></param>
            <param name="clockFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadDefault(Gnsser.GnssProcessOption,Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Service.IEphemerisService,Gnsser.Data.ISimpleClockService)">
            <summary>
            默认加载，用于定位计算。
            </summary>
            <param name="option"></param>
            <param name="obsSource"></param>
            <param name="navFile"></param>
            <param name="clockFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadDefault(Gnsser.GnssProcessOption,Gnsser.MultiSiteObsStream,Gnsser.Service.IEphemerisService,Gnsser.Data.ISimpleClockService)">
            <summary>
            加载默认
            </summary>
            <param name="PositionOption"></param>
            <param name="obsSource"></param>
            <param name="navFile"></param>
            <param name="clockFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.DataSourceContext.LoadDefault(Gnsser.GnssProcessOption,Geo.IService,Gnsser.Service.IEphemerisService,Gnsser.Data.ISimpleClockService)">
            <summary>
            加载默认
            </summary>
            <param name="PositionOption"></param>
            <param name="obsSource"></param>
            <param name="navFile"></param>
            <param name="clockFile"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IonoEpochParamService">
            <summary>
            电离层历元参数改正服务
            </summary>
        </member>
        <member name="M:Gnsser.IonoEpochParamService.#ctor(System.String)">
            <summary>
            电离层历元参数改正服务
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.TimePeriod">
            <summary>
            时间范围
            </summary>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.IsAverageOrFit">
            <summary>
            用窗口平均值或用拟合值
            </summary>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.FitCount">
            <summary>
            拟合数量
            </summary>
        </member>
        <member name="P:Gnsser.IonoEpochParamService.Table">
            <summary>
            数据表
            </summary>
        </member>
        <member name="M:Gnsser.IonoEpochParamService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            返回一个距离历元最近的结果。
            </summary>
            <param name="prn"></param>
            <param name="epoch">需要精确的时刻</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EphemerisServiceProvider">
                 * 星历加载逻辑
                1、先判断指定星历是否可用，指定了或可用，则直接加载返回
                2、查找本地星历
                2.1若只需要导航星历，
                2.1.1则先查找本地导航星历，
                2.1.2如果没有找到，则转入步骤3；
                2.2若需要精密星历，
                2.2.1查找本地精密星历；
                2.2.2若没有找到，则转入步骤3
                3.查找网络星历
                3.1若只需要导航星历，
                3.1.1则联网下载导航星历
                3.1.2若不可联网或联网查找失败，则以精密星历代替
                3.1.3若精密星历也不可用，则返回null或抛出异常。
                3.2若需要精密星历，
                3.2.1则联网下载精密星历
                2.2.3若不可联网或联网查找失败，则返回null或抛出异常。
                 * 
            <summary>
            星历数据源提供适配器。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisServiceProvider.#ctor(Gnsser.GnsserConfig,Gnsser.GnssProcessOption,Gnsser.MultiSiteObsStream)">
            <summary>
            构造函数.星历数据源提供适配器
            </summary>
            <param name="option"></param>
            <param name="processOption"></param>
            <param name="ObservationDataSources"></param>
        </member>
        <member name="P:Gnsser.EphemerisServiceProvider.CurrentSession">
            <summary>
            当前会话
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisServiceProvider.ObservationDataSources">
            <summary>
            观测数据源，是一个集合
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisServiceProvider.GetService">
            <summary>
            获取服务，根据设置自动判断。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisServiceProvider.TryAddNgaEphemeris(Geo.Times.Time,System.Boolean)">
            <summary>
            尝试加载NGA星历
            </summary>
            <param name="obsTime"></param>
            <param name="isWithTwoDays"></param>
        </member>
        <member name="M:Gnsser.EphemerisServiceProvider.IsCurrentEphemerisServiceAvailable">
            <summary>
            当前的星历服务是否 已有、可用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisServiceProvider.IsEphemerisServiceAvailable(Gnsser.Service.IEphemerisService,Geo.Times.Time,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            星历服务是否可用。
            </summary>
            <param name="service"></param>
            <param name="obsTime"></param>
            <param name="satTypes">多系统支持</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IgsProductLatency">
            <summary>
            产品滞后性
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductLatency.Realtime">
            <summary>
            real time
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductLatency.Rapid">
            <summary>
            17 - 41 hours	at 17 UTC daily
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductLatency.Final">
            <summary>
            12 - 18 days	every Thursday
            </summary>
        </member>
        <member name="T:Gnsser.IgsProductTimeAvailable">
            <summary>
            IGS产品时间可用性计算
            依据：http://www.igs.org/products/data
            </summary>
        </member>
        <member name="M:Gnsser.IgsProductTimeAvailable.GetLatency(Geo.Times.Time)">
            <summary>
            根据时间判断可用的产品类型。
            </summary>
            <param name="obsTimeUtc"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IgsProductTimeAvailable.IsFinalAvailableGps(Geo.Times.Time,System.Double)">
            <summary>
            IGS Final products (IGS) 
            延迟 12 - 18 天的每周四
            </summary>
            <param name="obsTimeUtc"></param>
            <param name="triedBufferDays">延缓时间（天），以防万一如果已经更新了呢！</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IgsProductTimeAvailable.IsRapidAvailableGps(Geo.Times.Time,System.Double)">
            <summary>
            包含星历钟差和ERP。如果在发布时间之后，则可以。  IGS Rapid products (IGR) 
            17 - 41 小时	at 17 UTC daily
            </summary>
            <param name="obsTimeUtc"></param>
            <param name="triedBufferHours">延缓时间（小时），以防万一如果已经更新了呢！</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IgsProductTimeAvailable.IsUltraRapidAvailableGps(Geo.Times.Time)">
            <summary>
            注意只有星历和钟差。
            IGS Ultra-rapid products (IGU) 
            To reduce the age of the prior, discontinued Predicted orbits, 
            the IGS started the Ultra-rapid products officially week 1087 in November 2000 (see IGSMAIL-3088) .
            Like the former IGS Predicted products, the Ultra-rapid products are available for real time and near real time use.
            The Ultra-rapid products are released four times per day, at 03:00, 09:00, 15:00, and 21:00 UTC. 
            (Until week 1267 they were released twice daily.) 
            In this way the average age of the predictions is reduced to 6 hours (compared to 36 hours for the old IGS Predicted products and 9 hours for the twice-daily Ultra-rapids). 
            The shorter latency should lead to significantly improved orbit predictions and reduced errors for user applications.
            Contrary to all other IGS orbit products the IGS Ultra-rapid orbit files contain 48 hours of tabulated orbital ephemerides, 
            and the start/stop epochs continuously shift by 6 hours with each update. All other orbit products contain strictly the 24 hours from 00:00 to 23:45. 
            The first 24 hours of each IGS Ultra-rapid orbit are based on the most recent GPS observational data from the IGS hourly tracking network. At the time of release,
            the observed orbits have an initial latency of 3 hours. The next 24 hours of each file are predicted orbits, extrapolated from the observed orbits.
            The orbits within each Ultra-rapid product file are, however, continuous at the boundary between the observed and predicted parts. Normally,
            the predicted orbits between 3 and 9 hours into the second half of each Ultra-rapid orbit file are most relevant for true real time applications.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatWeightTable">
            <summary>
            卫星权值
            </summary>
        </member>
        <member name="M:Gnsser.SatWeightTable.#ctor(Geo.ObjectTableStorage,System.Double,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Table"></param>
            <param name="maxTimeDelta"></param>
            <param name="keyA"></param>
            <param name="keyB"></param>
            <param name="ValueTitle"></param>
        </member>
        <member name="P:Gnsser.SatWeightTable.MaxTimeDelta">
            <summary>
            最大时间偏差
            </summary>
        </member>
        <member name="P:Gnsser.SatWeightTable.ValueTitle">
            <summary>
            值标题
            </summary>
        </member>
        <member name="M:Gnsser.SatWeightTable.RowToValue(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            转换
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatWeightTable.Get(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            获取
            </summary>
            <param name="keyA"></param>
            <param name="keyB"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatTimeTable`1">
            <summary>
            时间 卫星 表格类。
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Gnsser.SatTimeTable`1.#ctor(Geo.ObjectTableStorage,System.String,System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="Table"></param>
            <param name="keyA"></param>
            <param name="keyB"></param>
        </member>
        <member name="T:Gnsser.LambdaAmbiguitySearcher">
            <summary>
            Integer estimation with the LAMBDA method
            Least-square Ambiguity Decorrelation Adjustment(最小二乘模糊度降相关平差法)，简称LAMBDA法，被认为是目前最好的一种整周模糊度解算方法
            LAMBDA算法包括两个过程：模糊度降相关处理（整数 变换）和整数模糊度搜索。其基本思想是首先基于拉格朗日降相关原理，通过整体变化方法降低
            模糊度之间的相关性，然后在整数变换后的空间内，采用搜索技术获得其最优模糊度向量。
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.MaxRatio">
            <summary>
            最大的ratio比值。
            </summary>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.GetAmbiguity(Geo.Algorithm.Adjust.WeightedVector,System.Double,System.Double)">
            <summary>
            计算模糊度，部分模糊度固定策略。
            </summary>
            <param name="floatSolution">按照Q从小到大的顺序排列后的带权向量。</param>
            <param name="MaxRatio">最大比例</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.#ctor(System.Double[][],System.Double[],System.Int32)">
            <summary>
            RTKLIB提供的LAMBDA固定
            </summary>
            <param name="paramCount">浮点参数的个数.number of float parameters</param>
            <param name="fixingCount">固定解的个数，通常为两个，一个最小值，一个次小值. number of fixed solutions</param>
            <param name="Q">浮点解的协方差矩阵。covariance matrix of float parameters (n * n)</param>
            <param name="a">浮点解向量。float parameters (n * 1)</param>
            <param name="F">固定解向量。fixed solutions (n * m)</param>
            <param name="s">固定解的残差平方和，便于ratio检验。sum of squared residulas of fixed solutions (1 * m)</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.getLambda(System.Double[]@,System.Double[]@)">
            <summary>
            返回计算结果信息，若info为-1，表示固定失败。
            </summary>
            <param name="F"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.LD(System.Int32,System.Double[],System.Double[]@,System.Double[]@)">
            <summary>
            LD factorization (Q=L'*diag(D)*L)
            </summary>
            <param name="n"></param>
            <param name="Q"></param>
            <param name="L"></param>
            <param name="D"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.reduction(System.Int32,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            lambda reduction (z=Z'*a, Qz= Z'*Q*Z=L'*diag(D)*L)
            </summary>
            <param name="n"></param>
            <param name="L"></param>
            <param name="D"></param>
            <param name="Z"></param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.matmul(System.Char[],System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Double,System.Double[]@)">
            <summary>
            multiply matrix
            </summary>
            <param name="tr"></param>
            <param name="n"></param>
            <param name="k"></param>
            <param name="m"></param>
            <param name="alpha"></param>
            <param name="A"></param>
            <param name="B"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.msearch(System.Int32,System.Int32,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            modified lambda(mlambda) search
            改良的、修正的LAMBDA
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="L"></param>
            <param name="D"></param>
            <param name="zs"></param>
            <param name="zn"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.solve(System.Char[],System.Double[],System.Double[],System.Int32,System.Int32,System.Double[]@)">
            <summary>
            solve linear equation
            </summary>
            <param name="tr"></param>
            <param name="A"></param>
            <param name="Y"></param>
            <param name="n"></param>
            <param name="m"></param>
            <param name="X"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.matinv(System.Double[]@,System.Int32)">
            <summary>
            inverse of matrix
            </summary>
            <param name="A"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="F:Gnsser.LambdaAmbiguitySearcher.loopMax">
            <summary>
            maximum count of search loop
            </summary>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Search(System.Double,System.Int32,System.Int32,System.Double[],Geo.Algorithm.ArrayMatrix,System.Double[],Geo.Algorithm.ArrayMatrix@,Geo.Algorithm.ArrayMatrix@,System.Int32@,System.Int32@)">
            <summary>
            finds 'MaxCan' integer vectors whose distances to the real vector 'a' are minimal in the metric of Q = transpose(L) D L.
            Only integer vectors with a distance less than sqrt(Chic) are regared.
            The search for gridpoints inside the ambiguity search ellipsoid is a sequential conditional adjustment upon the ambiguities.
            The search starts by conditioning the last ambiguity a_n to an integer, then the one-but-last a_{n-1} etc., until
              - the squared norm grows too large (out of the ellipsoid)
              - an integer for a_1 is found: a full integer vector is encountered (a gridpoint inside the ellipsoid)
              then is goes back to some previous (towards a_n) ambiguity 
              and considers another integer for it.
            </summary>
            <param name="Chic">Chi squared</param>
            <param name="MaxCan">Number of minimum integer vectors required</param>
            <param name="n">dimension of matrix</param>
            <param name="D">diagonal matrix</param>
            <param name="L">kiwer truabgykar natrux, only stroe lower triangular</param>
            <param name="a">vector of real valued estimates(float solution)</param>
            <param name="cands">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms</param>
            <param name="ipos">column number in 'cands' where the candidate belonging to the minimum distance is stored</param>
            <param name="ncan">number of integer vectors found</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Collects(System.Int32,System.Double[],System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[],System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            collexts integer vectors and corresponding squared distances
            </summary>
            <param name="MaxCan">number of minimum integer vectors required</param>
            <param name="D">diagonal matrix</param>
            <param name="Chic">Chi squared</param>
            <param name="cands">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms \hat{a}-\check{a}</param>
            <param name="tmax">the largest distance of the Min(ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="imax">position in disall/cands of the vector with the largest distance of the Min (ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="right">vector</param>
            <param name="left">vector</param>
            <param name="ncan">number of integer vectors found</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Stores(System.Int32,System.Int32,System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[])">
            <summary>
            Stores candidates and correspoding distances
            </summary>
            <param name="ican">Min (number of vectors found until now, MaxCan)</param>
            <param name="ipos">position in disall/cands to put the new found vector </param>
            <param name="t">distance of the new found vector</param>
            <param name="cands">2d-array to store the integer vectors</param>
            <param name="disal1">distance of the MaxCan integer vectors</param>
            <param name="tmax">the largest distance of the ican vectors with minmum distance found until now</param>
            <param name="imax">position in disal1/cands of the vector with the largest distance of the ican vectors with minimum distance found until now</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Backtrack(System.Boolean@,System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            backtrack in the search tree: used in SEARCH
            </summary>
            <param name="ende">if 'true', then search is done</param>
            <param name="left">vector</param>
            <param name="time">level in the tree</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and hat {a}_i</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Chistart(System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            Compute squared distance of partially rounded float vectors to the float vector in the metric of the covariance matrix
            </summary>
            <param name="D"></param>
            <param name="L"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.L_Inv(Geo.Algorithm.ArrayMatrix)">
            <summary>
            Compute the inverse of a lower triangular matrix
            </summary>
            <param name="L"></param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Re_Order(Geo.Algorithm.ArrayMatrix,System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            Computation of the Z-transformation matrix
            The final Z-transformation is constructed from a sequence of interchanges of dayServices neighbouring ambiguities(this function) and
            integer Gauss transformations (function ztransi) that pair-wise decorrelate the ambiguities
            </summary>
            <param name="Zti"></param>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.Ztransi(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            Update integral Z-transform for L
            only column 'prevObj' until 'last'.
            the output is the inverse of Z transpose
            </summary>
            <param name="Zti">the inverse Z transposed transformation matrix</param>
            <param name="L">lower triangular matrix L</param>
            <param name="prevObj">prevObj column to be updated</param>
            <param name="last">last column to be updated</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguitySearcher.LTDL(System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            factorization of Q into L^TProduct D L
            </summary>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.n">
            <summary>
            dimension of matrix Q and vector a 
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.m">
            <summary>
            备选的值，通常为两组，一组最优，一组次优，便于RATIO判别
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.Q">
            <summary>
            variance covariance matrix(symmetric)
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.Qa">
            <summary>
            数组表示的浮点方差矩阵
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguitySearcher.a">
            <summary>
            the vetor with real valued estimated(float solution)
            </summary>
        </member>
        <member name="T:Gnsser.BufferedCycleSlipDetector">
            <summary>
            基于整体缓存的周跳探测方法，周跳探测结果通用接口。CycleSlip 缩写为 CS。
            </summary>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>  
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.#ctor(Gnsser.SatObsDataType,System.Double)">
            <summary>
            默认构造函数
            </summary>
            <param name="SatObsDataType"></param>
            <param name="maxBreakCount"></param>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.IsFirstWindow">
            <summary>
            数据流是否是第一个窗口。第一个窗口将标记首历元周跳，否则，不标记。
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.IgnoreCsed">
            <summary>
            是否忽略已经标记为周跳的历元卫星。
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.DifferTime">
            <summary>
            差分次数
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.MinWindowSize">
            <summary>
            最小窗口大小，小于此，都认为有周跳。
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.SatObsDataType">
            <summary>
            观测数据类型
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.MaxBreakCount">
            <summary>
            最大断裂次数。
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.MaxErrorTimes">
            <summary>
            最大误差次数
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.Interval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.PolyFitOrder">
            <summary>
            拟合阶次
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.BufferedCycleSlipDetector.InstantValueStorage">
            <summary>
            结果存储器
            </summary>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.Detect(Geo.IBuffer{Gnsser.Domain.EpochInformation})">
            <summary>
            执行探测,直接标记。
            </summary>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.BuildInstantValueStorage(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Collections.Generic.List{Geo.Times.Time}})">
            <summary>
            保存结果
            </summary>
            <param name="grossDataKeys"></param>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.DetectGrossError(Geo.TimeNumeralWindowDataManager{Gnsser.SatelliteNumber},System.Double)">
            <summary>
            探测粗差或周跳
            </summary>
            <param name="WindowDataManager"></param>
            <param name="maxTimeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.MarkSatUnstable(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Collections.Generic.Dictionary{Geo.Times.Time,Gnsser.Domain.EpochSatellite}},System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Collections.Generic.List{Geo.Times.Time}})">
            <summary>
            将探测出的标记到卫星上。
            </summary>
            <param name="satData"></param>
            <param name="grossDataKeys"></param>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.BuildWindowData(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Collections.Generic.Dictionary{Geo.Times.Time,Gnsser.Domain.EpochSatellite}})">
            <summary>
            构建窗口数据。
            </summary>
            <param name="satData"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BufferedCycleSlipDetector.BuildSatsData(Geo.IBuffer{Gnsser.Domain.EpochInformation},System.Boolean)">
            <summary>
            构建卫星数据字典。
            </summary>
            <param name="epochInfos"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IBufferedCycleSlipDetector">
            <summary>
            基于整体缓存的周跳探测方法，周跳探测结果通用接口。CycleSlip 缩写为 CS。
            </summary>
        </member>
        <member name="M:Gnsser.IBufferedCycleSlipDetector.Detect(Geo.IBuffer{Gnsser.Domain.EpochInformation})">
            <summary>
             执行探测,直接标记。
            </summary>
            <param name="epochInfos"></param>
        </member>
        <member name="T:Gnsser.AverageDetector">
             <summary>
            平均数探测法
             </summary>
        </member>
        <member name="M:Gnsser.AverageDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.AverageDetector.#ctor(Gnsser.SatObsDataType,System.Double,System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.AverageDetector.WindowSize">
            <summary>
            数据窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.AverageDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.AverageDetector.MaxRmsTimes">
            <summary>
            最大的偏差值。
            </summary>
        </member>
        <member name="P:Gnsser.AverageDetector.SatObsDataType">
            <summary>
            需要探测的频率
            </summary>
        </member>
        <member name="M:Gnsser.AverageDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.AverageDetector.Detect(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            返回差分数据。
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MwCycleSlipDetectorOld">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。 
            只处理双频情况。
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetectorOld.#ctor">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.CycleSlipStorage">
            <summary>
            周跳探测结果存储器
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.MaxDeltaTime">
            <summary>
            允许最大时间差
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.MaxNumLambdas">
            <summary>
            maximum deviation allowed before declaring cycle slip, in number of Melbourne-Wubbena wavelenghts.
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetectorOld.Detect(Gnsser.Domain.EpochSatellite)">
            <summary>
            探测
            </summary>
            <param name="epochSat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetectorOld.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double,System.Boolean)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="mwValue">Current mw observation value</param>
            <param name="alreadyHasSlip">数据是否已经记录周跳</param> 
            <returns></returns>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.EpochSat">
            <summary>
            当前观测的卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.IsSaveResultToTable">
            <summary>
            是否保存到表
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.IsUsingRecordedCsInfo">
            <summary>
            是否使用已有周跳信息
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.TableObjectManager">
            <summary>
            表存储器
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetectorOld.CurrentResult">
            <summary>
            当前探测结果
            </summary>
        </member>
        <member name="T:Gnsser.TimeValueCycleSlipDetector">
            <summary>
            时间数值周跳探测器，标记第一次出现的数值，或者时间间隔超限的数据具有周跳。
            本类可以作为通用探测器基类。
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector.#ctor(System.Double,System.Boolean)">
            <summary>
            构造函数。此方法可以反复调用，无时间积累效应。
            </summary>
            <param name="maxBreakingEpochCount">最大允许断裂历元数量</param>
            <param name="IsUsingRecordedCycleSlipInfo">是否采用已有的周跳信息</param>
        </member>
        <member name="T:Gnsser.BaseValueCycleSlipDetector`1">
            <summary>
            基础的指定时间的周跳探测器。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gnsser.BaseValueCycleSlipDetector`1.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.BaseValueCycleSlipDetector`1.#ctor(Gnsser.SatObsDataType,System.Double,System.Boolean)">
            <summary>
            构造函数。此方法可以反复调用，无时间积累效应。
            </summary>
            <param name="maxBreakingEpochCount">最大允许断裂历元数量</param>
            <param name="IsUsingRecordedCycleSlipInfo">是否采用已有的周跳信息</param>
        </member>
        <member name="P:Gnsser.BaseValueCycleSlipDetector`1.SatObsDataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="T:Gnsser.TimeValueCycleSlipDetector`1">
            <summary>
            时间数值周跳探测器，标记第一次出现的数值，或者时间间隔超限的数据具有周跳。
            本类可以作为通用探测器基类。支持逆序探测。
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.#ctor(System.Double,System.Boolean)">
            <summary>
            构造函数。此方法可以反复调用，无时间积累效应。
            </summary>
            <param name="maxBreakingEpochCount">最大允许断裂历元数量</param>
            <param name="IsUsingRecordedCycleSlipInfo">是否采用已有的周跳信息</param>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数。此方法可以反复调用，无时间积累效应。
            </summary>
            <param name="Option">最大允许断裂历元数量, 是否采用已有的周跳信息</param> 
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.IntervalSecond">
            <summary>
            采样间隔，秒
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.MaxBreakingEpochCount">
            <summary>
            允许的最大断裂历元
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.MaxTimeSpan">
            <summary>
            最大时间间隔,单位秒
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.IsTimeBreak">
            <summary>
            时间是否断裂，是否在指定的时间间隔内。
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.IsAlreadyCycleSliped">
            <summary>
            是否已经周跳了。
            </summary>
        </member>
        <member name="P:Gnsser.TimeValueCycleSlipDetector`1.LastTimeStorage">
            <summary>
            字典
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.SetMaxTimeSpan(System.Double)">
            <summary>
            根据历元断裂次数和采样间隔计算最大时间跨度，单位秒。
            必须设定采用间隔。
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.Detect(Gnsser.Domain.EpochSatellite)">
            <summary>
            探测，有则返回 true。
            </summary>
            <param name="epochSat"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.InitDetect(Gnsser.Domain.EpochSatellite)">
            <summary>
            初始化操作
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.SetIsTimeBreaked(Gnsser.Domain.EpochSatellite)">
            <summary>
            设置时间是否断裂
            </summary>
            <param name="epochSat"></param>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.CheckOrUpdateTime">
            <summary>
            时间更新
            </summary>
        </member>
        <member name="M:Gnsser.TimeValueCycleSlipDetector`1.Detect">
            <summary>
            探测
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GreyPolyFitDetector">
            <summary>
            灰色模型拟合探测周跳,适合于单频数据。
            </summary>
        </member>
        <member name="M:Gnsser.GreyPolyFitDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.GreyPolyFitDetector.WindowSize">
            <summary>
            数据窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.GreyPolyFitDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.GreyPolyFitDetector.MaxValueDiffer">
            <summary>
            数值阈值
            </summary>
        </member>
        <member name="M:Gnsser.GreyPolyFitDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.GreyPolyFitDetector.Detect(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            返回差分数据。
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MwCycleSlipBaseOnQualityDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。
            如果返回 1 表示有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipBaseOnQualityDetector.#ctor">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipBaseOnQualityDetector.UseRecordedSlipInfo">
            <summary>
            是否使用已经记录的周跳信息，否则只从数据本身探测。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipBaseOnQualityDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipBaseOnQualityDetector.CycleSlipStorage">
            <summary>
            周跳探测结果存储器
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipBaseOnQualityDetector.MaxDeltaTime">
            <summary>
            允许最大时间差
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipBaseOnQualityDetector.MaxNumLambdas">
            <summary>
            maximum deviation allowed before declaring cycle slip, in number of Melbourne-Wubbena wavelenghts.
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipBaseOnQualityDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double,System.Boolean)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="mwValue">Current mw observation value</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MwCycleSlipBaseOnQualityDetector.FilterData">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="F:Gnsser.MwCycleSlipBaseOnQualityDetector.FilterData.FormerEpoch">
            <summary>
            the previous epoch time stamp
            </summary>
        </member>
        <member name="F:Gnsser.MwCycleSlipBaseOnQualityDetector.FilterData.MeanMW">
            <summary>
            accumulated mean value of combination.
            </summary>
        </member>
        <member name="T:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 GF1 observables探测周跳。
            如果返回 1 表示有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.#ctor(System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="GFValue">Current mw observation value</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.FilterData">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="F:Gnsser.TriFreqGF1BaseOnPhaseCycleSlipDetector.FilterData.FormerEpoch">
            <summary>
            the previous epoch time stamp
            </summary>
        </member>
        <member name="T:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。
            如果返回 1 表示有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.#ctor(System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.MaxNumLambdas">
            <summary>
            maximum deviation allowed before declaring cycle slip, in number of Melbourne-Wubbena wavelenghts.
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double,System.Double)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="GFValue">Current mw observation value</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.FilterData">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="F:Gnsser.TriFreqGF2BaseOnPhaseCycleSlipDetector.FilterData.FormerEpoch">
            <summary>
            the previous epoch time stamp
            </summary>
        </member>
        <member name="T:Gnsser.TriFreqMwCycleSlipDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。
            如果返回 1 表示有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqMwCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.TriFreqMwCycleSlipDetector.#ctor(System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqMwCycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.TriFreqMwCycleSlipDetector.MaxNumLambdas">
            <summary>
            maximum deviation allowed before declaring cycle slip, in number of Melbourne-Wubbena wavelenghts.
            </summary>
        </member>
        <member name="M:Gnsser.TriFreqMwCycleSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.TriFreqMwCycleSlipDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="mwValue">Current mw observation value</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TriFreqMwCycleSlipDetector.FilterData">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="F:Gnsser.TriFreqMwCycleSlipDetector.FilterData.FormerEpoch">
            <summary>
            the previous epoch time stamp
            </summary>
        </member>
        <member name="F:Gnsser.TriFreqMwCycleSlipDetector.FilterData.MeanMW">
            <summary>
            accumulated mean value of combination.
            </summary>
        </member>
        <member name="T:Gnsser.ClockEphemerisReviser">
            <summary>
            钟差单独改正
            </summary>
        </member>
        <member name="M:Gnsser.ClockEphemerisReviser.#ctor(Gnsser.Data.ISimpleClockService)">
            <summary>
            钟差单独改正
            </summary>
        </member>
        <member name="P:Gnsser.ClockEphemerisReviser.Failes">
            <summary>
            失败了，则记住，不再反复尝试
            </summary>
        </member>
        <member name="M:Gnsser.ClockEphemerisReviser.Revise(Gnsser.IEphemeris@)">
            <summary>
            相对论改正钟差
            </summary>
            <param name="eph"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatAntOffEphemerisReviser">
            <summary>
            satellite antenna offset correction
            </summary>
        </member>
        <member name="M:Gnsser.SatAntOffEphemerisReviser.#ctor(Gnsser.DataSourceContext)">
            <summary>
            satellite antenna offset correction
            </summary>
            <param name="DataSouceProvider"></param>
        </member>
        <member name="M:Gnsser.SatAntOffEphemerisReviser.GetSatAntOff(Gnsser.SatelliteNumber,Gnsser.IEphemeris,Geo.Times.Time)">
            <summary>
            根据太阳计算卫星偏差
            </summary>
            <param name="prn"></param>
            <param name="eph"></param>
            <param name="emissionTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EarthSagnacEphemerisReviser">
            <summary>
            地球自转改正，改正卫星的位置和速度。
            </summary>
        </member>
        <member name="M:Gnsser.EarthSagnacEphemerisReviser.#ctor(Geo.Coordinates.XYZ)">
            <summary>
            构造函数
            </summary>
            <param name="receiverPos"></param>
        </member>
        <member name="P:Gnsser.EarthSagnacEphemerisReviser.ReceiverPos">
            <summary>
            接收机位置信息。
            </summary>
        </member>
        <member name="T:Gnsser.RelativeEphemerisReviser">
            <summary>
            相对论改正钟差
            </summary>
        </member>
        <member name="M:Gnsser.RelativeEphemerisReviser.#ctor">
            <summary>
            相对论改正钟差
            </summary>
        </member>
        <member name="M:Gnsser.RelativeEphemerisReviser.Revise(Gnsser.IEphemeris@)">
            <summary>
            相对论改正钟差
            </summary>
            <param name="eph"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RelativeEphemerisReviser.GetRelativeCorrection(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            相对论改正。
            </summary>
            <param name="SatXyz">卫星位置</param>
            <param name="SatSpeed">卫星速度</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EphemerisReviser">
            <summary>
            星历矫正器。
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisReviser.Message">
            <summary>
            执行信息
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisReviser.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisReviser.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisReviser.Complete">
            <summary>
            完成
            </summary>
        </member>
        <member name="T:Gnsser.TimedSmoothValueBuilderManager">
            <summary>
            数据多项式平滑管理器
            </summary>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilderManager.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilderManager.WindowSize">
            <summary>
            最大窗口大小，单位：历元 次
            </summary>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilderManager.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TimedSmoothValueBuilder">
            <summary>
            数据多项式平滑器。
            </summary>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.#ctor(System.Int32,System.String)">
            <summary>
             数据多项式平滑器
            </summary>
            <param name="maxEpochCount"></param>
            <param name="name"></param>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.Order">
            <summary>
            阶次
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.NumeralWindowData">
            <summary>
            多项式拟合伪距方法。
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.CurrentTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.CurrentRaw">
            <summary>
            当前原始数据
            </summary>
        </member>
        <member name="P:Gnsser.TimedSmoothValueBuilder.SmoothTime">
            <summary>
            平滑时刻，必须设置
            </summary>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.SetRawValue(Geo.Times.Time,System.Double)">
            <summary>
            设置原始原始伪距,载波伪距
            </summary>
            <param name="time"></param> 
            <param name="rawRange"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.SetReset(System.Boolean)">
            <summary>
            是否重置，如果发生周跳。
            </summary>
            <param name="IsReset"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.SetSmoothTime(Geo.Times.Time)">
            <summary>
            平滑时刻，必须设置。
            </summary>
            <param name="SmoothTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.GetSmoothedRange">
            <summary>
            采用窗口进行平滑
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TimedSmoothValueBuilder.Reset">
            <summary>
            重设。
            </summary>
        </member>
        <member name="T:Gnsser.SmoothValueBuilderManager">
            <summary>
            数据多项式平滑管理器
            </summary>
        </member>
        <member name="M:Gnsser.SmoothValueBuilderManager.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SmoothValueBuilderManager.WindowSize">
            <summary>
            最大窗口大小，单位：历元 次
            </summary>
        </member>
        <member name="M:Gnsser.SmoothValueBuilderManager.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SmoothValueBuilder">
            <summary>
            数据多项式平滑器。
            </summary>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.#ctor(System.Int32,System.String)">
            <summary>
             数据多项式平滑器
            </summary>
            <param name="maxEpochCount"></param>
            <param name="name"></param>
        </member>
        <member name="P:Gnsser.SmoothValueBuilder.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.SmoothValueBuilder.Order">
            <summary>
            阶次
            </summary>
        </member>
        <member name="P:Gnsser.SmoothValueBuilder.NumeralWindowData">
            <summary>
            多项式拟合伪距方法。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothValueBuilder.CurrentRaw">
            <summary>
            当前原始数据
            </summary>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.SetRawValue(System.Double)">
            <summary>
            设置原始原始伪距,载波伪距
            </summary>
            <param name="rawRange"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.SetReset(System.Boolean)">
            <summary>
            是否重置，如果发生周跳。
            </summary>
            <param name="IsReset"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.GetSmoothedRange">
            <summary>
            采用窗口进行平滑
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothValueBuilder.Reset">
            <summary>
            重设。
            </summary>
        </member>
        <member name="T:Gnsser.ZeroObsRemover">
            <summary>
            移除观测值为0的卫星
            </summary>
        </member>
        <member name="M:Gnsser.ZeroObsRemover.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.ZeroObsRemover.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            修正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IonoDifferCorrectionType">
            <summary>
            电离层延迟变化的改正类型
            </summary>
        </member>
        <member name="F:Gnsser.IonoDifferCorrectionType.No">
            <summary>
            不改正
            </summary>
        </member>
        <member name="F:Gnsser.IonoDifferCorrectionType.DualFreqCarrier">
            <summary>
            双频载波电离层改正，可以精确求出
            </summary>
        </member>
        <member name="F:Gnsser.IonoDifferCorrectionType.WindowPolyfit">
            <summary>
            滑动开窗多项式拟合， 在历元当中多项式拟合，需设置阶次和历元数量，以及对应的缓存。
            </summary>
        </member>
        <member name="F:Gnsser.IonoDifferCorrectionType.WindowWeightedAverage">
            <summary>
            滑动开窗加权平均
            </summary>
        </member>
        <member name="F:Gnsser.IonoDifferCorrectionType.IndicatedFile">
            <summary>
            电离层变化率文件 IonoDeltaFilePath
            </summary>
        </member>
        <member name="T:Gnsser.CarrierSmoothedRangeBuilderManager">
            <summary>
            管理器
            </summary>
        </member>
        <member name="M:Gnsser.CarrierSmoothedRangeBuilderManager.#ctor(System.Boolean,System.Int32,System.Boolean,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType)">
            <summary>
            构造函数
            </summary>
            <param name="isApprovedSmooth">是否采用GNSSer改进平滑算法</param>
            <param name="windowSize">窗口大小</param>
            <param name="IsWeighted"></param>
            <param name="SmoothRangeType"></param>
            <param name="IsDeltaIonoCorrect">仅改进算法有效</param>
            <param name="OrderOfDeltaIonoPolyFit">仅改进算法有效</param>
            <param name="BufferSize">缓存大小</param>
            <param name="ionoFitEpochCount">电离层拟合历元数量，如果非滑动窗口，则与指定窗口相同</param>
        </member>
        <member name="M:Gnsser.CarrierSmoothedRangeBuilderManager.GetOrCreate(Gnsser.SatelliteNumber)">
            <summary>
            获取或创造
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.NamedCarrierSmoothedRangeBuilderManager">
            <summary>
            管理器
            </summary>
        </member>
        <member name="M:Gnsser.NamedCarrierSmoothedRangeBuilderManager.#ctor(System.Boolean,System.Int32,System.Boolean,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType)">
            <summary>
            构造函数
            </summary>
            <param name="isApprovedSmooth">是否采用GNSSer改进平滑算法</param>
            <param name="windowSize">窗口大小</param>
            <param name="SmoothRangeType"></param>
            <param name="IsWeighted"></param>
            <param name="IonoDifferCorrectionType">仅改进算法有效</param>
            <param name="IonoFitEpochCount"> </param>
            <param name="OrderOfDeltaIonoPolyFit">仅改进算法有效</param>
            <param name="BufferSize">仅改进算法有效</param>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.IsApprovedSmooth">
            <summary>
            是否采用窗口。
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.WindowSize">
            <summary>
            最大窗口大小，单位：历元 次
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.BufferSize">
            <summary>
            缓存大小，用于拟合电离层变化，使其在数据中部
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.IonoFitEpochCount">
            <summary>
            电离层拟合历元数量
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.OrderOfDeltaIonoPolyFit">
            <summary>
            电离层变化拟合阶数。
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.IsWeighted">
            <summary>
            是否加权
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.IonoDifferCorrectionType">
            <summary>
            是否电离层改正
            </summary>
        </member>
        <member name="P:Gnsser.NamedCarrierSmoothedRangeBuilderManager.IndicatedIonoDeltaFilePath">
            <summary>
            指定的电离层变化率文件路径
            </summary>
        </member>
        <member name="M:Gnsser.NamedCarrierSmoothedRangeBuilderManager.Create(System.String)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AbstractSmoothRangeBuilder">
            <summary>
            递推滤波模型，载波相位平滑伪距。
            </summary>
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.#ctor">
            <summary>
            载波相位平滑伪距。
            </summary> 
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.#ctor(System.Boolean,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Hatch 递推滤波模型，载波相位平滑伪距。
            </summary> 
            <param name="IsWeighted"></param> 
            <param name="IonoDifferCorrectionType"></param>
            <param name="IonoFitOrder"></param>
            <param name="BufferSize"></param>
            <param name="IonoFitEpochCount">电离层拟合历元数量</param>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.RawRangeStdDev">
            <summary>
            伪距观测噪声，默认为2m.
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IonoDifferCorrectionType">
            <summary>
            电离层拟合类型
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.FirstInputtedIonoDiffer">
            <summary>
            第一次输入的电离层改正
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IsFitDeltaIono">
            <summary>
            是否拟合电离层
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IonoFitOrder">
            <summary>
            电离层偏差拟合阶次
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IonoFitDataCount">
            <summary>
            拟合数据量
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IonoWindow">
            <summary>
            电离层拟合窗口
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.ExtraRange">
            <summary>
            外推伪距
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.SmoothRange">
            <summary>
            平滑伪距
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.IsWeighted">
            <summary>
            是否加权
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.PrevSmoothRange">
            <summary>
            上一个平滑伪距
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.PrevData">
            <summary>
            上一个载波等效距离
            </summary>
        </member>
        <member name="P:Gnsser.AbstractSmoothRangeBuilder.CurrentRaw">
             <summary>
            当前原始值，第一个为伪距，第二个为载波
             </summary>
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.SetReset(System.Boolean)">
            <summary>
            是否重置，如果发生周跳。
            </summary>
            <param name="IsReset"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.SetBufferValue(Geo.Times.Time,System.Double,System.Double)">
            <summary>
            设置原始缓存，用于计算电离层，原始伪距,载波伪距
            </summary>
            <param name="time"></param>
            <param name="rawRange"></param>
            <param name="rawPhaseRange"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.SetRawValue(Geo.Times.Time,System.Double,System.Double,System.Double)">
            <summary>
            设置原始原始伪距,载波伪距
            </summary>
            <param name="time"></param>
            <param name="rawRange"></param>
            <param name="rawPhaseRange"></param>
            <param name="ionoDiffer">历元间电离层变化</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.FitIonoAndAmbiValue(Gnsser.RangePhasePair)">
            <summary>
            拟合电离层和模糊度值
            </summary> 
        </member>
        <member name="M:Gnsser.AbstractSmoothRangeBuilder.Reset">
            <summary>
            重设。
            </summary>
        </member>
        <member name="T:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder">
            <summary>
            GNSSer 改进伪距平滑 递推滤波模型，载波相位平滑伪距。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.#ctor(System.Int32,System.String,System.Boolean,Gnsser.IonoDifferCorrectionType,System.Int32,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType)">
            <summary>
             Hatch 递推滤波模型，载波相位平滑伪距。
            </summary>
            <param name="maxEpochCount"></param>
            <param name="name"></param>
            <param name="IsWeighted"></param>
            <param name="IsDeltaIonoCorrect"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="bufferSize"></param>
            <param name="IonoFitEpochCount"></param>
            <param name="SmoothRangeType"></param>
        </member>
        <member name="P:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.SmoothRangeWindow">
            <summary>
            真正的平滑器。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.SetRawValue(Geo.Times.Time,System.Double,System.Double,System.Double)">
            <summary>
            设置原始原始伪距,载波伪距
            </summary>
            <param name="time"></param>
            <param name="rawRange"></param>
            <param name="rawPhaseRange"></param>
            <param name="inputeddIonoDiffer"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.SetReset(System.Boolean)">
            <summary>
            是否重置，如果发生周跳。
            </summary>
            <param name="IsReset"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.GetSmoothedRange">
            <summary>
            采用窗口进行平滑
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.Build">
            <summary>
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserWindowedPhaseSmoothedRangeBuilder.Reset">
            <summary>
            重设。
            </summary>
        </member>
        <member name="T:Gnsser.NamedXyzParser">
            <summary>
            命名XYZ坐标解析器
            </summary>
        </member>
        <member name="M:Gnsser.NamedXyzParser.GetCoords(System.String)">
            <summary>
            坐标解析
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.NamedXyzParser.GetCoordsAndTime(System.String)">
            <summary>
            获取
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.PppTableResultFileReader">
            <summary>
            基于数据表的PPP结果读取器
            </summary>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.ReadToEpochStorage(System.String[],System.Boolean)">
            <summary>
            读取到历元存储对象
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.ReadToEpochStorage(Geo.ObjectTableManager)">
            <summary>
            读取到历元存储对象
            </summary>
            <param name="tables"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.ReadPppAmbiResult(System.String[],System.Boolean,System.Boolean,System.Double)">
            <summary>
            读取模糊度
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <param name="isInLenthOrCycle"></param>
            <param name="waveLen">如果设为周，则必须设定波长</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.ReadPppAmbiResultInCycle(System.String[],System.Boolean)">
            <summary>
            读取PPP模糊度结果，单位周，默认以GPS L1载波长度量。
            </summary>
            <param name="inputPathes">PPP文件路径</param>
            <param name="isRemoveCsPrn">是否移除周跳卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.ReadPppAmbiResultInLength(System.String[],System.Boolean)">
            <summary>
            读取PPP模糊度结果,单位：米
            </summary>
            <param name="inputPathes"></param>
            <param name="isRemoveCsPrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PppTableResultFileReader.RemoveCycleSlipedSat(Geo.ObjectTableManager)">
            <summary>
            移除周跳卫星结果
            </summary>
            <param name="smartTalbes"></param>
        </member>
        <member name="T:Gnsser.FlexiblePeriodSatSelector">
            <summary>
            不固定历元长度的基准卫星选择器，基于卫星分时段卫星编号选择器
            </summary>
        </member>
        <member name="M:Gnsser.FlexiblePeriodSatSelector.#ctor(Geo.ObjectTableStorage,System.Double,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="satEleTable"></param>
            <param name="CutOffAngle"></param>
        </member>
        <member name="P:Gnsser.FlexiblePeriodSatSelector.SearchTimeSpan">
            <summary>
            搜索的时间范围
            </summary>
        </member>
        <member name="M:Gnsser.FlexiblePeriodSatSelector.Select">
            <summary>
            选择
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FlexiblePeriodSatSelector.GetStartPrns(Geo.Times.Time)">
            <summary>
            获取起始PRN
            </summary>
            <param name="startTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IPeriodBaseSatSelector">
            <summary>
            卫星选择器接口。
            </summary>
        </member>
        <member name="P:Gnsser.IPeriodBaseSatSelector.CutOffAngle">
            <summary>
            卫星高度表
            </summary>
        </member>
        <member name="M:Gnsser.IPeriodBaseSatSelector.Select">
            <summary>
            执行选择。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AbstractPeriodBaseSatSelector">
            <summary>
            抽象卫星选择器
            </summary>
        </member>
        <member name="M:Gnsser.AbstractPeriodBaseSatSelector.#ctor(Geo.ObjectTableStorage,System.Double,System.Boolean)">
            <summary>
            抽象卫星选择器， 构造函数。
            </summary>
            <param name="SatElevationTable"></param>
            <param name="IsExpandPeriodWhenSamePrn"></param>
            <param name="CutOffAngle"></param>
        </member>
        <member name="P:Gnsser.AbstractPeriodBaseSatSelector.IsExpandPeriodWhenSamePrn">
            <summary>
            如果与上一个卫星一致，是否扩展弧段.
            是否拼接相近相同的卫星
            </summary>
        </member>
        <member name="P:Gnsser.AbstractPeriodBaseSatSelector.SatElevationTable">
            <summary>
            卫星高度表
            </summary>
        </member>
        <member name="P:Gnsser.AbstractPeriodBaseSatSelector.DetailResultTable">
            <summary>
            详细结果表
            </summary>
        </member>
        <member name="P:Gnsser.AbstractPeriodBaseSatSelector.CutOffAngle">
            <summary>
            指定的卫星高度截止角
            </summary>
        </member>
        <member name="M:Gnsser.AbstractPeriodBaseSatSelector.Select">
            <summary>
            选择器。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractPeriodBaseSatSelector.AddPeriodPrnToManager(Gnsser.PeriodPrnManager,Gnsser.PeriodPrn)">
            <summary>
            将选择结果添加到管理器
            </summary>
            <param name="PeriodPrnManager"></param>
            <param name="PeriodPrn"></param>
        </member>
        <member name="T:Gnsser.PeriodFixedSatSelector">
            <summary>
            基于时段内的分时段卫星编号选择器
            </summary>
        </member>
        <member name="M:Gnsser.PeriodFixedSatSelector.#ctor(Geo.ObjectTableStorage,System.Double,System.Int32,System.Boolean,Gnsser.BaseSatSelectionType,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="satEleTable"></param>
            <param name="periodCount"></param>
            <param name="IsExpandPeriodWhenSamePrn"></param>
            <param name="CutOffAngle"></param>
        </member>
        <member name="P:Gnsser.PeriodFixedSatSelector.PeriodCount">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.PeriodFixedSatSelector.TotalPeriodSpan">
            <summary>
            总时段全长，秒
            </summary>
        </member>
        <member name="P:Gnsser.PeriodFixedSatSelector.TableSatSelectorType">
            <summary>
            选择类型。
            </summary>
        </member>
        <member name="M:Gnsser.PeriodFixedSatSelector.Select">
            <summary>
            选择
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseSatSelectionType">
            <summary>
            选星类型
            </summary>
        </member>
        <member name="F:Gnsser.BaseSatSelectionType.MaxCenterElevation">
            <summary>
            中间高度选星
            </summary>
        </member>
        <member name="F:Gnsser.BaseSatSelectionType.MaxElevation">
            <summary>
            最大高度角选星
            </summary>
        </member>
        <member name="F:Gnsser.BaseSatSelectionType.MaxTimeSpan">
            <summary>
            跨度最长选星
            </summary>
        </member>
        <member name="T:Gnsser.BaseSatelliteSelectorFactory">
            <summary>
            BaseSatelliteSelector 工厂
            </summary>
        </member>
        <member name="M:Gnsser.BaseSatelliteSelectorFactory.GetPeriodPrnManager(Gnsser.GnssProcessOption,System.String)">
            <summary>
            
            </summary>
            <param name="option"></param>
            <param name="oFilePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TableElevationSatSelector">
            <summary>
            时段内最大卫星高度角的选星方法。需要卫星高度文件表的支持。
            </summary>
        </member>
        <member name="M:Gnsser.TableElevationSatSelector.#ctor(Geo.ObjectTableStorage,Geo.Times.TimePeriod,System.Double,System.Boolean,System.Int32)">
            <summary>
            构造函数TYU
            </summary>
            <param name="satEleTable"></param>
            <param name="TimePeriod"></param>
            <param name="CutOffAngle"></param>
            <param name="EnableCenterMaxSelection">是否启用</param>
            <param name="centerCount">中间窗口大小，秒</param>
        </member>
        <member name="P:Gnsser.TableElevationSatSelector.Interval">
            <summary>
            间隔
            </summary>
        </member>
        <member name="P:Gnsser.TableElevationSatSelector.CenterCount">
            <summary>
            中心选星法，中间窗口大小，在时段中间区域选星。单位：秒。
            </summary>
        </member>
        <member name="P:Gnsser.TableElevationSatSelector.EnableCenterMaxSelection">
            <summary>
            是否启用,中心选星法
            </summary>
        </member>
        <member name="M:Gnsser.TableElevationSatSelector.Select">
            <summary>
            执行选星
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TableSpanSatSelector">
            <summary>
            时段内最大卫星时段的选星方法。需要卫星高度文件表的支持。
            </summary>
        </member>
        <member name="M:Gnsser.TableSpanSatSelector.#ctor(Geo.ObjectTableStorage,Geo.Times.TimePeriod,System.Double)">
            <summary>
            构造函数TYU
            </summary>
            <param name="satEleTable"></param>
            <param name="TimePeriod"></param> 
        </member>
        <member name="M:Gnsser.TableSpanSatSelector.Select">
            <summary>
            执行选星
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseTableSatelliteSelector">
            <summary>
            分时段卫星编号选择器
            </summary>
        </member>
        <member name="M:Gnsser.BaseTableSatelliteSelector.#ctor(Geo.ObjectTableStorage,Geo.Times.TimePeriod,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="TimePeriod"></param>
        </member>
        <member name="P:Gnsser.BaseTableSatelliteSelector.SatEleTable">
            <summary>
            卫星高度文件表
            </summary>
        </member>
        <member name="T:Gnsser.BaseSatelliteSelector">
            <summary>
            分时段卫星编号选择器
            </summary>
        </member>
        <member name="M:Gnsser.BaseSatelliteSelector.#ctor(Geo.Times.TimePeriod,System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="TimePeriod"></param>
        </member>
        <member name="P:Gnsser.BaseSatelliteSelector.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="P:Gnsser.BaseSatelliteSelector.CutOffAngle">
            <summary>
            卫星高度截止角
            </summary>
        </member>
        <member name="M:Gnsser.BaseSatelliteSelector.Select">
            <summary>
            选择基准卫星
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ISatelliteSelector">
            <summary>
            卫星编号选择器
            </summary>
        </member>
        <member name="P:Gnsser.ISatelliteSelector.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="M:Gnsser.ISatelliteSelector.Select">
            <summary>
            选择基准卫星
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.PeriodPrnManager">
            <summary>
            分时段卫星编号 管理器
            </summary>
        </member>
        <member name="M:Gnsser.PeriodPrnManager.ReadFromFile(System.String)">
             <summary>
            读取
             </summary>
             <param name="path"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.PeriodPrnManager.WriteToFile(System.String)">
            <summary>
            写入
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.PeriodPrnManager.GetText">
            <summary>
            返回文本
            </summary>
        </member>
        <member name="T:Gnsser.PeriodPrnWriter">
            <summary>
            文件写入
            </summary>
        </member>
        <member name="M:Gnsser.PeriodPrnWriter.#ctor(System.IO.Stream)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">数据文件路径。</param>
        </member>
        <member name="M:Gnsser.PeriodPrnWriter.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">数据文件路径。</param>
        </member>
        <member name="T:Gnsser.PeriodPrnReader">
            <summary>
            文件读取
            </summary>
        </member>
        <member name="M:Gnsser.PeriodPrnReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath">数据文件路径。</param>
            <param name="metaFilePathOrDirectory">元数据文件或者元数据文件存放的目录。若不指定，则自动寻找文件目录下的元数据，若没有则调用默认的元数据，若还没有则报错。</param>
        </member>
        <member name="T:Gnsser.PeriodPrn">
            <summary>
            分时段卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.PeriodPrn.#ctor">
            <summary>
            默认构造函数 
            </summary>
        </member>
        <member name="M:Gnsser.PeriodPrn.#ctor(Geo.Times.TimePeriod,Gnsser.SatelliteNumber)">
            <summary>
            默认构造函数
            </summary>
            <param name="perid"></param>
            <param name="val"></param>
        </member>
        <member name="T:Gnsser.IgsProductType">
            <summary>
            IGS 网络产品服务数据源类型
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igr_Sp3">
            <summary>
            快速产品
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igu_Sp3">
            <summary>
            超快星历，每6小时播发一次
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igv_Sp3">
            <summary>
            超快星历，含GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igr_Erp">
            <summary>
            快速
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igu_Erp">
            <summary>
            超快
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igv_Erp">
            <summary>
            超快，含GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.igr_Clk">
            <summary>
            快速钟差，延迟一天,而超快在SP3内
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.I">
            <summary>
            IGS 格网电离层
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.ION">
            <summary>
            CODE 电离层
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.O">
            <summary>
            观测文件
            </summary>
        </member>
        <member name="F:Gnsser.IgsProductType.N">
            <summary>
            导航星历
            </summary>
        </member>
        <member name="T:Gnsser.StaionInfoService">
            <summary>
            测站信息服务
            </summary>
        </member>
        <member name="M:Gnsser.StaionInfoService.#ctor(System.String)">
            <summary>
            测站信息服务 
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Gnsser.StaionInfoService.#ctor(Geo.FileOption)">
            <summary>
            测站信息服务
            </summary>
        </member>
        <member name="P:Gnsser.StaionInfoService.FileOption">
            <summary>
            文件选型
            </summary>
        </member>
        <member name="M:Gnsser.StaionInfoService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="name"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.WidthFixedParamReader">
            <summary>
            宽度固定的参数读取。
            </summary>
        </member>
        <member name="M:Gnsser.WidthFixedParamReader.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="width"></param>
        </member>
        <member name="P:Gnsser.WidthFixedParamReader.MaxLineWidth">
            <summary>
            内容行最大长度
            </summary>
        </member>
        <member name="F:Gnsser.WidthFixedParamReader.StartMaker">
            <summary>
            起始标记
            </summary>
        </member>
        <member name="F:Gnsser.WidthFixedParamReader.EndMaker">
            <summary>
            结束标记
            </summary>
        </member>
        <member name="M:Gnsser.WidthFixedParamReader.ParseFromRinexOFile(System.String)">
            <summary>
            解析，从观测文件。
            </summary>
            <param name="oFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamReader.GetParamFromHeader(Gnsser.Data.Rinex.RinexObsFileHeader)">
            <summary>
            从头部对象中提取参数
            </summary> 
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamReader.ExtractParamStringFromRinexComments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            从RINEX注释行中，提取变量字符串。不包含起始和结束标记 Marker。
            </summary>
            <param name="comments"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.WidthFixedParamLineBuilder">
            <summary>
            Gnsser 定义的参数，写在观测文件Comment里面。
            </summary>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.WidthFixedParamLineBuilder.Params">
            <summary>
            参数对名称和值
            </summary>
        </member>
        <member name="P:Gnsser.WidthFixedParamLineBuilder.MaxLineWidth">
            <summary>
            内容行最大长度
            </summary>
        </member>
        <member name="F:Gnsser.WidthFixedParamLineBuilder.StartMaker">
            <summary>
            起始标记
            </summary>
        </member>
        <member name="F:Gnsser.WidthFixedParamLineBuilder.EndMaker">
            <summary>
            结束标记
            </summary>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.ToMarkedLineString">
            <summary>
            构建成指定宽度以换行符分开的字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.BuildParamString">
            <summary>
            转换为参数字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.ToMarkedLines">
            <summary>
            转换成以指定宽度的字符串列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.UpdateToRinexOFileHeader(System.String,System.String)">
            <summary>
            将结果更新到RINEX头文件中，将覆盖以往的参数。
            </summary>
            <param name="existOFilePath"></param>
            <param name="newOfilePath"></param>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.ToMarkedLineString(System.String)">
            <summary>
            为不超过指定字符数（60）的行的组成，一个整体的字符串，行采用换行符分隔。
            </summary>
            <param name="paramStringNoMarker"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.ToMarkedLines(System.String)">
            <summary>
            转换成RINEX Comments 
            </summary>
            <param name="paramStringNoMarker"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WidthFixedParamLineBuilder.FilterParamComments(System.Collections.Generic.List{System.String})">
            <summary>
            过滤掉GNSSer参数。
            </summary>
            <param name="comments"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteObsInfo">
            <summary>
            测站信息和观测信息
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsInfo.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsInfo.#ctor(Gnsser.ISiteInfo,Gnsser.IObsInfo)">
            <summary>
            构造函数
            </summary>
            <param name="SiteInfo"></param>
            <param name="ObsInfo"></param>
        </member>
        <member name="P:Gnsser.SiteObsInfo.SiteName">
            <summary>
            测站名称 实际就是MarkerName
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.FrequenceCount">
            <summary>
            频率数量
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.Comments">
            <summary>
            注释，可以用于GNSSer 参数输出
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.ObsInfo">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.SatelliteTypes">
            <summary>
            卫星系统,实际的记录系统，只可以获取不可以修改。
            </summary>
        </member>
        <member name="P:Gnsser.SiteObsInfo.ObsCodes">
            <summary>
            卫星观测代码字典，如 G1：C1，L1。
            本属性决定观测系统、观测码类型等，非常重要。
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsInfo.GetReadableObsCodes">
            <summary>
            返回可读的观测码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.GetSatTypeMarker">
            <summary>
            获取卫星系统类型。就有一定的判断功能。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.Remove(Gnsser.SatelliteType)">
            <summary>
            移除卫星系统及其所有的观测码。
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Gnsser.SiteObsInfo.Remove(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            移除卫星系统及其所有的观测码。
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Gnsser.SiteObsInfo.RemoveOther(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            移除卫星系统及其所有的观测码。
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Gnsser.SiteObsInfo.RemoveOther(System.Collections.Generic.List{Gnsser.ObsTypes})">
            <summary>
            移除其它观测类型，通过第一个字符判断。
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Gnsser.SiteObsInfo.SetTypeOfObserves(Gnsser.SatelliteType,System.Collections.Generic.List{System.String})">
            <summary>
            设置特定卫星的观测类型
            </summary>
            <param name="SatelliteType"></param>
            <param name="typeOfObs"></param>
        </member>
        <member name="M:Gnsser.SiteObsInfo.IsRemoveRedundantObsForIonoFree">
            <summary>
            移除对于双频无电离层组合多余的观测值
            </summary>
        </member>
        <member name="M:Gnsser.SiteObsInfo.GetObsCodesV2">
            <summary>
            RINEX 2.x 的所有观测码相同。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.GetOrInitObsCodes(Gnsser.SatelliteType)">
            <summary>
            获取指定系统的观测类型列表。返回引用，可以直接在上面添加数据。
            如果没有，则查看M类型，将 Mixed 的类型赋予给它。
            </summary>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.GetSimpleInfo">
            <summary>
            简单显示。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteObsInfo.ReadText(System.String)">
            <summary>
            直接返回头文件原纪录。
            </summary>
            <param name="rinexFileName">RINEX 文件路径</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ISiteCoordService">
            <summary>
            坐标服务接口
            </summary>
        </member>
        <member name="P:Gnsser.ISiteCoordService.SiteNames">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="M:Gnsser.ISiteCoordService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="name"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ISiteCoordService.Get(System.String)">
            <summary>
            忽略历元的坐标服务
            </summary>
            <param name="name"></param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteCoordService">
            <summary>
            通过 4 个字母的测站名称匹配。
            坐标服务.有待扩展，如使用Bernese坐标文件，自动搜素IGS产品等。2016.10.02.07.59 czs
            默认懒加载，支持手动预先加载 Init
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoordService.#ctor(Geo.FileOption)">
            <summary>
            坐标服务
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoordService.#ctor(System.String)">
            <summary>
            坐标服务 
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:Gnsser.SiteCoordService.FileOption">
            <summary>
            文件选型
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoordService.NamedRmsXyzes">
            <summary>
            字典
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoordService.TimePeriod">
            <summary>
            服务时段
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoordService.SiteNames">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoordService.Get(System.String)">
            <summary>
            忽略历元的坐标服务
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteCoordService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取服务
            </summary>
            <param name="name"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteCoordService.Init">
            <summary>
            初始化加载
            </summary>
        </member>
        <member name="P:Gnsser.SiteCoordService.NamedXyzs">
            <summary>
            列表
            </summary>
        </member>
        <member name="M:Gnsser.SiteCoordService.GetCoords(System.String)">
            <summary>
            根据坐标文件读取坐标
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteTypeChangedEventHandler">
            <summary>
            卫星类型改变时激发。
            </summary>
            <param name="SatelliteType"></param>
        </member>
        <member name="T:Gnsser.IEpochInfo">
            <summary>
            历元概略信息，区别于 EpochInformation
            </summary>
        </member>
        <member name="P:Gnsser.IEpochInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.IEpochInfo.TotalPrns">
            <summary>
            卫星编号列表
            </summary>
        </member>
        <member name="T:Gnsser.EpochInfo">
            <summary>
            历元概略信息，区别于 EpochInformation
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.Epoches">
            <summary>
            观测时间
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.ReceiverTime">
            <summary>
            观测时间
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.TotalPrns">
            <summary>
            卫星编号列表
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.EnabledPrns">
            <summary>
            可用卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.EnabledSatCount">
            <summary>
            可用卫星数量
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfo.SatelliteTypes">
            <summary>
            可用卫星系统
            </summary>
        </member>
        <member name="T:Gnsser.YearDayFileNameBuilder">
            <summary>
            基于年和年积日的路径生成器。
            </summary>
        </member>
        <member name="P:Gnsser.YearDayFileNameBuilder.Directory">
            <summary>
            目录
            </summary>
        </member>
        <member name="P:Gnsser.YearDayFileNameBuilder.Extension">
            <summary>
            后缀名
            </summary>
        </member>
        <member name="P:Gnsser.YearDayFileNameBuilder.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:Gnsser.AmbiguityManager">
            <summary>
            模糊度存储器
            </summary>
        </member>
        <member name="M:Gnsser.AmbiguityManager.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.AmbiguityManager.#ctor(System.String,System.Boolean,Gnsser.SatObsDataType)">
            <summary>
            构造函数
            </summary>
            <param name="AmbiguityFilePath"></param>
            <param name="IsUsingAmbiguityFile"></param>
            <param name="ObsDataType"></param>
        </member>
        <member name="M:Gnsser.AmbiguityManager.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.SatObsDataType">
            <summary>
            卫星观测数据类型
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.AmbiguityFilePath">
            <summary>
            模糊度文件路径
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.IsUsingAmbiguityFile">
            <summary>
            是否使用模糊度文件
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.AmbiguityFixer">
            <summary>
            模糊度固定器
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.AmbiguityStorage">
            <summary>
            模糊度管理器
            </summary>
        </member>
        <member name="P:Gnsser.AmbiguityManager.AmbiguityProduct">
            <summary>
            模糊度存储
            </summary>
        </member>
        <member name="M:Gnsser.AmbiguityManager.Regist(Gnsser.Service.TwoSitePeriodDifferPositionResult)">
            <summary>
            注册
            </summary>
            <param name="result"></param> 
        </member>
        <member name="M:Gnsser.AmbiguityManager.Regist(Geo.Times.Time,Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            注册 
            </summary>
            <param name="time"></param>
            <param name="ambiguities"></param>
        </member>
        <member name="M:Gnsser.AmbiguityManager.SaveProduct(System.String)">
            <summary>
            保存产品
            </summary>
            <param name="outputPath"></param>
        </member>
        <member name="T:Gnsser.CycleSlipManager">
            <summary>
            模糊度存储器
            </summary>
        </member>
        <member name="M:Gnsser.CycleSlipManager.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipManager.GnssOption">
            <summary>
            数据处理选项
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipManager.CycleSlipeStorage">
            <summary>
            周跳存储器
            </summary>
        </member>
        <member name="T:Gnsser.LsPolyFitDetector">
            <summary>
            多项式拟合探测周跳,适合于单频数据。
            周跳探测,只进行探测，而不标记， 
            </summary>
        </member>
        <member name="M:Gnsser.LsPolyFitDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.LsPolyFitDetector.#ctor(Gnsser.SatObsDataType,System.Double,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
            <param name="obsType"></param>
            <param name="maxMaxRmsTimesOfLsPolyCs"></param>
            <param name="order"></param>
            <param name="differTimes"></param>
            <param name="maxBreakingEpochCount"></param>
            <param name="isUsingRecoredCsInfo"></param>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.DifferTimes">
            <summary>
            差分次数
            </summary>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.WindowSize">
            <summary>
            数据窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.MaxRmsTimes">
            <summary>
            最大的偏差值。
            </summary>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.Order">
            <summary>
            拟合阶次
            </summary>
        </member>
        <member name="P:Gnsser.LsPolyFitDetector.SatObsDataType">
            <summary>
            需要探测的频率
            </summary>
        </member>
        <member name="M:Gnsser.LsPolyFitDetector.Create(Gnsser.SatelliteNumber)">
            <summary>
            新建一个
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LsPolyFitDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.LsPolyFitDetector.Detect(Gnsser.SatelliteNumber,Geo.Times.Time,System.Double)">
            <summary>
            返回差分数据。
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.HighDifferSlipDetector">
            <summary>
            高次差探测周跳法,适合于单频数据。支持逆序探测。
            周跳探测,只进行探测，而不标记和修复。
            </summary>
        </member>
        <member name="M:Gnsser.HighDifferSlipDetector.#ctor(Gnsser.SatObsDataType,System.Double,System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.HighDifferSlipDetector.WindowSize">
            <summary>
            数据窗口大小
            </summary>
        </member>
        <member name="P:Gnsser.HighDifferSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.HighDifferSlipDetector.MaxValueDiffer">
            <summary>
            数值阈值
            </summary>
        </member>
        <member name="P:Gnsser.HighDifferSlipDetector.SatObsDataType">
            <summary>
            需要探测的观测变量
            </summary>
        </member>
        <member name="M:Gnsser.HighDifferSlipDetector.Create(Gnsser.SatelliteNumber)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HighDifferSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.HighDifferSlipDetector.GetDetection(Gnsser.SatelliteNumber,System.Double)">
            <summary>
            探测。
            </summary>
            <param name="key"></param>
            <param name="val">待探测的数据</param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.ReverseCycleSlipeReviser">
            <summary>
            反向周跳修正器。主要用于探测前几（5）次周跳误报。
            逆序探测前提：1.默认为顺序探测已探测完成，而存在误探。2.逆序探测只负责取消误探。
            </summary>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数，采用GNSS计算配置构造。
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.#ctor(Gnsser.SatObsDataType,System.Collections.Generic.List{Gnsser.CycleSlipDetectorType},Gnsser.GnssProcessOption)">
            <summary>
            构造函数，采用GNSS计算配置构造。
            </summary>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.ReverseCycleSlipeReviser.MinNum">
            <summary>
            最小需要计算的数
            </summary>
        </member>
        <member name="P:Gnsser.ReverseCycleSlipeReviser.Detector">
             <summary>
            逆向探测器
             </summary>
        </member>
        <member name="P:Gnsser.ReverseCycleSlipeReviser.CurrentEpcohInfo">
            <summary>
            当前信息，不包含在缓存中。
            </summary>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            探测并标记
            </summary>
            <param name="CurrentEpcohInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.DetectOrMark(System.Collections.Generic.List{Gnsser.Domain.EpochSatellite})">
            <summary>
            探测
            </summary>
            <param name="sats"></param>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.DetectOrMarkOld(System.Collections.Generic.List{Gnsser.Domain.EpochSatellite})">
            <summary>
            探测
            </summary>
            <param name="sats"></param>
        </member>
        <member name="M:Gnsser.ReverseCycleSlipeReviser.GetSats(Geo.IBuffer{Gnsser.Domain.EpochInformation},Gnsser.Domain.EpochSatellite,System.Int32)">
            <summary>
            获取指定的卫星
            </summary>
            <param name="infos"></param>
            <param name="firstSat"></param>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.DualBandCycleSlipDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。
            需要采用LI组合值、LLI1、LLI2观测量，如果返回 1 表示有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.DualBandCycleSlipDetector.#ctor">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
        </member>
        <member name="F:Gnsser.DualBandCycleSlipDetector.MaxDeltaTime">
            <summary>
            maximum interval of time allowed between two successive epochs in fraction
            </summary>
        </member>
        <member name="T:Gnsser.DualBandCycleSlipDetector.FilterData">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="F:Gnsser.DualBandCycleSlipDetector.FilterData.FormerEpoch">
            <summary>
            the previous epoch time stamp
            </summary>
        </member>
        <member name="T:Gnsser.GnssSysRemover">
            <summary>
            移除未指定的GNSS系统观测数据
            </summary>
        </member>
        <member name="M:Gnsser.GnssSysRemover.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="PositionOption"></param>
        </member>
        <member name="M:Gnsser.GnssSysRemover.#ctor(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            构造函数
            </summary>
            <param name="SatelliteTypes"></param>
        </member>
        <member name="P:Gnsser.GnssSysRemover.SatelliteTypes">
            <summary>
            定位选项
            </summary> 
        </member>
        <member name="M:Gnsser.GnssSysRemover.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            修正
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MultiSiteEpochInfoReviseManager">
            <summary>
            历元信息处理器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="DataSourceContext"></param>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.MultiSiteEpochInfoReviseManager.DataSourceContext">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteEpochInfoReviseManager.Buffers">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteEpochInfoReviseManager.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteEpochInfoReviseManager.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.Complete">
            <summary>
            完成
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.Revise(Gnsser.Domain.MultiSiteEpochInfo@)">
            <summary>
            矫正
            </summary>
            <param name="multiSiteEpochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.GetEpochBuffers(System.String)">
            <summary>
            获取历元缓存
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.GetDefault(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.MultiSiteSatTimeInfoManager)">
            <summary>
            默认多文件矫正器
            </summary>
            <param name="DataSourceContext"></param>
            <param name="Option"></param>
            <param name="MultiSiteSatTimeInfoManager"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.GetDefaultRaw(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            默认多文件矫正器
            </summary>
            <param name="DataSourceContext"></param>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteEpochInfoReviseManager.WriteStorageToFile(System.String)">
            <summary>
            写周跳探测结果到文件
            </summary>
            <param name="OutputDirectory"></param>
        </member>
        <member name="T:Gnsser.ISiteSatObsInfo">
            <summary>
            指定时刻的可用卫星
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.SatelliteTypes">
            <summary>
            卫星系统类型
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.EnabledPrns">
            <summary>
            可用卫星
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.ReceiverTime">
            <summary>
            信号接收时刻，接收机记录的时刻。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.Epoches">
            <summary>
            历元列表
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.EnabledSatCount">
            <summary>
            可用卫星的数量
            </summary>
        </member>
        <member name="M:Gnsser.ISiteSatObsInfo.HasCycleSlip(Gnsser.SatelliteNumber)">
            <summary>
            是否具有周跳，如果有一个测站具有周跳，则认为有。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.UnstablePrns">
            <summary>
            标记为不稳定的卫星，具有周跳的卫星的编号，或异常的卫星，或初次出现的卫星。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteSatObsInfo.RemovedPrns">
            <summary>
            记录已经移除的卫星编号
            </summary>
        </member>
        <member name="M:Gnsser.ISiteSatObsInfo.RemoveUnStableMarkers">
            <summary>
            移除周跳标记
            </summary>
        </member>
        <member name="M:Gnsser.ISiteSatObsInfo.GetEpochSatWithEphemeris">
            <summary>
            获取具有星历的站星列表。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SmoothRangeSuperpositionType">
            <summary>
            平滑算法叠加类型
            </summary>
        </member>
        <member name="F:Gnsser.SmoothRangeSuperpositionType.快速更新算法">
            <summary>
            快速更新计算，但是电离层精度不一样
            </summary>
        </member>
        <member name="F:Gnsser.SmoothRangeSuperpositionType.窗口AK迭代">
            <summary>
            等价于窗口原始迭代
            </summary>
        </member>
        <member name="F:Gnsser.SmoothRangeSuperpositionType.窗口原始迭代">
            <summary>
            等价于窗口原始迭代
            </summary>
        </member>
        <member name="T:Gnsser.SmoothRangeWindow">
            <summary>
            平滑伪距
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.#ctor(System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,Gnsser.SmoothRangeSuperpositionType)">
            <summary>
            构造函数
            </summary>
            <param name="windowSize"></param>
            <param name="IsWeighted"></param>
            <param name="IsDeltaIonoCorrect"></param>
            <param name="OrderOfDeltaIonoPolyFit"></param>
            <param name="SmoothRangeType"></param>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.CurrentIonoAndHalfLambdaLen">
            <summary>
            当前电离层和0.5倍模糊度的等效距离。 y = I0 + bt + λN /2
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.SmoothRangeType">
            <summary>
            算法类型
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.CurrentData">
            <summary>
            当前的原始数据
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.PrevData">
            <summary>
            上一个原始数据
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.LastRemovedPair">
            <summary>
            上一窗口的第一个数据，即为刚刚被踢出的数据。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.LastSmoothedRange">
            <summary>
            上一次的平滑伪距。
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.LastPhaseRange">
            <summary>
            上一次的载波距离
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.RawRangeStdDev">
            <summary>
            伪距观测噪声，默认为2.
            </summary>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.IsWeighted">
            <summary>
            是否加权
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.Add(Gnsser.RangePhasePair)">
            <summary>
            增加数据
            </summary>
            <param name="rangePhasePair"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.GetSmoothValue">
            <summary>
            计算平滑的伪距。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.GetSmoothValueByFastUpdate">
            <summary>
            计算平滑的伪距，最快的迭代，带电离层的递推平滑算法，可以大大加快速度。
            算法已验证，和窗口单独迭代相同，需要注意的式如果正式平滑时，则不需要加权了。
            2018.06.20, czs， 这是推导了好几天才出的结果，并得到了验证，具体公式请参看本人发表的文章：**平滑伪距***。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.GetSmoothValueByWholeWindowRecursionAk">
            <summary>
            计算平滑的伪距，整个窗口迭代计算Ak
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.GetSmoothValueByWholeWindowRecursionRaw">
            <summary>
            计算平滑的伪距，整个窗口迭代,公式与上两个应该等价，用于验证，计算原始观测数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SmoothRangeWindow.PrevAk">
            <summary>
            上一次计算的AK。
            </summary>
        </member>
        <member name="M:Gnsser.SmoothRangeWindow.GetWeight(Geo.Times.Time,System.Int32)">
            <summary>
            获取权值. 指的是原始P码所占权比例，0 表示不占比例。
            </summary>
            <param name="Time"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.InterpolatingManager">
            <summary>
            多参数插值管理器
            </summary>
        </member>
        <member name="M:Gnsser.InterpolatingManager.#ctor(System.Double[])">
            <summary>
            构造函数
            </summary>
            <param name="Indexes"></param>
        </member>
        <member name="P:Gnsser.InterpolatingManager.Indexes">
            <summary>
            检索号
            </summary>
        </member>
        <member name="M:Gnsser.InterpolatingManager.GetInterpolateValuesParallel(System.Double)">
            <summary>
            并行执行插值操作
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.InterpolatingManager.GetInterpolateValues(System.Double)">
            <summary>
            串行执行插值操作
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.InterpolatingManager.Lagrange(System.Double[],System.Double[],System.Double,System.Double@,System.Double@)">
            <summary>
            拉格朗日插值 崔阳, 2015.04
            </summary>
            <param name="xs"></param>
            <param name="ys"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dydx"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OtherInterpolator">
            <summary>
            星历插值器。目前采用切比雪夫和拉格朗日差值。
            传入  EphemerisInfo 列表 也可是 Sp3Record 列表，可以从数据库或者直接从文件获取。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            注意：传入的卫星列表默认为已经进行过筛选了,默认与待获取星历相近。将直接进行插值，而不再判断。
            </summary>
        </member>
        <member name="M:Gnsser.OtherInterpolator.#ctor(System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            初始化时，输入要插值的星历信息列表。
            列表至少包含 2 个星历。
            </summary>
            <param name="oldInfos"></param>
        </member>
        <member name="M:Gnsser.OtherInterpolator.SatPo(Geo.Times.Time,Geo.Coordinates.XYZ)">
            <summary>
            差值计算
            </summary>
            <param name="rTime"></param>
            <param name="staXyz"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.OtherInterpolator.XYZ(System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double@,System.Double[]@,System.Double@,System.Double@)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.OtherInterpolator.LG(System.Int32,System.Double,System.Double[],System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.OtherInterpolator.prodd(System.Int32,System.Double[],System.Double)" -->
        <member name="T:Gnsser.EphemerisInterpolatorOld">
            <summary>
            星历插值器。目前采用切比雪夫和拉格朗日差值。
            传入  EphemerisInfo 列表 也可是 Sp3Record 列表，可以从数据库或者直接从文件获取。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            注意：传入的卫星列表默认为已经进行过筛选了。将直接进行插值，而不再判断。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisInterpolatorOld.#ctor(System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            初始化时，输入要插值的星历信息列表。
            列表至少包含 2 个星历。
            </summary>
            <param name="oldInfos"></param>
        </member>
        <member name="M:Gnsser.EphemerisInterpolatorOld.GetEphemerisInfo(Geo.Times.Time)">
            <summary>
            获取插值后的 EphemerisInfo。
            注意：不对钟差相对论误差进行改正，此处时间是卫星钟时间，没有相对信息。2014.09.08
            失败，如超过时间，则返回null
            由于一般没有卫星速度的数据，必须通过插值坐标计算速度。2015.03.
            如果有速度信息，以下的方法就不合适了。
            </summary> 
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolatorOld.GetNearstIndexes(System.Collections.Generic.List{Gnsser.Ephemeris},Geo.Times.Time,System.Int32)">
            <summary>
            获取指定数组中与 X 最相近的数组编号。 
            </summary>
            <param name="XArray">递增或递减数组</param>
            <param name="xValue"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolatorOld.Lagrange(System.Double[],System.Double[],System.Double,System.Double@,System.Double@)">
            <summary>
            拉格朗日插值 崔阳
            </summary>
            <param name="xs"></param>
            <param name="ys"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dydx"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolatorOld.SatPo(Geo.Times.Time,Geo.Coordinates.XYZ)">
            <summary>
            差值计算
            </summary>
            <param name="rTime"></param>
            <param name="staXyz"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolatorOld.XYZ(System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double@,System.Double[]@,System.Double@,System.Double@)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolatorOld.LG(System.Int32,System.Double,System.Double[],System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolatorOld.prodd(System.Int32,System.Double[],System.Double)" -->
        <member name="T:Gnsser.EphemerisInterpolator">
            <summary>
            星历插值器。目前采用切比雪夫和拉格朗日差值。
            传入  EphemerisInfo 列表 也可是 Sp3Record 列表，可以从数据库或者直接从文件获取。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            注意：传入的卫星列表默认为已经进行过筛选了,默认与待获取星历相近。将直接进行插值，而不再判断。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator.#ctor(System.Collections.Generic.List{Gnsser.Ephemeris},System.Int32)">
            <summary>
            初始化时，输入要插值的星历信息列表。
            列表至少包含 2 个星历。
            </summary>
            <param name="oldInfos"></param>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator.#ctor(Gnsser.Data.Rinex.EphemerisStorage,System.Int32)">
            <summary>
            采用卫星列表初始化
            </summary>
            <param name="sortedRecords"></param>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator.GetEphemerisInfo(Geo.Times.Time)">
            <summary>
            获取插值后的 EphemerisInfo。
            注意：不对钟差相对论误差进行改正，此处时间是卫星钟时间，没有相对信息。2014.09.08
            失败，如超过时间，则返回null
            由于一般没有卫星速度的数据，必须通过插值坐标计算速度。2015.03.
            如果有速度信息，以下的方法就不合适了。
            </summary> 
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator.GetSatPosWithEarthRotateCorrection(Geo.Times.Time,Gnsser.Ephemeris)">
            <summary>
            获取指定时刻的卫星位置，考虑了地球自转改正置。
            </summary>
            <param name="gpsTime"></param>
            <param name="ephemeris"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.WideLaneBiasItem">
            <summary>
            法国宽项读取器。 
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.WideLaneBiasItem.Data">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:Gnsser.WideLaneBiasItem.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasItem.GetMwDiffer(Gnsser.SatelliteNumber)">
            <summary>
            为了和MW结果一致，此处采用基准星减去其它星。归算到0-1区间，根据N=B-f使用即可。
            </summary>
            <param name="basePrn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WideLaneBiasItem.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.WideLaneBiasItem.Parse(System.String)">
            <summary>
            解析字符串
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.WideLaneBiasItemReader">
            <summary>
            法国宽项读取器。 
            ftp://ftpsedr.cls.fr/pub/igsac/Wide_lane_GPS_satellite_biais.wsb
            </summary>
        </member>
        <member name="M:Gnsser.WideLaneBiasItemReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.WideLaneBiasItemReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="gofFilePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.KeplerOrbitUtil">
            <summary>
            开普勒6个轨道根数解算。
            卫星无摄运动二体问题。
            </summary>
        </member>
        <member name="F:Gnsser.KeplerOrbitUtil.GM">
            <summary>
            地球引力常数
            </summary>
        </member>
        <member name="M:Gnsser.KeplerOrbitUtil.GetKeplerEphemerisParamFromTwoPos(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ,System.Double)">
            <summary>
            通过两个时刻的位置，求轨道参数。
            </summary>
            <param name="posA"></param>
            <param name="posB"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.KeplerOrbitUtil.GetKeplerEphemerisParam(Geo.Coordinates.MotionState)">
            <summary>
            计算开普勒根数
            </summary>
            <param name="MotionState"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.KeplerOrbitUtil.GetKeplerEphemerisParam(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            计算开普勒根数
            </summary>
            <param name="pos"></param>
            <param name="velocity"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.KeplerOrbitUtil.GetSatPos(System.Double,Gnsser.KeplerEphemerisParam)">
            <summary>
            计算坐标
            </summary>
            <param name="timeFromReffer"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.KeplerOrbitUtil.GetSatPos(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            6个轨道根数计算卫星在天球坐标系中的位置，角度以弧度为单位。
            本函数仅用于课程学习计算。
            </summary>
            <param name="deltaTime">距离参考时刻的时间差，单位秒</param>
            <param name="eye">轨道平面倾角,弧度</param>
            <param name="Ω">升交点赤经,弧度</param>
            <param name="a">轨道椭圆长半径的平方根</param>
            <param name="e">轨道椭圆离心率</param>
            <param name="w">近升角距,弧度</param>
            <param name="M0">参考时刻τ卫星的平近点角,弧度</param>
        </member>
        <member name="T:Gnsser.KeplerEphemerisParam">
            <summary>
            简单的开普勒轨道6根数
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.Toe">
            <summary>
            星历的参考时刻（GPS周内的秒数）
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.SqrtA">
            <summary>
            Toe时刻的轨道长半径平方根。square root of semimajor axis           Sqrt(m)  
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.Eccentricity">
            <summary>
            e, Toe时刻的偏心率，eccentricity
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.Inclination">
            <summary>
            i, Toe时刻的轨道倾角，inclination at ref. epoch  rad
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.LongOfAscension">
            <summary>
            Ω， Toe时刻的升交点赤经。right ascension of asc. node at ref. epoch (r)
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.ArgumentOfPerigee">
            <summary>
            小Ω，argument of perigee                        (r)
            </summary>
        </member>
        <member name="P:Gnsser.KeplerEphemerisParam.MeanAnomaly">
            <summary>
            M, Toe时刻的平近点角， mean anomaly at ref. epoch                 (r)
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteObsStream">
            <summary>
            多观测数据源
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.#ctor(System.Collections.Generic.IEnumerable{System.String},Gnsser.BaseSiteSelectType,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="pathes"></param>
            <param name="IsSameSatRequired"></param>
            <param name="BaseSiteSelectType"></param>
            <param name="IndicatedBaseSiteName"></param>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.#ctor(Gnsser.Data.Rinex.ISingleSiteObsStream)">
            <summary>
            构造函数，只有一个站
            </summary>
            <param name="dataSource"></param>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="E:Gnsser.MultiSiteObsStream.ProductProduced">
            <summary>
            产生了产品
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.BaseSiteSelectType">
            <summary>
            基准站选择方法
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.IndicatedBaseSiteName">
            <summary>
            外部指定的基准站名称
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.IsSameSatRequired">
            <summary>
            是否需要卫星共视
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.IsAllowMissingEpochSite">
             <summary>
            是否允许 丢失某测站的某历元。
             </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.Pathes">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.DataSources">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.EphemerisServices">
            <summary>
            星历数据源
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.OnProductProduced(Gnsser.Domain.MultiSiteEpochInfo)">
            <summary>
            产生产品
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.BaseDataSource">
            <summary>
            基准数据流。如果只有一个，则只需以此遍历。
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.OtherDataSource">
            <summary>
            其它数据源
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.OtherDataSources">
            <summary>
            其它的数据源
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.ObsInfo">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.CurrentProduct">
            <summary>
            当前产品
            </summary>
        </member>
        <member name="P:Gnsser.MultiSiteObsStream.TimePeriod">
            <summary>
            有效时段
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.GetMaxCommonTimePeriod">
            <summary>
            获取最大时段信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.GetSameTimePeriod">
            <summary>
            计算所有观测的共有时段，忽略单独观测时段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.TryLoadEphemerisServices">
            <summary>
            尝试加载自带的星历文件。
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.MoveNext">
            <summary>
            移动到下一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteObsStream.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:Gnsser.IObsInfo">
            <summary>
            某次观测信息，是一个较小时段内的活动，如一次或一天，此信息不稳定，与某次观测相关。通常与SiteInfo（较固定）一起使用。
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.ObsCodes">
            <summary>
            GNSS系统及其对应的观测值类型。核心存储
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.ObsCodeTypes">
            <summary>
            卫星观测代码字典，如 G1：C1，L1。
            本属性决定观测系统、观测码类型等，非常重要。
            类型化的观测码集合
            </summary>
        </member>
        <member name="M:Gnsser.IObsInfo.GetFrequenceCount(Gnsser.SatelliteType)">
            <summary>
            获取系统频率数量
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.IObsInfo.SatelliteTypes">
            <summary>
            卫星系统类型
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.TotalPrns">
            <summary>
            卫星列表
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.Interval">
            <summary>
            采样间隔
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.StartTime">
            <summary>
            第一次观测时间
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.EndTime">
            <summary>
            最后一次观测时间
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.IsEndTimeAvailable">
            <summary>
            结束时间是否可以探知？
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.TimePeriod">
            <summary>
            观测时段，如果可用的话。
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.Count">
            <summary>
            历元数量，通常是大概值，估算而出。
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.Observer">
            <summary>
            观察者
            </summary>
        </member>
        <member name="P:Gnsser.IObsInfo.ObserverAgence">
            <summary>
            观测机构
            </summary>
        </member>
        <member name="T:Gnsser.ObsInfo">
            <summary>
            某次观测信息，是一个较小时段内的活动，如一次或一天，此信息不稳定，与某次观测相关。通常与SiteInfo（较固定）一起使用。
            </summary>
        </member>
        <member name="M:Gnsser.ObsInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.ObsCodes">
            <summary>
            GNSS系统及其对应的观测值类型。核心存储
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.ObsCodeTypes">
            <summary>
            卫星观测代码字典，如 G1：C1，L1。
            本属性决定观测系统、观测码类型等，非常重要。
            类型化的观测码集合
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.SatelliteTypes">
            <summary>
            卫星系统，来源于观测码字典，实际的记录系统，只可以获取不可以修改。
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.TotalPrns">
            <summary>
            卫星列表，为空 或 有值
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.Interval">
            <summary>
            采样间隔，单位秒
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.StartTime">
            <summary>
            第一次观测时间
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.EndTime">
            <summary>
            最后一次观测时间。默认时间为1天。
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.IsEndTimeAvailable">
            <summary>
            结束时间是否可以探知？
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.TimePeriod">
            <summary>
            观测时段，如果可用的话。
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.Observer">
            <summary>
            观察者
            </summary>
        </member>
        <member name="P:Gnsser.ObsInfo.ObserverAgence">
            <summary>
            观测机构
            </summary>
        </member>
        <member name="M:Gnsser.ObsInfo.GetFrequenceCount(Gnsser.SatelliteType)">
            <summary>
            获取系统频率数量,通过观测码判断，算法有待检验。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Baseline">
            <summary>
            基线
            </summary>
        </member>
        <member name="M:Gnsser.Baseline.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.Baseline.StartName">
            <summary>
            参考站名称
            </summary>
        </member>
        <member name="P:Gnsser.Baseline.EndName">
            <summary>
            流动站名称
            </summary>
        </member>
        <member name="M:Gnsser.Baseline.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Baseline.Equals(System.Object)">
            <summary>
            等于否
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Baseline.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Core.LAMBDA">
            <summary>
            Integer estimation with the LAMBDA method
            Least-square Ambiguity Decorrelation Adjustment(最小二乘模糊度降相关平差法)，简称LAMBDA法，被认为是目前最好的一种整周模糊度解算方法
            LAMBDA算法包括两个过程：模糊度降相关处理（整数 变换）和整数模糊度搜索。其基本思想是首先基于拉格朗日降相关原理，通过整体变化方法降低
            模糊度之间的相关性，然后在整数变换后的空间内，采用搜索技术获得其最优模糊度向量。
            </summary>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.#ctor(System.Int32,System.Int32,System.Double[][],System.Double[])">
            <summary>
            RTKLIB提供的LAMBDA固定
            </summary>
            <param name="n">浮点参数的个数.number of float parameters</param>
            <param name="m">固定解的个数，通常为两个，一个最小值，一个次小值. number of fixed solutions</param>
            <param name="Q">浮点解的协方差矩阵。covariance matrix of float parameters (n * n)</param>
            <param name="a">浮点解向量。float parameters (n * 1)</param>
            <param name="F">固定解向量。fixed solutions (n * m)</param>
            <param name="s">固定解的残差平方和，便于ratio检验。sum of squared residulas of fixed solutions (1 * m)</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.getLambda(System.Double[]@,System.Double[]@)">
            <summary>
            获取
            </summary>
            <param name="F">固定解向量。fixed solutions (n * m)</param>
            <param name="s">固定解的残差平方和，便于ratio检验。sum of squared residulas of fixed solutions (1 * m)</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.LD(System.Int32,System.Double[],System.Double[]@,System.Double[]@)">
            <summary>
            LD factorization (Q=L'*diag(D)*L)
            </summary>
            <param name="n"></param>
            <param name="Q"></param>
            <param name="L"></param>
            <param name="D"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.reduction(System.Int32,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            lambda reduction (z=Z'*a, Qz= Z'*Q*Z=L'*diag(D)*L)
            </summary>
            <param name="n"></param>
            <param name="L"></param>
            <param name="D"></param>
            <param name="Z"></param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.matmul(System.Char[],System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Double,System.Double[]@)">
            <summary>
            multiply matrix
            </summary>
            <param name="tr"></param>
            <param name="n"></param>
            <param name="k"></param>
            <param name="m"></param>
            <param name="alpha"></param>
            <param name="A"></param>
            <param name="B"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.msearch(System.Int32,System.Int32,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            modified lambda(mlambda) search
            改良的、修正的LAMBDA
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <param name="L"></param>
            <param name="D"></param>
            <param name="zs"></param>
            <param name="zn"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.solve(System.Char[],System.Double[],System.Double[],System.Int32,System.Int32,System.Double[]@)">
            <summary>
            solve linear equation
            </summary>
            <param name="tr"></param>
            <param name="A"></param>
            <param name="Y"></param>
            <param name="n"></param>
            <param name="m"></param>
            <param name="X"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.matinv(System.Double[]@,System.Int32)">
            <summary>
            inverse of matrix
            </summary>
            <param name="A"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="F:Gnsser.Core.LAMBDA.loopMax">
            <summary>
            maximum count of search loop
            </summary>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Search(System.Double,System.Int32,System.Int32,System.Double[],Geo.Algorithm.ArrayMatrix,System.Double[],Geo.Algorithm.ArrayMatrix@,Geo.Algorithm.ArrayMatrix@,System.Int32@,System.Int32@)">
            <summary>
            finds 'MaxCan' integer vectors whose distances to the real vector 'a' are minimal in the metric of Q = transpose(L) D L.
            Only integer vectors with a distance less than sqrt(Chic) are regared.
            The search for gridpoints inside the ambiguity search ellipsoid is a sequential conditional adjustment upon the ambiguities.
            The search starts by conditioning the last ambiguity a_n to an integer, then the one-but-last a_{n-1} etc., until
              - the squared norm grows too large (out of the ellipsoid)
              - an integer for a_1 is found: a full integer vector is encountered (a gridpoint inside the ellipsoid)
              then is goes back to some previous (towards a_n) ambiguity 
              and considers another integer for it.
            </summary>
            <param name="Chic">Chi squared</param>
            <param name="MaxCan">Number of minimum integer vectors required</param>
            <param name="n">dimension of matrix</param>
            <param name="D">diagonal matrix</param>
            <param name="L">kiwer truabgykar natrux, only stroe lower triangular</param>
            <param name="a">vector of real valued estimates(float solution)</param>
            <param name="cands">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms</param>
            <param name="ipos">column number in 'cands' where the candidate belonging to the minimum distance is stored</param>
            <param name="ncan">number of integer vectors found</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Collects(System.Int32,System.Double[],System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[],System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            collexts integer vectors and corresponding squared distances
            </summary>
            <param name="MaxCan">number of minimum integer vectors required</param>
            <param name="D">diagonal matrix</param>
            <param name="Chic">Chi squared</param>
            <param name="cands">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms \hat{a}-\check{a}</param>
            <param name="tmax">the largest distance of the Min(ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="imax">position in disall/cands of the vector with the largest distance of the Min (ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="right">vector</param>
            <param name="left">vector</param>
            <param name="ncan">number of integer vectors found</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Stores(System.Int32,System.Int32,System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[])">
            <summary>
            Stores candidates and correspoding distances
            </summary>
            <param name="ican">Min (number of vectors found until now, MaxCan)</param>
            <param name="ipos">position in disall/cands to put the new found vector </param>
            <param name="t">distance of the new found vector</param>
            <param name="cands">2d-array to store the integer vectors</param>
            <param name="disal1">distance of the MaxCan integer vectors</param>
            <param name="tmax">the largest distance of the ican vectors with minmum distance found until now</param>
            <param name="imax">position in disal1/cands of the vector with the largest distance of the ican vectors with minimum distance found until now</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Backtrack(System.Boolean@,System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            backtrack in the search tree: used in SEARCH
            </summary>
            <param name="ende">if 'true', then search is done</param>
            <param name="left">vector</param>
            <param name="time">level in the tree</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and hat {a}_i</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Chistart(System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            Compute squared distance of partially rounded float vectors to the float vector in the metric of the covariance matrix
            </summary>
            <param name="D"></param>
            <param name="L"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.L_Inv(Geo.Algorithm.ArrayMatrix)">
            <summary>
            Compute the inverse of a lower triangular matrix
            </summary>
            <param name="L"></param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Re_Order(Geo.Algorithm.ArrayMatrix,System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            Computation of the Z-transformation matrix
            The final Z-transformation is constructed from a sequence of interchanges of dayServices neighbouring ambiguities(this function) and
            integer Gauss transformations (function ztransi) that pair-wise decorrelate the ambiguities
            </summary>
            <param name="Zti"></param>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.Ztransi(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            Update integral Z-transform for L
            only column 'prevObj' until 'last'.
            the output is the inverse of Z transpose
            </summary>
            <param name="Zti">the inverse Z transposed transformation matrix</param>
            <param name="L">lower triangular matrix L</param>
            <param name="prevObj">prevObj column to be updated</param>
            <param name="last">last column to be updated</param>
        </member>
        <member name="M:Gnsser.Core.LAMBDA.LTDL(System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            factorization of Q into L^TProduct D L
            </summary>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="P:Gnsser.Core.LAMBDA.n">
            <summary>
            dimension of matrix Q and vector a 
            </summary>
        </member>
        <member name="P:Gnsser.Core.LAMBDA.m">
            <summary>
            备选的值，通常为两组，一组最优，一组次优，便于RATIO判别
            </summary>
        </member>
        <member name="P:Gnsser.Core.LAMBDA.Q">
            <summary>
            variance covariance matrix(symmetric)
            </summary>
        </member>
        <member name="P:Gnsser.Core.LAMBDA.Qa">
            <summary>
            数组表示的浮点方差矩阵
            </summary>
        </member>
        <member name="P:Gnsser.Core.LAMBDA.a">
            <summary>
            the vetor with real valued estimated(float solution)
            </summary>
        </member>
        <member name="T:Gnsser.LambdaAmbiguityFixer">
            <summary>
            Integer estimation with the LAMBDA method Least-square Ambiguity Decorrelation Adjustment
            (最小二乘模糊度降相关平差法)，简称LAMBDA法。
            被认为是目前最好的一种整周模糊度解算方法。
            LAMBDA算法包括两个过程：模糊度降相关处理（整数 变换）和整数模糊度搜索。
            其基本思想是首先基于拉格朗日降相关原理，通过整体变化方法降低
            模糊度之间的相关性，然后在整数变换后的空间内，采用搜索技术获得其最优模糊度向量。
            </summary>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Init">
            <summary>
            一些初始化工作。
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.Dimension">
            <summary>
            dimension of matrix Q and vector a 
            向量和权逆阵的维数。
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.Cova">
            <summary>
            variance covariance matrix(symmetric)
            协方差阵。对称的。
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.FloatResolution">
            <summary>
            the vetor with real valued estimated(float solution)
            浮点解算向量。
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.RawIntegers">
            <summary>
            原始数据取整
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.Fractions">
            <summary>
            原始解的小数部分
            </summary>
        </member>
        <member name="P:Gnsser.LambdaAmbiguityFixer.DefaultRms">
            <summary>
            默认的RMS
            </summary>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.GetFixedAmbiguities(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            计算，获取固定后的模糊度结果。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Search(System.Double,System.Int32,System.Int32,System.Double[],Geo.Algorithm.ArrayMatrix,Geo.Algorithm.Vector,Geo.Algorithm.ArrayMatrix@,Geo.Algorithm.ArrayMatrix@,System.Int32@,System.Int32@)">
            <summary>
            找到最大可能的整数向量，使其与浮点数向量解的距离最小，并满足条件 Q = transpose(L) D L。
            finds 'MaxCan' integer vectors whose distances to the real vector 'a' are minimal in the metric of Q = transpose(L) D L.
            Only integer vectors with a distance less than sqrt(Chic) are regared.
            The search for gridpoints inside the ambiguity search ellipsoid is a sequential conditional adjustment upon the ambiguities.
            The search starts by conditioning the last ambiguity a_n to an integer, then the one-but-last a_{n-1} etc., until
              - the squared norm grows too large (out of the ellipsoid)
              - an integer for a_1 is found: a full integer vector is encountered (a gridpoint inside the ellipsoid)
              then is goes back to some previous (towards a_n) ambiguity 
              and considers another integer for it.
            </summary>
            <param name="Chic">Chi squared</param>
            <param name="MaxCan">Number of minimum integer vectors required</param>
            <param name="dimension">dimension of matrix</param>
            <param name="diagonal">diagonal matrix</param>
            <param name="lowerTriangular">kiwer truabgykar natrux, only stroe lower triangular</param>
            <param name="floatSolution">vector of real valued estimates(float solution)</param>
            <param name="candidates">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms</param>
            <param name="ipos"> 最佳候选整数的位置。 column number in 'cands' where the candidate belonging to the minimum distance is stored</param>
            <param name="ncan">找到的可能的整数数量。number of integer vectors found</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Collects(System.Int32,System.Double[],System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[],System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            collexts integer vectors and corresponding squared distances
            </summary>
            <param name="MaxCan">number of minimum integer vectors required</param>
            <param name="D">diagonal matrix</param>
            <param name="Chic">Chi squared</param>
            <param name="cands">2-dimensional array to store the candidates</param>
            <param name="disal1">according squared norms \hat{a}-\check{a}</param>
            <param name="tmax">the largest distance of the Min(ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="imax">position in disall/cands of the vector with the largest distance of the Min (ncan, MaxCan) vectors with minimum distance found until now</param>
            <param name="right">vector</param>
            <param name="left">vector</param>
            <param name="ncan">number of integer vectors found</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Stores(System.Int32,System.Int32,System.Double,Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Double@,System.Int32@,System.Double[])">
            <summary>
            存储候选者和相关距离。
            Stores candidates and correspoding distances
            </summary>
            <param name="ican">Min (number of vectors found until now, MaxCan)</param>
            <param name="ipos">position in disall/cands to put the new found vector </param>
            <param name="t">distance of the new found vector</param>
            <param name="cands">2d-array to store the integer vectors</param>
            <param name="disal1">distance of the MaxCan integer vectors</param>
            <param name="tmax">the largest distance of the ican vectors with minmum distance found until now</param>
            <param name="imax">position in disal1/cands of the vector with the largest distance of the ican vectors with minimum distance found until now</param>
            <param name="dist">difference between the integer tried and \hat{a}_n</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Backtrack(System.Boolean@,System.Double[],System.Int32@,System.Double[],System.Double[],System.Double[])">
            <summary>
            backtrack in the search tree: used in SEARCH
            </summary>
            <param name="ende">if 'true', then search is done</param>
            <param name="left">vector</param>
            <param name="time">level in the tree</param>
            <param name="lef">vector</param>
            <param name="dist">difference between the integer tried and hat {a}_i</param>
            <param name="endd">vector</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Chistart(System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            Compute squared distance of partially rounded float vectors to the float vector in the metric of the covariance matrix
            </summary>
            <param name="D"></param>
            <param name="L"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Re_Order(Geo.Algorithm.ArrayMatrix,System.Double[],Geo.Algorithm.ArrayMatrix)">
            <summary>
            计算 Z 变换矩阵，最后的 Z 变换矩阵是构建自一些列相邻模糊度的整数。
            Computation of the Z-transformation matrix
            The final Z-transformation is constructed from a sequence of interchanges of dayServices neighbouring ambiguities(this function) and
            integer Gauss transformations (function ztransi) that pair-wise decorrelate the ambiguities
            </summary>
            <param name="Zti"></param>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.Ztransi(Geo.Algorithm.ArrayMatrix,Geo.Algorithm.ArrayMatrix,System.Int32,System.Int32)">
            <summary>
            Update integral Z-transform for L
            only column 'prevObj' until 'last'.
            the output is the inverse of Z transpose
            </summary>
            <param name="Zti">the inverse Z transposed transformation matrix</param>
            <param name="L">lower triangular matrix L</param>
            <param name="prevObj">prevObj column to be updated</param>
            <param name="last">last column to be updated</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.GetInverseOfLowerTriangular(Geo.Algorithm.ArrayMatrix,System.Int32)">
            <summary>
            计算下三角矩阵的逆。
            Compute the inverse of a lower triangular matrix
            </summary>
            <param name="lowerTriangular">下三角矩阵</param>
            <param name="dimension">矩阵的维数</param>
        </member>
        <member name="M:Gnsser.LambdaAmbiguityFixer.FactorizationQToLTDL(Geo.Algorithm.IMatrix,System.Double[]@,Geo.Algorithm.ArrayMatrix@)">
            <summary>
            因式分解Q为LTDL
            factorization of Q into L^TProduct D L
            </summary>
            <param name="D"></param>
            <param name="L"></param>
        </member>
        <member name="T:Gnsser.MathRoundAmbiguityFixer">
            <summary>
            采用最简单的四舍五入法进行模糊度固定。
            </summary>
        </member>
        <member name="M:Gnsser.MathRoundAmbiguityFixer.GetFixedAmbiguities(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            计算模糊度整数解。
            </summary>
            <param name="FloatAmbiguity"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.MathTruncateAmbiguityFixer">
            <summary>
            采用最简单的数字截断法进行模糊度固定。
            </summary>
        </member>
        <member name="P:Gnsser.MathTruncateAmbiguityFixer.DefaultRms">
            <summary>
            默认的RMS
            </summary>
        </member>
        <member name="T:Gnsser.IAmbiguityFixer">
            <summary>
            模糊度固定器
            </summary>
        </member>
        <member name="P:Gnsser.IAmbiguityFixer.DefaultRms">
            <summary>
            默认的RMS
            </summary>
        </member>
        <member name="M:Gnsser.IAmbiguityFixer.GetFixedAmbiguities(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            获取固定后的模糊度。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseAmbiguityFixer">
            <summary>
            模糊度固定器
            </summary>
        </member>
        <member name="M:Gnsser.BaseAmbiguityFixer.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.BaseAmbiguityFixer.DefaultRms">
            <summary>
            默认固定后的RMS或均方差。
            </summary>
        </member>
        <member name="M:Gnsser.BaseAmbiguityFixer.GetFixedAmbiguities(Geo.Algorithm.Adjust.WeightedVector)">
            <summary>
            固定算法实现
            </summary>
            <param name="floatResolution"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseCycleSlipDetector`1">
            <summary>
            探测周跳基本类。
            </summary>
        </member>
        <member name="F:Gnsser.BaseCycleSlipDetector`1.log">
            <summary>
            日志记录
            </summary>
        </member>
        <member name="M:Gnsser.BaseCycleSlipDetector`1.#ctor(System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="IsUsingRecordedCycleSlipInfo"></param>
        </member>
        <member name="M:Gnsser.BaseCycleSlipDetector`1.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.CurrentResult">
            <summary>
            周跳探测结果
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.TableObjectManager">
            <summary>
            数据查看器
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.IsSaveResultToTable">
            <summary>
            是否保存结果到表中。
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.EpochSat">
            <summary>
            当前卫星
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.SatValueManager">
            <summary>
            历元卫星缓存。
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.EpochSats">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.CurentEpochSats">
            <summary>
            当前卫星观测值，实时更新
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.IsUsingRecordedCsInfo">
            <summary>
            是否使用已经记录的周跳信息，否则只从数据本身探测。
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.BaseCycleSlipDetector`1.CycleSlipStorage">
            <summary>
            周跳探测结果存储器
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.BaseCycleSlipDetector`1.Detect(Gnsser.Domain.EpochSatellite)" -->
        <member name="M:Gnsser.BaseCycleSlipDetector`1.SetEpochSatellite(Gnsser.Domain.EpochSatellite)">
            <summary>
            设置站星信息。
            </summary>
            <param name="epochSat"></param>
        </member>
        <member name="M:Gnsser.BaseCycleSlipDetector`1.RegistCurrentCsed">
            <summary>
            注册当前为有周跳。
            </summary>
        </member>
        <member name="M:Gnsser.BaseCycleSlipDetector`1.GetOutTable">
            <summary>
            获取输出表。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseCycleSlipDetector">
            <summary>
            探测周跳基本类。
            </summary>
        </member>
        <member name="M:Gnsser.BaseCycleSlipDetector.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="IsUsingRecordedCycleSlipInfo"></param>
        </member>
        <member name="T:Gnsser.CycleSlipDetectorType">
            <summary>
            周跳探测的类型
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.首次出现标记法">
            <summary>
            首次出现时间探测
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.数值平均法">
            <summary>
            通过平均数判断是否超限
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.多项式拟合法">
            <summary>
            多项式拟合
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.高次差法">
            <summary>
            高次差
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.灰色模型法">
            <summary>
            灰色模型
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.LI组合">
            <summary>
            其实这只是一个数据 类型，不应该是探测方法
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.MW组合">
            <summary>
            其实这只是一个数据 类型，不应该是探测方法
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.三频GF1组合">
            <summary>
            其实这只是一个数据 类型，不应该是探测方法
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.三频GF2组合">
            <summary>
            其实这只是一个数据 类型，不应该是探测方法
            </summary>
        </member>
        <member name="F:Gnsser.CycleSlipDetectorType.三频MW组合">
            <summary>
            其实这只是一个数据 类型，不应该是探测方法
            </summary>
        </member>
        <member name="T:Gnsser.ICycleSlipDetector">
            <summary>
            周跳探测结果通用接口。CycleSlip 缩写为 CS。
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="M:Gnsser.ICycleSlipDetector.Detect(Gnsser.Domain.EpochSatellite)">
            <summary>
            执行探测.如果找到了，返回true。
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.CycleSlipStorage">
            <summary>
            周跳探测结果存储器
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.EpochSat">
            <summary>
            当前卫星测量数据
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.IsSaveResultToTable">
            <summary>
            是否保存结果到表
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.IsUsingRecordedCsInfo">
            <summary>
            是否使用已经记录的周跳信息
            </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.TableObjectManager">
             <summary>
            结果存储器
             </summary>
        </member>
        <member name="P:Gnsser.ICycleSlipDetector.CurrentResult">
            <summary>
            当前探测结果
            </summary>
        </member>
        <member name="T:Gnsser.CycleSlipDetectReviser">
            <summary>
            周跳组合探测处理器，采用探测器标记是否具有周跳。
            通常探测器只能探测一个测站的周跳，如果有多个探测器，请使用多个对象。
            </summary>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.IsMarkingCycleSlipe">
            <summary>
            是否标记周跳已经发生
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.IsRemoveCycleSlipeMarker">
            <summary>
            是否标记周跳没有发生
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.CycleSlipStorage">
            <summary>
            周跳探测结果存储器
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.CycleSlipDetectors">
            <summary>
            探测器
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.LastDetectingTime">
            <summary>
            最后一次探测时间
            </summary>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Add(Gnsser.ICycleSlipDetector)">
            <summary>
            添加一个检核器。
            </summary>
            <param name="checker"></param>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Add(System.Collections.Generic.ICollection{Gnsser.ICycleSlipDetector})">
            <summary>
            添加检核器。
            </summary>
            <param name="checker"></param>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Detect(Gnsser.Domain.EpochSatellite)">
            <summary>
            是否具有周跳。
            </summary>
            <param name="epochSat">被检核者</param>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理
            </summary>
            <param name="epochInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.WriteStorageToFile(System.String,System.String,Gnsser.SatObsDataType)">
            <summary>
            写周跳到文件
            </summary>
            <param name="outputDirectory"></param>
            <param name="soureName"></param>
            <param name="ObsPhaseDataType"></param>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.BuildFileName(System.String,Gnsser.CycleSlipDetectorType,Gnsser.SatObsDataType)">
            <summary>
            构造文件名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.MarkCycleSlip(Gnsser.Domain.EpochSatellite,System.Boolean)">
            <summary>
            标记周跳发生或者没有发生
            </summary>
            <param name="sat"></param>
            <param name="trueOrFalse"></param>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.DefaultDoubleFrequencyDetector(Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            GNSSer 默认周跳探测器。
            </summary>
            <param name="Option">GNSS数据处理选项</param>
            <param name="isRevered">是否逆序探测，如果是，探测时将不会使用已有周跳信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.DefaultTripleFrequencyDetector(System.Boolean)">
            <summary>
            GNSSer 默认周跳探测器。
            </summary>
            <param name="isRevered">是否逆序探测，如果是，探测时将不会使用已有周跳信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.DefaultSingeFrequencyDetector(Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            单频 默认周跳探测器
            </summary>
            <param name="Option">GNSS数据处理选项</param>
            <param name="isRevered">是否逆序探测，如果是，探测时将不会使用已有周跳信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.CreateCycleSlipReviser(Gnsser.SatObsDataType,System.Collections.Generic.List{Gnsser.CycleSlipDetectorType},Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            创建周跳探测的矫正器
            </summary>
            <param name="obsType"></param>
            <param name="types"></param>
            <param name="Option">GNSS数据处理选项</param>
            <param name="isRevered">是否逆序探测，如果是，探测时将不会使用已有周跳信息</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Create(Gnsser.CycleSlipDetectorType,Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            周跳探测器建立
            </summary>
            <param name="type"></param>
            <param name="Option"></param>
            <param name="isRevered"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.CycleSlipDetectReviser.Create(Gnsser.SatObsDataType,Gnsser.CycleSlipDetectorType,Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            周跳探测器建立
            </summary>
            <param name="obsType"></param>
            <param name="type"></param>
            <param name="Option"></param>
            <param name="isRevered"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.EpochSat">
            <summary>
            当前观测的卫星信息
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.IsSaveResultToTable">
            <summary>
            是否保存到表
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.IsUsingRecordedCsInfo">
            <summary>
            是否使用已有周跳信息
            </summary>
        </member>
        <member name="P:Gnsser.CycleSlipDetectReviser.TableObjectManager">
            <summary>
            表存储器
            </summary>
        </member>
        <member name="T:Gnsser.LiCycleSlipDetector">
            <summary>
            通常探测器只能探测一个测站的周跳，如果有多个探测器，请使用多个对象周跳探测,并进行标记，而不修复。 
            GPSTk 第二种方法。
            采用 LI 组合值、 LLI1 and LLI2指数，和 2 阶拟合曲线。
            采用 5-12 个数据将LI组合值进行 2 阶拟合，并利用时变阈值进行比较。
            阈值采用指数函数和饱和阈值以及时间常数确定。
            默认最大间隔时间是 61 秒（针对采用率30秒的观测数据）
            将采用一些列数据，配合 SatArcMarker 使用。
            </summary>
        </member>
        <member name="M:Gnsser.LiCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.LiCycleSlipDetector.#ctor(System.Double,System.Boolean)">
             <summary>
            周跳探测,并进行标记，而不修复。 Default constructore, setting default parameters.
             </summary>
        </member>
        <member name="P:Gnsser.LiCycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="M:Gnsser.LiCycleSlipDetector.Create(Gnsser.SatelliteNumber)">
            <summary>
            创建
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.LiCycleSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.LiCycleSlipDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double,System.Boolean)">
            <summary>
            如果有周跳，则返回 1. 否则没有探测出。
            Method tat implements the LI cycle slip detection algorithm
            </summary>
            <param name="gpsTime">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="liValue">Current LI observation value</param>   
            <returns></returns>
        </member>
        <member name="T:Gnsser.TimeValue">
            <summary>
             a class used to store filter satData for a SV.
            </summary>
        </member>
        <member name="T:Gnsser.MwCycleSlipDetector">
            <summary>
            周跳探测,并进行标记，而不修复。 使用 MW observables探测周跳。 
            只处理双频情况。
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetector.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            默认构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetector.#ctor(System.Double,System.Double,System.Boolean)">
            <summary>
            周跳探测,并进行标记，而不修复。 默认构造函数。
            </summary>
            <param name="maxBreakingEpochCount"></param>
            <param name="maxDifferValue"></param>
            <param name="IsUsingRecordedCycleSlipInfo"></param>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetector.DetectorType">
            <summary>
            周跳探测类型。
            </summary>
        </member>
        <member name="P:Gnsser.MwCycleSlipDetector.MaxDifferValue">
            <summary>
            允许的最大数值差异
            </summary>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetector.Detect">
            <summary>
            探测
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.MwCycleSlipDetector.GetDetection(Geo.Times.Time,Gnsser.SatelliteNumber,System.Double)">
            <summary>
            Method tat implements the mw cycle slip detection algorithm
            </summary>
            <param name="epoch">Time of observations</param>
            <param name="prn">SatId</param> 
            <param name="mwValue">Current mw observation value</param> 
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatAmbiguityManager">
            <summary>
            负责责维护对齐模糊度
            </summary>
        </member>
        <member name="M:Gnsser.SatAmbiguityManager.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.SatAmbiguityManager.SetInitCyle(System.String,Gnsser.SatelliteNumber,System.Int64)">
            <summary>
            设置初始模糊度
            </summary>
            <param name="satelliteType"></param>
            <param name="gpsTime"></param>
            <param name="cycle"></param>
        </member>
        <member name="M:Gnsser.SatAmbiguityManager.SetInitCyle(Gnsser.Domain.EpochSatellite,System.Int64)">
            <summary>
            设置初始模糊度
            </summary>
            <param name="sat"></param>
            <param name="cycle"></param>
        </member>
        <member name="M:Gnsser.SatAmbiguityManager.GetCycle(Gnsser.Domain.EpochSatellite)">
            <summary>
            直接返回，不做检查。
            </summary>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EpochInfoReviseManager">
            <summary>
            历元信息处理器
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.#ctor">
            <summary>
            构造函数
            </summary> 
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Context"></param>
            <param name="PositionOption"></param>
        </member>
        <member name="P:Gnsser.EpochInfoReviseManager.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfoReviseManager.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.FindAllByKey(System.String)">
            <summary>
            查找
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.Complete">
            <summary>
            结束时调用
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetDefaultEpochInfoReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.SatTimeInfoManager)">
            <summary>
            默认的，对原始观测数据源进行处理。这是最全的矫正器，
            包含检核、星历赋予、改正数赋予等。
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <param name="SatTimeInfoManager"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetFirstStepEpochInfoReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,System.Boolean)">
            <summary>
            获取初步的历元信息矫正器，包含观测值教研、星历赋予、周跳探测与标记等。
            在分开的历元信息校验处理中，本方法应该在第一次执行。
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <param name="withCycleSlip"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetRangeOnlyEpochInfoReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            获取伪距校准器。包含星历 设置、
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetDefaultCycleSlipDetectReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            获取默认的周跳探测标记器。
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetBufferedReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.SatTimeInfoManager)">
            <summary>
            逆序探测与区段删除
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <param name="SatTimeInfoManager"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetProducingReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.SatTimeInfoManager)">
            <summary>
            改正数,在即将执行 Producing 时触发。
            包括周跳逆序探测，平滑伪距
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <param name="SatTimeInfoManager"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.GetCorrectionRevisers(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
             <summary>
            模型改正
             </summary>
             <param name="Context"></param>
             <param name="Option"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.BuildObsCorrector(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            观测值改正数设值。观测值改正直接添加到观测值上。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.BuildModelCorrector(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            模型改正数对象，改正在估值上。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochInfoReviseManager.SetIonoCorrectionReviser(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,Gnsser.EpochInfoReviseManager)">
            <summary>
            设置电离层改正
            </summary>
            <param name="Context"></param>
            <param name="Option"></param>
            <param name="modelCorrectors"></param>
        </member>
        <member name="T:Gnsser.IonoSourceType">
            <summary>
            电离层改正类型
            </summary>
        </member>
        <member name="F:Gnsser.IonoSourceType.IgsGrid">
            <summary>
            IGS 格网电离层模型
            </summary>
        </member>
        <member name="F:Gnsser.IonoSourceType.CodeSphericalHarmonics">
            <summary>
            CODE 球谐函数模型
            </summary>
        </member>
        <member name="F:Gnsser.IonoSourceType.GNSSerIonoFile">
            <summary>
            GNSSer 电离层文件
            </summary>
        </member>
        <member name="F:Gnsser.IonoSourceType.Klobchar">
            <summary>
            GPS 导航模型
            </summary>
        </member>
        <member name="T:Gnsser.IEphemerisReviser">
            <summary>
            星历处理器,星历改正等。
            </summary>
        </member>
        <member name="T:Gnsser.EpochSatReviser">
            <summary>
            历元数据处理器。对历元信息进行赋值、过滤、检核等。
            </summary>
        </member>
        <member name="M:Gnsser.EpochSatReviser.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.EpochInfoReviser">
            <summary>
            历元数据处理器。对历元信息进行赋值、过滤、检核等。
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReviser.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.BufferedEpochInfoProcessor">
            <summary>
            历元数据处理器。对历元信息进行赋值、过滤、检核等。
            </summary>
        </member>
        <member name="M:Gnsser.BufferedEpochInfoProcessor.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="T:Gnsser.IEpochSatReviser">
            <summary>
            历元卫星数据处理器。
            </summary>
        </member>
        <member name="T:Gnsser.IEpochInfoReviser">
            <summary>
            历元数据处理器。
            </summary>
        </member>
        <member name="T:Gnsser.IBufferedEpochInfoReviser">
            <summary>
            缓存历元处理器。
            </summary>
        </member>
        <member name="T:Gnsser.BaseLineObsDataAnalyst">
            <summary>
            观测文件分析者。
            观测数据先分析再处理可以得到更好的结果。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineObsDataAnalyst.#ctor(Gnsser.DataSourceContext,Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.Data.Rinex.ISingleSiteObsStream,Gnsser.GnssProcessOption)">
            <summary>
            观测文件分析者，构造函数
            </summary>
        </member>
        <member name="T:Gnsser.IObsDataAnalyst">
            <summary>
             观测数据分析专家
            </summary>
        </member>
        <member name="P:Gnsser.IObsDataAnalyst.SatCycleSlipMaker">
            <summary>
            卫星周跳时段标记。
            </summary>
        </member>
        <member name="P:Gnsser.IObsDataAnalyst.SatelliteSelector">
            <summary>
            卫星选择器。
            </summary>
        </member>
        <member name="P:Gnsser.IObsDataAnalyst.SatVisibleMaker">
            <summary>
            卫星可见性时段标记。
            </summary>
        </member>
        <member name="T:Gnsser.BaseObsDataAnalyst">
            <summary>
            观测文件分析者
            </summary>
        </member>
        <member name="M:Gnsser.BaseObsDataAnalyst.#ctor">
            <summary>
            观测文件分析者，构造函数
            </summary>
        </member>
        <member name="P:Gnsser.BaseObsDataAnalyst.SatelliteSelector">
            <summary>
            卫星选择器。
            </summary>
        </member>
        <member name="P:Gnsser.BaseObsDataAnalyst.SatVisibleMaker">
            <summary>
            卫星可见性时段标记。
            </summary>
        </member>
        <member name="P:Gnsser.BaseObsDataAnalyst.SatCycleSlipMaker">
            <summary>
            卫星周跳时段标记。
            </summary>
        </member>
        <member name="T:Gnsser.ObsDataAnalyst">
            <summary>
            观测文件分析者。
            观测数据先分析再处理可以得到更好的结果。
            </summary>
        </member>
        <member name="M:Gnsser.ObsDataAnalyst.#ctor(Gnsser.Data.Rinex.ISingleSiteObsStream,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            观测文件分析者，构造函数
            </summary>
        </member>
        <member name="T:Gnsser.SatelliteSelector">
            <summary>
            卫星时段信息管理器.通常作为一个观测文件的统计信息。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteSelector.#ctor(Gnsser.SatPeriodInfoManager,Gnsser.SatPeriodInfoManager)">
            <summary>
             卫星时段信息管理器，构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteSelector.InitSelector(Geo.Times.Time,Gnsser.SatelliteNumber)">
            <summary>
            初始化
            </summary>
            <param name="from"></param>
            <param name="exceptPrns"></param>
        </member>
        <member name="M:Gnsser.SatelliteSelector.InitSelector(Geo.Times.Time,System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            设置值
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteSelector.GetSortedPrns(Geo.Times.Time)">
            <summary>
            从当前时间选择最优的卫星序列,越往前越优。
            </summary>
            <param name="from">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteSelector.GetSortedSatPeriods(Geo.Times.Time)">
            <summary>
            从当前时间选择最优的卫星序列,越往前越优。
            </summary>
            <param name="from">时间</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SatelliteSelector.SatVisiblePeriodMarker">
            <summary>
            卫星历元标记器。
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteSelector.SatCycleSlipMaker">
            <summary>
            卫星周跳标记器
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteSelector.PeriodSats">
            <summary>
            卫星历元字典。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteSelector.GetSelectedPrn(Geo.Times.Time)">
            <summary>
            选择好的卫星。
            </summary>
            <param name="time">指定时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatPeriod">
            <summary>
            一颗卫星的时段。
            用于排序的，排序为有效日期长度。
            </summary>
        </member>
        <member name="M:Gnsser.SatPeriod.#ctor(Gnsser.SatelliteNumber,Geo.Times.BufferedTimePeriod)">
            <summary>
            构造函数。一颗卫星的时段。
            </summary>
            <param name="Prn">卫星编号</param>
            <param name="TimePeriod">时段</param>
        </member>
        <member name="P:Gnsser.SatPeriod.Prn">
            <summary>
            卫星编号。
            </summary>
        </member>
        <member name="P:Gnsser.SatPeriod.TimePeriod">
            <summary>
            时段
            </summary>
        </member>
        <member name="T:Gnsser.BaseLineSatCycleSlipAnalyst">
            <summary>
            卫星周跳提取处理器，提取到 SatPeriodInfoManager 中。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineSatCycleSlipAnalyst.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="SatelliteTypes">卫星类型</param>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.BaseLineSatCycleSlipAnalyst.RefObsBuilder">
            <summary>
            参考站历元信息构建器
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineSatCycleSlipAnalyst.RovObsBuilder">
            <summary>
            流动站历元信息构建器
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineSatCycleSlipAnalyst.SatPeriodMarker">
            <summary>
            提取结果
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineSatCycleSlipAnalyst.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineSatCycleSlipAnalyst.Revise(Gnsser.Domain.EpochInformation@,Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obsA">观测数据 A</param>
            <param name="obsB">观测数据 B</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaseLineVisibiltyAnalyst">
            <summary>
            基线卫星可见性提取处理器，提取到 SatPeriodInfoManager 中。
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineVisibiltyAnalyst.#ctor(System.Collections.Generic.List{Gnsser.SatelliteType},System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="SatelliteTypes">卫星类型</param>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.BaseLineVisibiltyAnalyst.SatPeriodMarker">
            <summary>
            提取结果
            </summary>
        </member>
        <member name="P:Gnsser.BaseLineVisibiltyAnalyst.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.BaseLineVisibiltyAnalyst.Revise(Gnsser.Domain.EpochInformation@,Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obsA">观测数据 A</param>
            <param name="obsB">观测数据 B</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatAnalyst">
            <summary>
            卫星分析器顶层类。
            </summary>
        </member>
        <member name="M:Gnsser.SatAnalyst.#ctor(System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.SatAnalyst.SatSequentialPeriod">
            <summary>
            卫星时段信息标记。
            </summary>
        </member>
        <member name="T:Gnsser.SmallObsPartDetectAnalyst">
            <summary>
            断续小数据探测分析器。
            </summary>
        </member>
        <member name="M:Gnsser.SmallObsPartDetectAnalyst.#ctor(System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="interval">采样间隔</param>
        </member>
        <member name="M:Gnsser.SmallObsPartDetectAnalyst.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obs">观测数据</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatConsecutiveAnalyst">
            <summary>
            卫星连续性分析器。
            </summary>
        </member>
        <member name="M:Gnsser.SatConsecutiveAnalyst.#ctor(System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="interval">采样间隔</param>
        </member>
        <member name="M:Gnsser.SatConsecutiveAnalyst.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obs">观测数据</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatCycleSlipAnalyst">
            <summary>
            卫星周跳提取处理器，提取到 SatPeriodInfoManager 中。
            </summary>
        </member>
        <member name="M:Gnsser.SatCycleSlipAnalyst.#ctor(System.Collections.Generic.List{Gnsser.SatelliteType},System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="SatelliteTypes">卫星类型</param>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.SatCycleSlipAnalyst.obsBuilder">
            <summary>
            历元信息构建器
            </summary>
        </member>
        <member name="P:Gnsser.SatCycleSlipAnalyst.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.SatCycleSlipAnalyst.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obs">观测数据</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatPeriodInfoManager">
            <summary>
            卫星时段信息标记器.通常作为一个观测文件的统计信息。如周跳统计，卫星可见性等。
            本类主要作为一种存储数据结构，而不管具体的算法。
            </summary>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.#ctor(System.Double)">
            <summary>
            卫星时段信息管理器，构造函数
            </summary> 
        </member>
        <member name="P:Gnsser.SatPeriodInfoManager.Interval">
            <summary>
            时间间隔
            </summary>
        </member>
        <member name="P:Gnsser.SatPeriodInfoManager.TimePeriod">
            <summary>
            管理器的总的有效时段
            </summary>
        </member>
        <member name="P:Gnsser.SatPeriodInfoManager.Prns">
            <summary>
            卫星编号。
            </summary>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.AddTimePeriod(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            添加观测时段.自动根据 间隔 Interval 生成区段
            </summary>
            <param name="prn">卫星</param>
            <param name="GpsTime">时刻，自动根据 间隔 Interval 生成区段</param>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.Contains(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            卫星的指定时刻是否包含
            </summary>
            <param name="satelliteType">卫星</param>
            <param name="Time">时刻</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.AddTimePeriod(Gnsser.SatelliteNumber,Geo.Times.BufferedTimePeriod)">
            <summary>
            添加观测时段
            </summary>
            <param name="satelliteType">卫星</param>
            <param name="period">一个时段</param>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.GetPeriods(Gnsser.SatelliteNumber)">
            <summary>
            返回指定卫星的时段信息。
            </summary>
            <param name="satelliteType">卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.GetSortedSatPeriods(Geo.Times.Time)">
            <summary>
            指定时间中，剩余时段（往未来方向）最长（从大到小）的卫星排序。
            注意：与默认的排序（从小到大）是相反的。
            </summary>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.GetFilteredPeriods(System.Double,System.Boolean)">
            <summary>
            提取长度小于或大于指定参数的时段
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SatPeriodInfoManager.Opposite">
            <summary>
            相反的时段
            </summary>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.ToString">
            <summary>
            获取格式化字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.ToFormatedString">
            <summary>
            获取格式化字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.SaveSatPeriodText(System.String,System.Boolean,System.Double,System.Int32)">
            <summary>
            保存为文本文档。
            </summary>
            <param name="path">保存路径</param>
            <param name="isSortPrn">是否按照卫星编号排序</param>
            <param name="intervalSec">多长时间输出一个符号</param>
            <param name="splitCount">多少字符输入一个头部分隔符号</param>
        </member>
        <member name="M:Gnsser.SatPeriodInfoManager.GetTextChart(System.Boolean,System.Double,System.Int32)">
            <summary>
            绘制文本图形。
            </summary>
            <param name="sys">系统</param>
            <param name="isSortPrn">是否排序</param>
            <param name="intervalSec">多长时间输出一个符号</param>
            <param name="splitCount">多少字符输入一个头部分隔符号</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatConsecutionAnalyst">
            <summary>
            卫星连续性分析器。
            </summary>
        </member>
        <member name="M:Gnsser.SatConsecutionAnalyst.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="MinSequenceCount">历元数量</param>
            <param name="MaxAllowedGap">历元最大间隔数量</param>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.MinSequenceCount">
            <summary>
            最小历元数量，连续数量少于此数量则表示为不连续。
            </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.MaxAllowedGap">
            <summary>
            允许最大的间隔(含)。即缺少了 GapCount 个历元仍然认为是连续的。超过了，则认为是断开的。
            </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatCounters">
            <summary>
            卫星历元记录器
            </summary>
        </member>
        <member name="M:Gnsser.SatConsecutionAnalyst.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obs">观测数据</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatConsecutionAnalyst.SatMarker">
            <summary>
            卫星标记器
            </summary>
        </member>
        <member name="M:Gnsser.SatConsecutionAnalyst.SatMarker.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            构造
            </summary>
            <param name="Prn"></param>
            <param name="StartRecordTime"></param>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.StartBreakingTime">
             <summary>
            断开的起始时间。
             </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.StartRecordTime">
             <summary>
            记录起始时间。
             </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.Mark">
            <summary>
            标记器
            </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.SequenceCount">
            <summary>
            连续的数量
            </summary>
        </member>
        <member name="P:Gnsser.SatConsecutionAnalyst.SatMarker.GapCount">
            <summary>
            已经断开的数量
            </summary>
        </member>
        <member name="T:Gnsser.EpochInfoBuffer">
            <summary>
            历元数据缓存器。
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoBuffer.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.EpochInfoBuffer.BufferSize">
            <summary>
            缓存大小,单位为历元。
            </summary>
        </member>
        <member name="T:Gnsser.SatVisibiltyAnalyst">
            <summary>
            卫星可见性提取处理器，提取到 SatPeriodInfoManager 中。
            </summary>
        </member>
        <member name="M:Gnsser.SatVisibiltyAnalyst.#ctor(System.Collections.Generic.List{Gnsser.SatelliteType},System.Double)">
            <summary>
            构造函数。
            </summary>
            <param name="SatelliteTypes">卫星类型</param>
            <param name="interval">采样间隔</param>
        </member>
        <member name="P:Gnsser.SatVisibiltyAnalyst.SatelliteTypes">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="M:Gnsser.SatVisibiltyAnalyst.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            处理过程
            </summary>
            <param name="obs">观测数据</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatPeriodWeight">
            <summary>
            卫星选择标准。权重越大，越应该为标准星。
            注意：排序是按照从小到大的方法排序的。
            </summary>
        </member>
        <member name="M:Gnsser.SatPeriodWeight.#ctor(Gnsser.SatelliteNumber,Geo.Times.BufferedTimePeriod,System.Int32)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.SatPeriodWeight.CycleSlipCount">
            <summary>
            周跳权重
            </summary>
        </member>
        <member name="P:Gnsser.SatPeriodWeight.TotalWeight">
            <summary>
            总权重，权重越大，越应该为标准星。
            </summary>
        </member>
        <member name="T:Gnsser.BaseSatSelector">
            <summary>
            基准星选择器,根据观测缓存，选择卫星出现可能性大的卫星。
            </summary>
        </member>
        <member name="M:Gnsser.BaseSatSelector.SelectSingle(System.Collections.Generic.List{Gnsser.Domain.EpochInformation},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            选择唯一
            </summary>
            <param name="infos"></param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.BaseSatSelector.Select(System.Collections.Generic.List{Gnsser.Domain.EpochInformation},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            选择卫星，依次返回待选卫星的顺序
            </summary>
            <param name="infos">至少两个历元</param>
            <param name="exceptions"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatMovingDiffer">
            <summary>
            卫星状态差分（速度）。
            </summary>
        </member>
        <member name="M:Gnsser.SatMovingDiffer.#ctor(Gnsser.SatelliteNumber,Geo.Coordinates.Polar,Geo.Coordinates.Polar)">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.SatMovingDiffer.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatMovingDiffer.DifferOfElevation">
            <summary>
            高度角的偏差
            </summary>
        </member>
        <member name="P:Gnsser.SatMovingDiffer.FirstPolar">
            <summary>
            上一历元极坐标
            </summary>
        </member>
        <member name="P:Gnsser.SatMovingDiffer.SecondPolar">
            <summary>
            下一历元极坐标
            </summary>
        </member>
        <member name="M:Gnsser.SatMovingDiffer.CompareTo(Gnsser.SatMovingDiffer)">
            <summary>
            排序，此处简单的排序。应该是综合考虑剩余时间的多少和卫星的稳定性等。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.CorrectionCleaner">
            <summary>
            改正数去掉器。 一般是为了重新赋值。
            </summary>
        </member>
        <member name="M:Gnsser.CorrectionCleaner.#ctor">
            <summary>
            改正数处理器构造函数。
            </summary>
        </member>
        <member name="T:Gnsser.DopplerShiftSetter">
            <summary>
            多普勒频率计算器，采用载波相位进行计算。
            </summary>
        </member>
        <member name="M:Gnsser.DopplerShiftSetter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.DopplerShiftSetter.PreviousTime">
            <summary>
            上一个历元的时间。
            </summary>
        </member>
        <member name="M:Gnsser.DopplerShiftSetter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            矫正
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EpochEphemerisSetter">
            <summary>
            设置卫星星历。
            请在本类前，先执行观测值的有效性检查与过滤。
            在本类后，执行星历检核与过滤。
            为了获得精准的卫星位置，需要精准的接收机时间，即需要计算出接收机钟差。 
            </summary>
        </member>
        <member name="M:Gnsser.EpochEphemerisSetter.#ctor(Gnsser.DataSourceContext,Gnsser.GnssProcessOption)">
            <summary>
            构造函数。设置卫星星历和钟差，请在本类前执行 观测值的有效性检查与过滤。
            
            </summary>
        </member>
        <member name="P:Gnsser.EpochEphemerisSetter.Option">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Gnsser.EpochEphemerisSetter.EphemerisService">
            <summary>
            星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.EpochEphemerisSetter.Context">
            <summary>
            上下文资源
            </summary>
        </member>
        <member name="P:Gnsser.EpochEphemerisSetter.ClockDataSource">
            <summary>
            钟差数据源。
            </summary>
        </member>
        <member name="M:Gnsser.EpochEphemerisSetter.Revise(Gnsser.Domain.EpochInformation@)">
            <summary>
            星历矫正
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EpochEphemerisSetter.ReviseEphemerisOnly(Gnsser.Domain.EpochInformation)">
            <summary>
            只对星历进行矫正，不再赋值
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:Gnsser.ObsCorrectionSetter">
            <summary>
            改正数处理器.
            观测值改正器。直接改正观测值，与模型改正器对应。
            </summary>
        </member>
        <member name="M:Gnsser.ObsCorrectionSetter.#ctor">
            <summary>
            改正数处理器构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.ObsCorrectionSetter.CorrectorChains">
            <summary>
            改正链表列表。
            </summary>
        </member>
        <member name="M:Gnsser.ObsCorrectionSetter.AddCorrectorChain(Geo.Correction.ICorrector)">
            <summary>
            添加一个改正链表。
            注意：添加的类型必须在 Process 中判断并处理，否则添加进来不会起作用的。
            </summary>
            <param name="chain">改正链表</param>
        </member>
        <member name="T:Gnsser.SatClockBiasUpdater">
            <summary>
            钟差改正更新器
            </summary>
        </member>
        <member name="M:Gnsser.SatClockBiasUpdater.#ctor(Gnsser.Data.ClockService)">
            <summary>
            钟差改正更新器构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBiasUpdater.ClockDataSource">
            <summary>
            钟差数据源。
            </summary>
        </member>
        <member name="M:Gnsser.SatClockBiasUpdater.GetRelativeCorrection(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            相对论改正。
            </summary>
            <param name="SatXyz">卫星位置</param>
            <param name="SatSpeed">卫星速度</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EmissionEphemerisRolver">
            <summary>
            信号发射时刻的卫星位置的计算。
            </summary>
        </member>
        <member name="P:Gnsser.EmissionEphemerisRolver.EpochSat">
            <summary>
            测站卫星向量信息
            </summary>
        </member>
        <member name="P:Gnsser.EmissionEphemerisRolver.EphemerisService">
            <summary>
            星历服务
            </summary>
        </member>
        <member name="M:Gnsser.EmissionEphemerisRolver.Get">
            <summary>
            获取最终的产品，如果失败则返回默认对象，通常为null。每次生产都要执行。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EmissionEphemerisRolverWithCoord">
            <summary>
            采用坐标迭代，计算卫星发射时间。
            </summary>
        </member>
        <member name="M:Gnsser.EmissionEphemerisRolverWithCoord.#ctor(Gnsser.Service.IEphemerisService,Gnsser.DataSourceContext,Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数。设置卫星星历，请在本类前执行 观测值的有效性检查与过滤。
            </summary>
        </member>
        <member name="T:Gnsser.EmissionEphemerisRolverWithDopplorSpeed">
            <summary>
            采用多普勒频速度求卫星发射时刻。
            由于当前大多数数据已经取消了多普勒频率观测值，而只能通过载波频率进行差分计算，
            但是卫星第一次出现的时候由于缺乏数据，是不能差分的，因此不可以计算卫星星历，此时返回空!!!!
            </summary>
        </member>
        <member name="M:Gnsser.EmissionEphemerisRolverWithDopplorSpeed.#ctor(Gnsser.Service.IEphemerisService,Gnsser.DataSourceContext,Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数。设置卫星星历，请在本类前执行 观测值的有效性检查与过滤。
            </summary>
        </member>
        <member name="T:Gnsser.EmissionEphemerisRolverWithRange">
            <summary>
            采用伪距和接收机钟面时进行卫星位置计算。
            如果没有伪距，则返回 null。
            </summary>
        </member>
        <member name="M:Gnsser.EmissionEphemerisRolverWithRange.#ctor(Gnsser.Service.IEphemerisService,Gnsser.DataSourceContext,Gnsser.Domain.EpochSatellite)">
            <summary>
            构造函数。设置卫星星历，请在本类前执行 观测值的有效性检查与过滤。
            </summary>
        </member>
        <member name="M:Gnsser.EmissionEphemerisRolverWithRange.Get">
            <summary>
            计算
            </summary>
        </member>
        <member name="T:Gnsser.MeteorologyInfluence">
            <summary>
            大气影响，计算对流层延迟，季节性影响等。采用的角度单位均为弧度（Rad）。
            met object for gps
            substitute Position and Rpos objects
            meteorology  [mi:tiəˈrɔlədʒi] n.气象学
            </summary>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.TroposphereDelay(System.Double,System.Double,System.Double,Geo.Times.Time)">
            <summary>
            对流层模型改正
            </summary>
            <param name="lat_rad"></param>
            <param name="height"></param>
            <param name="verticalAngle_rad"></param>
            <param name="mytime"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.MeteorologyInfluence.Temperature_Celsius">
            <summary>
            temperature in Celsius摄氏温度 [计量]
            </summary>
        </member>
        <member name="P:Gnsser.MeteorologyInfluence.Pressure_Mbar">
            <summary>
            pressure in mbar
            </summary>
        </member>
        <member name="P:Gnsser.MeteorologyInfluence.RelativeHumidity">
            <summary>
            relative humidity 0 to 1 (not percent)
            </summary>
        </member>
        <member name="P:Gnsser.MeteorologyInfluence.DryZenithDelay">
            <summary>
            干分量天顶延迟（m）
            dry atmosphere zenith path delay [m] 
            </summary>
        </member>
        <member name="P:Gnsser.MeteorologyInfluence.WetZenithDelay">
            <summary>
            湿分类延迟（m）
             wet zenith delay [m]
            </summary>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.TropDelay(System.Double,System.Double,System.Double,Geo.Times.Time)">
            <summary>
            compute Tropo delay in meters
            latitude and vert angle input in radians
            ortho height in meters
            </summary>
            <param name="lat_rad"></param>
            <param name="height"></param>
            <param name="verticalAngle_rad"></param>
            <param name="tsec"></param>
            <param name="mytime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.MetSeason(System.Double,System.Double,Geo.Times.Time)">
            <summary>
             seasonal model (TProduct. Herring, MIT)
            Name changed, call modified, adapted for use by Page4, J. Ray (95.07.25)
            height    height of site (meters) above geoid
            lat_rad   latitude of site (radians)
            t      time (weekSeconds-- jul. time, sec) (converted thru Gtime object)
            </summary>
            <param name="oht"></param>
            <param name="glat"></param>
            <param name="tsec"></param>
            <param name="mytime"></param>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.Tropo(System.Double,System.Double,System.Double)">
            <summary>
              compute troposphere delay (saastamoinen with herring mapping) 
            verticalAngle_rad      -- vertical angle (radians)
            lat_rad    -- geodetic latitude (radians)
            height    -- orthometric height of rcvr. (meters)
            </summary>
            <param name="lat_rad"></param>
            <param name="height"></param>
            <param name="verticalAngle_rad"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.Saast(System.Double,System.Double)">
             <summary> 
              compute wet and dry zenith delay using the saastamoinen formula
            * input
            * lat   site latitude       [radians]
            * oht   orthometric height  [m]
            * bp    barometric pressure [millibars]
            * tc    temperature         [centigrade]
            * rh    relative humidity   [0.0 --> 1.0]
            *
            * output
            * dryzen  dry atmosphere zenith path delay [m]
            * wetzen  wet zenith delay [m]
            *
            *  87-02-15, written by:   j. l. davis
            *  91-01-09, mss, standard header.  remove vlbi specific obsCodeode
            *  96-04-11, dgm, combined wet and dry, and deleted derivative stuff
            *  00-05-24, dgm, java conversion 
             </summary>
             <param name="lat"></param>
             <param name="height"></param>
        </member>
        <member name="M:Gnsser.MeteorologyInfluence.Adalap(System.Double,System.Double)">
            <summary>
            compute pressure vs. temperature
            ICAN atmosphere, (eq.176) Handbook of Met. (Berry, Bollay, Beers)
                           (pg. 374)   (1945, McGraw Hill)
            z in meters
            info,p0 in millibars
            </summary>
            <param name="z"></param>
            <param name="p0"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TropoCorrection">
            <summary>
            对流程， 伪距改正数
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.TropoCorrection.NeillMF(System.Int32,System.Double,System.Double,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.TropoCorrection.tropol(System.Double,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.TropoCorrection.tropol1(System.Double,System.Double)" -->
        <member name="M:Gnsser.TropoCorrection.MetSeason(System.Double,System.Double,Geo.Times.Time)">
            <summary>
             seasonal model (TProduct. Herring, MIT)
            Name changed, call modified, adapted for use by Page4, J. Ray (95.07.25)
            height    height of site (meters) above geoid
            lat_rad   latitude of site (radians)
            t      time (weekSeconds-- jul. time, sec) (converted thru Gtime object)
            </summary>
            <param name="oht"></param>
            <param name="glat"></param>
            <param name="tsec"></param>
            <param name="mytime"></param>
        </member>
        <member name="M:Gnsser.TropoCorrection.GetDryTropCorrectValue(Geo.Times.Time,Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
             <summary> 获取湿分量的系数
            对流层延迟，第一个是干分量的延迟量，第二个值是湿分量的映射函数系数
             高精度的对流层改正
             对流层延迟由干、湿分量组成，常用天顶方向的干、湿分量和相应的映射函数表示：detDtrop=detDdry*Mdry(E)+detDwet*Mwet(E)
             采用Saastamoinen模型改正对流层延迟干分量，将湿延迟分量作为未知参数进行估计,计算湿分量的系数
             对流层映射函数采用NMF映射函数
             lat：测站纬度（弧度），h：测站高程(km),P:测站大气压强(mbar)，TProduct:测站温度(k),e：大气中的水汽压(mbar)
             </summary>
             <returns></returns>
        </member>
        <member name="T:Gnsser.PhaseManager">
            <summary>
            接收机和卫星相位维护。
            </summary>
        </member>
        <member name="M:Gnsser.PhaseManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.SatVectorPhase">
            <summary>
            测站卫星相位
            </summary>
        </member>
        <member name="M:Gnsser.SatVectorPhase.#ctor">
            <summary>
             构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SatVectorPhase.PhaseOfReceiver">
            <summary>
            接收机相位
            </summary>
        </member>
        <member name="P:Gnsser.SatVectorPhase.PhaseOfSatellite">
            <summary>
            卫星相位
            </summary>
        </member>
        <member name="P:Gnsser.SatVectorPhase.CorrectionValue">
            <summary>
            改正数
            </summary>
        </member>
        <member name="T:Gnsser.SatElevateAndRangeWeightProvider">
            <summary>
            按照卫星高度和离地距离进行定权。
            </summary>
        </member>
        <member name="M:Gnsser.SatElevateAndRangeWeightProvider.#ctor">
            <summary>
            按照卫星高度和离地距离进行定权，构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.SatElevateAndRangeWeightProvider.GetWeight(Gnsser.Domain.EpochSatellite)">
            <summary>
            获取权值
            </summary>
            <param name="satellite">测站卫星向量对象</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevateAndRangeWeightProvider.GetInverseWeightOfRange(Gnsser.Domain.EpochSatellite)">
            <summary>
            权逆，方差。
            </summary>
            <param name="satellite">测站卫星向量</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatElevateAndRangeWeightProvider.GetStdDev(Gnsser.Domain.EpochSatellite)">
            <summary>
            标准差估值
            </summary>
            <param name="satellite"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatElevateWeightProvider">
            <summary>
            卫星高度角定权
            </summary>
        </member>
        <member name="M:Gnsser.SatElevateWeightProvider.#ctor(Gnsser.GnssProcessOption)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
        </member>
        <member name="P:Gnsser.SatElevateWeightProvider.SystemStdDevFactors">
            <summary>
            不同系统的权值
            </summary>
        </member>
        <member name="P:Gnsser.SatElevateWeightProvider.SatelliteStdDevs">
            <summary>
            不同卫星的权值
            </summary>
        </member>
        <member name="F:Gnsser.SatElevateWeightProvider.a">
            <summary>
            经验值，用于改进高度角模型对低仰角卫星精度较差的不足
            单位：mm
            </summary>
        </member>
        <member name="F:Gnsser.SatElevateWeightProvider.b">
            <summary>
            经验值，用于改进高度角模型对低仰角卫星精度较差的不足
            单位：mm
            </summary>
        </member>
        <member name="M:Gnsser.SatElevateWeightProvider.GetInverseWeightOfRange(Gnsser.Domain.EpochSatellite)">
            <summary>
            观测值精度
            </summary>
            <param name="satellite"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ISatWeightProvider">
            <summary>
            卫星精度方差提供器
            </summary>
        </member>
        <member name="M:Gnsser.ISatWeightProvider.GetInverseWeightOfRange(Gnsser.Domain.EpochSatellite)">
            <summary>
            返回伪距权逆阵，或方差
            </summary>
            <param name="satellite"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Geoid">
            <summary>
             geoid models
             * reference :
             [1] EGM96 The NASA GSFC and NIMA Joint Geopotential Model
             [2] Earth Gravitational Model 2008 (EGM2008)
            </summary>
        </member>
        <member name="M:Gnsser.Geoid.geoidh(Geo.Coordinates.GeoCoord)">
            * close geoid model file ------------------------------------------------------
        </member>
        <member name="T:Gnsser.GmfTropModel">
            <summary>
            Tropospheric model based in the GMF(Global Mapping Function) mapping functions.
            </summary>
        </member>
        <member name="M:Gnsser.GmfTropModel.#ctor">
            <summary>
            Constructor to create a Neill trop model providing the position of the receiver and current time.
            </summary>
            <param name="Rp"> Receiver position. 经纬度高程格式</param>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.GmfTropModel.Correction(Geo.Times.Time,Geo.Coordinates.GeoCoord,Geo.Coordinates.XYZ,System.Double[],System.Double,System.Double@)">
            <summary>
            precise tropospheric model
            </summary>
            <param name="time">历元时刻</param>
            <param name="pos">receiver position {lat, lon, h} (rad, m)</param>
            <param name="azel">azimuth/elevation angle {az, el} (rad)</param>
            <param name="x">receiver position  XYZ (m)，这里应该是梯度向量</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GmfTropModel.tropmodel(Geo.Times.Time,Geo.Coordinates.GeoCoord,System.Double[],System.Double)">
            <summary>
            troposphere model
            compute tropospheric delay by standard atmosphere and saastamionen model
            </summary>
            <param name="time">time</param>
            <param name="pos">receiver position {lat, lon, h} (rad, m)</param>
            <param name="azel">azimuth/elevation angle {az, el} (rad)</param>
            <param name="humi">relative humidity</param>
            <returns>tropospheric delay (m)</returns>
        </member>
        <member name="M:Gnsser.GmfTropModel.tropmapf(Geo.Times.Time,Geo.Coordinates.GeoCoord,System.Double[],System.Double@)">
            <summary>
            troposphere mapping function
            compute tropospheric mapping function by GMF or NMF or......
            </summary>
            <param name="time">time</param>
            <param name="pos">receiver position {lat, lon, h} (rad, m)</param>
            <param name="zael">azimuth/elevation angle {az, el} (rad)</param>
            <param name="mapfw">wet mapping function (null : not output)</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.NeillTropModel">
             <summary>
             Tropospheric model based in the Neill mapping functions.
             
             This model uses the mapping functions developed by A.E. Niell and
             published in Neill, A.E., 1996, 'Global Mapping Functions for the 
             Atmosphere Delay of Radio Wavelengths,' J. Geophys. Res., 101, 
             pp. 3227-3246 (also see IERS TN 32).
             
             The coefficients of the hydrostatic mapping function depend on the
             latitude and height above sea level of the receiver station, and on
             the secondOfWeek of the year. On the other hand, the wet mapping function depends only on latitude.
             
             This mapping is independent from surface meteorology, while having 
             comparable accuracy and precision to those that require such satData.
             This characteristic makes this model very useful, and it is
             implemented in geodetic software such as JPL's Gipsy/OASIS.
             
             A typical way to use this model follows:
            
             @obsCode
               NeillTropModel neillTM;
               neillTM.setReceiverLatitude(lat);
               neillTM.setReceiverHeight(height);
               neillTM.setDayOfYear(doy);
             @endcode
            
             Once all the basic model parameters are set (latitude, height and
             secondOfWeek of year), then we are able to compute the tropospheric correction
             as a function of elevation:
            
             @obsCode
               trop = neillTM.correction(elevation);
             @endcode
            
             @warning The Neill mapping functions are defined for elevation
             angles down to 3 degrees.
             </summary>
        </member>
        <member name="M:Gnsser.NeillTropModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.NeillTropModel.#ctor(System.Double)">
            Constructor to create a Neill trop model providing just the
            height of the receiver above mean sea level. The other
            parameters must be set with the appropriate set methods before
            calling correction methods.
            
            @param ht   Height of the receiver above mean sea level, in
                        meters.
        </member>
        <member name="M:Gnsser.NeillTropModel.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Constructor to create a Neill trop model providing the height of
            the receiver above mean sea level (as defined by ellipsoid model), its latitude and the secondOfWeek of year.
            </summary>
            <param name="ht">大地高 ，单位 米 Height of the receiver above mean sea level, in meters.</param>
            <param name="lat"> 单位 度 Latitude of receiver, in degrees.</param>
            <param name="doy">Day of year.</param>
        </member>
        <member name="M:Gnsser.NeillTropModel.#ctor(Geo.Coordinates.GeoCoord,Geo.Times.Time)">
            <summary>
            Constructor to create a Neill trop model providing the position of the receiver and current time.
            </summary>
            <param name="RX"> Receiver position. 经纬度高程格式</param>
            <param name="time"></param>
        </member>
        <member name="M:Gnsser.NeillTropModel.Correction(System.Double)">
            <summary>
            Compute and return the full tropospheric delay. 
            The receiver height, latitude and Day oy Year must has been set before using the appropriate constructor or the provided methods.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver,in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.NeillTropModel.Dry_Mapping_Function(System.Double)">
            <summary>
            Compute and return the mapping function for dry component of the troposphere.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver, in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.NeillTropModel.Wet_Mapping_Function(System.Double)">
            <summary>
            Compute and return the mapping function for wet component of the troposphere.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver, in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.NeillTropModel.SetWeather">
            <summary>
             This method configure the model to estimate the weather using
            height, latitude and secondOfWeek of year (DOY). It is called
            automatically when setting those parameters.
            </summary>
        </member>
        <member name="M:Gnsser.NeillTropModel.SetReceiverHeight(System.Double)">
            <summary>
            Define the receiver height; this is required before calling correction() or any of the zenith_delay routines.
            </summary>
            <param name="ht"> Height of the receiver above mean sea level,in meters.</param>
        </member>
        <member name="M:Gnsser.NeillTropModel.SetReceiverLatitude(System.Double)">
            <summary>
            Define the receiver latitude; this is required before calling correction() or any of the zenith_delay routines.
            </summary>
            <param name="lat"> Latitude of receiver, in degrees.</param>
        </member>
        <member name="M:Gnsser.NeillTropModel.SetDayOfYear(System.Int32)">
            <summary>
            Set the time when tropospheric correction will be computed for,in days of the year.
            </summary>
            <param name="doy">Day of the year</param>
        </member>
        <member name="M:Gnsser.NeillTropModel.SetDayOfYear(Geo.Times.Time)">
            <summary>
            Set the time when tropospheric correction will be computed for,in days of the year.
            </summary>
            <param name="time">Time object.</param>
        </member>
        <member name="M:Gnsser.NeillTropModel.setAllParameters(Geo.Times.Time,Geo.Coordinates.GeoCoord)">
            <summary>
            Convenient method to set all model parameters in one pass.
            </summary>
            <param name="time">Time object.</param>
            <param name="rxPos">Receiver position object.</param>
        </member>
        <member name="T:Gnsser.SatInfoCaculator">
            <summary>
            卫星信息计算和统计。
            </summary>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetPeriodSatAppearTimes">
            <summary>
            指定时段内，可以看见的卫星。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetPeriodAllSatInfos">
            <summary>
            所有卫星，在时间段中的相对位置信息。
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetPeriodSatInfos(Gnsser.SatelliteNumber)">
            <summary>
            时段单星
            </summary>
            <param name="stationPos"></param>
            <param name="navFilePath"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="spanMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetAllInstantSatInfos(Geo.Times.Time)">
            <summary>
            在指定时刻，所有卫星相对于测站的信息
            </summary>
            <param name="stationPos"></param>
            <param name="navFilePath"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetInstantSatInfo(Gnsser.Service.IEphemerisService,Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取卫星在指定时刻，相对于测站的信息
            </summary>
            <param name="service"></param>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatInfoCaculator.GetPeriodSatAppearCounts">
            <summary>
            卫星在指定时段内出现的数量。要求星历文件卫星数量必须足够。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.VisibilityOfSat">
            <summary>
            卫星在一段时间内的可视性。
            </summary>
        </member>
        <member name="P:Gnsser.VisibilityOfSat.PRN">
            <summary>
            PRN
            </summary>
        </member>
        <member name="P:Gnsser.VisibilityOfSat.VisibleTimes">
            <summary>
            可见性时段
            </summary>
        </member>
        <member name="M:Gnsser.VisibilityOfSat.CompareTo(Gnsser.VisibilityOfSat)">
            <summary>
            比较
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.StationSatInfo">
            <summary>
            卫星相对于测站的信息
            </summary>
        </member>
        <member name="P:Gnsser.StationSatInfo.PRN">
            <summary>
            PRN
            </summary>
        </member>
        <member name="P:Gnsser.StationSatInfo.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Gnsser.StationSatInfo.Distance">
            <summary>
            距离
            </summary>
        </member>
        <member name="T:Gnsser.VMF1TropModel">
            <summary>
            Tropospheric model based in the VMF1 mapping functions.
            </summary>
        </member>
        <member name="M:Gnsser.VMF1TropModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.VMF1TropModel.#ctor(Gnsser.DataSourceContext,System.String,System.Double,System.Double,Geo.Times.Time)">
            <summary>
            Constructor to create a Neill trop model providing the height of
            the receiver above mean sea level (as defined by ellipsoid model), its latitude and the secondOfWeek of year.
            </summary>
            <param name="ht">Height of the receiver above mean sea level, in meters.</param>
            <param name="lat"> Latitude of receiver, in degrees.</param>
            <param name="doy">Day of year.</param>
        </member>
        <member name="M:Gnsser.VMF1TropModel.Correction(System.Double,System.Double@)">
            <summary>
            Compute and return the full tropospheric delay. 
            The receiver height, latitude and Day oy Year must has been set before using the appropriate constructor or the provided methods.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver,in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.VMF1TropModel.Dry_Mapping_Function(System.Double)">
            <summary>
            Compute and return the mapping function for dry component of the troposphere.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver, in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.VMF1TropModel.Wet_Mapping_Function(System.Double)">
            <summary>
            Compute and return the mapping function for wet component of the troposphere.
            </summary>
            <param name="elevation"> Elevation of satellite as seen at receiver, in degrees</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.VMF1TropModel.SetReceiverHeight(System.Double)">
            <summary>
            Define the receiver height; this is required before calling correction() or any of the zenith_delay routines.
            </summary>
            <param name="ht"> Height of the receiver above mean sea level,in meters.</param>
        </member>
        <member name="M:Gnsser.VMF1TropModel.SetReceiverLatitude(System.Double)">
            <summary>
            Define the receiver latitude; this is required before calling correction() or any of the zenith_delay routines.
            </summary>
            <param name="lat"> Latitude of receiver, in degrees.</param>
        </member>
        <member name="M:Gnsser.VMF1TropModel.SetGpsTime(Geo.Times.Time)">
            <summary>
            Set the time when tropospheric correction will be computed for,in days of the year.
            </summary>
            <param name="doy">Day of the year</param>
        </member>
        <member name="T:Gnsser.IEpochObsData">
            <summary>
            历元观测数据
            </summary>
        </member>
        <member name="P:Gnsser.IEpochObsData.ReceiverTime">
            <summary>
            GNSS 时间。
            </summary>
        </member>
        <member name="M:Gnsser.IEpochObsData.Contains(Gnsser.SatelliteNumber)">
            <summary>
            包含
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IEpochObsData.Remove(Gnsser.SatelliteNumber)">
            <summary>
            移除
            </summary>
            <param name="prn"></param>
        </member>
        <member name="T:Gnsser.Excepts.GnsserException">
            <summary>
            Gnsser 顶层异常。
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.GnsserException.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.GnsserException.#ctor(System.String)">
            <summary>
            以信息初始化
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Gnsser.Excepts.GnsserException.#ctor(System.Exception)">
            <summary>
            构造函数。
            </summary>
            <param name="exception">传入异常</param>
        </member>
        <member name="T:Gnsser.Excepts.SatCountException">
            <summary>
            卫星数量不足。
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.SatCountException.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.SatCountException.#ctor(System.String)">
            <summary>
            自定义字符串数量。
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Gnsser.Excepts.SatCountException.#ctor(System.Exception)">
            <summary>
            构造函数。
            </summary>
            <param name="exception">传入异常</param>
        </member>
        <member name="T:Gnsser.Excepts.SynchronizeException">
            <summary>
            Gnsser 顶层异常。
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.SynchronizeException.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.SynchronizeException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Gnsser.Excepts.SynchronizeException.#ctor(System.Exception)">
            <summary>
            构造函数。
            </summary>
            <param name="exception">传入异常</param>
        </member>
        <member name="T:Gnsser.Excepts.TimeException">
            <summary>
            卫星数量不足。
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.TimeException.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Excepts.TimeException.#ctor(System.String)">
            <summary>
            自定义字符串数量。
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Gnsser.Excepts.TimeException.#ctor(System.Exception)">
            <summary>
            构造函数。
            </summary>
            <param name="exception">传入异常</param>
        </member>
        <member name="T:Gnsser.SiteInfo">
            <summary>
            GNSS 测站信息，包括接收机和天线信息。是比较固定的信息，短时间内不会改变。
            </summary>
        </member>
        <member name="M:Gnsser.SiteInfo.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.SiteId">
            <summary>
            自定义测站标识，为 SiteName + "_" + SiteNumber
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.Properties">
            <summary>
            属性排序
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.OrderedProperties">
            <summary>
            属性排序
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.MarkerNumber">
            <summary>
            测站编号
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.AntDeltaXyz">
            <summary>
            天线偏差
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.EstimatedGeoCoord">
            <summary>
            估计值概略坐标
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.ApproxXyz">
            <summary>
            概略坐标.
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.EstimatedXyz">
            <summary>
            估值坐标，如果没有设置，则采用概略坐标。.此属性是为了方便坐标更新使用。
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.EstimatedXyzRms">
            <summary>
            坐标精度指示。用于决定初始坐标是否精确。
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.ApproxGeoCoord">
            <summary>
            概略坐标
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.IsPrecisePosition">
            <summary>
            提供的坐标是否精确。一般在厘米级别以内认为精确。具体还要看实际应用，有的认为米级别就是精确了。
            如果是CORS ，则是提供的精确坐标。
            如果是精确坐标，则不用过多的循环迭代，不用此次更新，只需要求偏差就行了；
            否则需要多次迭代，并采用每次的平差值作为下一次的近似值计算。
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.ReceiverNumber">
            <summary>
            接收机编号
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.ReceiverType">
            <summary>
            接收机类型
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.ReceiverVersion">
            <summary>
            接收机型号
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.AntennaNumber">
            <summary>
            天线编号
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.AntennaType">
            <summary>
            天线类型
            </summary>
        </member>
        <member name="P:Gnsser.SiteInfo.Hen">
            <summary>
            天线坐标偏移
            </summary>
        </member>
        <member name="M:Gnsser.SiteInfo.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteInfo.GetTabTitles">
            <summary>
            表标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteInfo.GetTabValues">
            <summary>
            表内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SiteInfo.Clone">
            <summary>
            克隆
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Frequence">
            <summary>
            频段。 GNSS 波段和频率。
            </summary>
        </member>
        <member name="M:Gnsser.Frequence.#ctor(System.String,System.Double)">
            <summary>
            实例化一个 GNSS 频率。和波段
            </summary>
            <param name="name">名称</param>
            <param name="frequence">频率，单位为10的6次方</param>
        </member>
        <member name="P:Gnsser.Frequence.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.WaveLength">
            <summary>
            波长,单位 米
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.Value">
            <summary>
            频率，单位是 10 的 6 次方。
            </summary>
        </member>
        <member name="M:Gnsser.Frequence.GetDistance(System.Int64)">
            <summary>
            获取整周数对应的距离。
            </summary>
            <param name="cycle"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetCycle(System.Double)">
            <summary>
            获取整周数。取最小整数。
            </summary>
            <param name="distance">距离</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.Equals(System.Object)">
            <summary>
            相等否
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetHashCode">
            <summary>
            啥系数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.ToString">
            <summary>
            字符串表达
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.SatelliteNumber,Gnsser.SatObsDataType,Geo.Times.Time)">
            <summary>
            通过卫星和观测类型获取频率。注意：无电离层组合默认采用L1频率
            </summary>
            <param name="prn"></param>
            <param name="SatObsDataType"></param>
            <param name="time">时间，历元，GLONASS或频分多址需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.SatelliteNumber,Gnsser.FrequenceType,Geo.Times.Time)">
            <summary>
            获取频率
            </summary>
            <param name="prn"></param>
            <param name="frequenceType"></param>
            <param name="time">时间，历元，GLONASS或频分多址需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.SatelliteType,Gnsser.FrequenceType,System.Int32,Geo.Times.Time)">
            <summary>
            获取已知卫星的频率带宽
            </summary>
            <param name="type"></param>
            <param name="freqtType"></param>
            <param name="satNumber">卫星编号，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.SatelliteNumber,System.Int32,Geo.Times.Time)">
            <summary>
            获取已知的频率带宽
            </summary>
            <param name="prn">卫星编号，如果是频分多址则需要指定卫星序号，如Glonass</param>
            <param name="rinexFreqNum">RINEX 频率编号</param>
            <param name="time">时间，历元，GLONASS或频分多址需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceA(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取第一频率，推荐方法
            </summary>
            <param name="prn">卫星编号</param>
            <param name="time">时间，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceB(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取第2频率，推荐方法
            </summary>
            <param name="prn">卫星编号</param>
            <param name="time">时间，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceC(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            获取第3频率，推荐方法
            </summary>
            <param name="prn">卫星编号</param>
            <param name="time">时间，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceA(Gnsser.SatelliteType,System.Int32,Geo.Times.Time)">
            <summary>
            获取系统第二频率
            </summary>
            <param name="type"></param>
            <param name="satNumber">卫星编号，GLONASS需要</param>
            <param name="time">时间，历元，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceB(Gnsser.SatelliteType,System.Int32,Geo.Times.Time)">
            <summary>
            获取系统第一频率
            </summary>
            <param name="type"></param>
            <param name="satNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceC(Gnsser.SatelliteType,System.Int32,Geo.Times.Time)">
            <summary>
            获取系统第3频率
            </summary>
            <param name="type"></param>
            <param name="satNumber"></param>
            <param name="time">时间，历元，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceA(Gnsser.GnssType,System.Int32,Geo.Times.Time)">
            <summary>
            获取系统第二频率
            </summary>
            <param name="type"></param>
            <param name="satNumber"></param>
            <param name="time">时间，历元</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequenceB(Gnsser.GnssType,System.Int32,Geo.Times.Time)">
            <summary>
            获取系统第一频率
            </summary>
            <param name="type"></param>
            <param name="satNumber"></param>
            <param name="time">时间，历元，GLONASS需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.SatelliteType,System.Int32,System.Int32,Geo.Times.Time)">
            <summary>
            获取频率带宽。
            </summary>
            <param name="type"></param>
            <param name="rinexNum"></param>
            <param name="satNumber"></param>
            <param name="time">时间，历元</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetFrequence(Gnsser.GnssType,System.Int32,System.Int32,Geo.Times.Time)">
            <summary>
            获取频率
            </summary>
            <param name="type"></param>
            <param name="rinexNum"></param>
            <param name="satNumber"></param>
            <param name="time">时间，历元，GLONASS或频分多址需要</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Frequence.Default">
            <summary>
            默认采用GPSL1
            </summary>
        </member>
        <member name="M:Gnsser.Frequence.GetWideBand(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            获取宽项
            </summary>
            <param name="A"></param>
            <param name="B"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetNarrowBand(Gnsser.Frequence,Gnsser.Frequence)">
            <summary>
            获取窄项
            </summary>
            <param name="A"></param>
            <param name="B"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetIonoAndDcbOfL1CoeffL1L2(Gnsser.SatelliteType)">
            <summary>
            通过载波作差求取的电离层与硬件延迟的系数。f2^2/(f1^2-f2^2)
            </summary>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetIonoAndDcbOfL2CoeffL1L2(Gnsser.SatelliteType)">
            <summary>
            通过载波作差求取的电离层与硬件延迟的系数。f1^2/(f1^2-f2^2)
            </summary>
            <param name="satelliteType"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Frequence.GpsWideBand">
            <summary>
            GPS 宽项组合
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GpsNarrowBand">
            <summary>
            GPS z窄项组合
            </summary>
        </member>
        <member name="F:Gnsser.Frequence.GpsL1">
            <summary>
            GPS SBAS L1. 1575.42 波长 0.19029
            </summary>
        </member>
        <member name="F:Gnsser.Frequence.GpsL2">
            <summary>
            GPS L2. 1227.60波长0.24421
            </summary>
        </member>
        <member name="F:Gnsser.Frequence.GpsMw">
            <summary>
            GPS MW 频率
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GpsL5">
            <summary>
            GPS SBAS L5
            </summary>
        </member>
        <member name="M:Gnsser.Frequence.GetMwFrequence(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            指定系统MW组合频率
            </summary>
            <param name="prn"></param>
            <param name="time">时间，历元</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetNarrowLaneFrequence(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            指定系统窄巷组合频率
            </summary>
            <param name="prn"></param>
            <param name="time">时间，历元</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetCompositFreqence(System.Double,Gnsser.Frequence,System.Double,Gnsser.Frequence,System.String)">
            <summary>
            两个频率组成新的频率。简单的线性组合
            频率和载波相位都可以直接相加，而距离需要转换。
            </summary>
            <param name="factorA">系数A</param>
            <param name="bandA">频率A</param>
            <param name="factorB">系数B</param>
            <param name="bandB">频率B</param>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Frequence.SbasL1">
            <summary>
            GPS SBAS L1. 1575.42 波长 0.19029
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.SbasL5">
            <summary>
            GPS SBAS L5
            </summary>
        </member>
        <member name="M:Gnsser.Frequence.GetGlonassG1(System.Int32)">
            
             24 R01  1 R02 -4 R03  5 R04  6 R05  1 R06 -4 R07  5 R08  6 GLONASS SLOT / FRQ #
                R09 -2 R10 -7 R11  0 R12 -1 R13 -2 R14 -7 R15  0 R16 -1 GLONASS SLOT / FRQ #
                R17  4 R18 -3 R19  3 R20  2 R21  4 R22 -3 R23  3 R24  2 GLONASS SLOT / FRQ #
            <summary>
            GLONASS G1  
            </summary>
            <param name="k">1-24卫星编号</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Frequence.GetGlonassG2(System.Int32)">
            <summary>
            GLONASS G2  k= -7...+12
            </summary>
            <param name="k">1-24卫星编号</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.Frequence.GlonassG3">
            <summary>
            GLONASS G3
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GalileoE1">
            <summary>
            Galileo E1
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GalileoE5a">
            <summary>
            Galileo E5a
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GalileoE5b">
            <summary>
            Galileo E5b
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GalileoE5">
            <summary>
            Galileo E5 (E5a+E5b)
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.GalileoE6">
            <summary>
            Galileo QZSS E6
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.QzssL6">
            <summary>
            Galileo QZSS E6
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.CompassB1">
            <summary>
            Compass B1
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.CompassB2">
            <summary>
            Compass B2
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.CompassB3">
            <summary>
            Compass B2
            </summary>
        </member>
        <member name="P:Gnsser.Frequence.NavicL5">
            <summary>
            NAVIC L5
            </summary>
        </member>
        <member name="T:Gnsser.FrequenceType">
            <summary>
            载波频率的类型。A,B,C...
            为了方便处理多GNSS系统数据，统一采用A B C 表示系统频率，代表各系统的 L1，L2，L3/L5 的载波频率。
            频率类型与 GNSS 系统无关。
            而不采用 GPSL1，GPSL2 这种方式。
            实际上，可以采用 1， 2，3 这种编码方式，但是具有不可控的缺点,并且C#不支持数字变量。
            </summary>
        </member>
        <member name="T:Gnsser.AddressingType">
            <summary>
            信号寻址方式
            </summary>
        </member>
        <member name="F:Gnsser.AddressingType.CDMA">
            <summary>
            码分多址  Code Division Multiple Address
            </summary>
        </member>
        <member name="F:Gnsser.AddressingType.FDMA">
            <summary>
            频分多址 Frequency Division Multiple Address
            </summary>
        </member>
        <member name="T:Gnsser.GnssSystem">
            <summary>
            GNSS 系统信息, 元数据信息。
            </summary>
        </member>
        <member name="M:Gnsser.GnssSystem.#ctor(System.String)">
            <summary>
            构造一个GNSS系统对象
            </summary>
            <param name="name">GNSS系统名称</param>
        </member>
        <member name="P:Gnsser.GnssSystem.AddressingType">
            <summary>
            寻址方式。GLONASS为频分多址。
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.GnssType">
            <summary>
            系统类型。
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.Ellipsoid">
            <summary>
            参考椭球
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.OriginMjdDay">
            <summary>
            时间起始。
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.ApproxRadius">
            <summary>
            通用卫星（非静止轨道）到测站的大概距离，用于定权做乘法因子。
            </summary>
        </member>
        <member name="M:Gnsser.GnssSystem.GetGnssTypes(System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            通过卫星类型获取GNSS系统类型
            </summary>
            <param name="types">卫星类型（采用RINEX格式描述）</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssSystem.GetGnssType(Gnsser.SatelliteType)">
            <summary>
            通过卫星类型获取GNSS系统类型
            </summary>
            <param name="type">卫星类型（采用RINEX格式描述）</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssSystem.GetSatelliteType(Gnsser.GnssType)">
            <summary>
            获取卫星类型
            </summary>
            <param name="type">GNSS系统类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnssSystem.GetGnssSystem(Gnsser.SatelliteType)">
            <summary>
            通过卫星类型获取GNSS系统实例。
            </summary>
            <param name="type">卫星类型（采用RINEX格式描述）</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.GnssSystem.Gps">
            <summary>
            GPS 导航卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.BeiDou">
            <summary>
            北斗导航卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.Glonass">
            <summary>
            俄罗斯格洛纳斯导航卫星系统。
            </summary>
        </member>
        <member name="P:Gnsser.GnssSystem.Galileo">
            <summary>
            欧洲伽利略导航卫星系统。
            考虑到兰州数据格式按照其ABCD的顺序编排。
            </summary>
        </member>
        <member name="T:Gnsser.GnssType">
            <summary>
            GNSS 系统类型,采用易读的英文单词表示。
            注意区别于 Rinex 格式的 SatelliteType，很多情况下二者可以互相转换。
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.Unkown">
            <summary>
            未知系统
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.GPS">
            <summary>
            GPS
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.BeiDou">
            <summary>
            北斗
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.GLONASS">
            <summary>
            格洛纳斯
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.Galileo">
            <summary>
            伽利略
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.NAVIC">
            <summary>
            IRNSS 印度的 NAVIC
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.IRNSS">
            <summary>
            IRNSS 印度的 NAVIC
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.QZSS">
            <summary>
            QZSS 
            </summary>
        </member>
        <member name="F:Gnsser.GnssType.SBAS">
            <summary>
            SBAS
            </summary>
        </member>
        <member name="T:Gnsser.ObsCodeConvert">
            <summary>
            观测码转换。原始观测码太多太复杂，需要转换为简单的几种类型。
            </summary>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceBand(Gnsser.SatelliteType,System.Int32,System.Int32)">
            <summary>
            获取已知的频率带宽。
            </summary>
            <param name="type">类型</param>
            <param name="index">编号，1、2、3 分别代表各系统的频率如GPS的L1、L2、L5</param>
            <param name="satNumber">卫星编号，GLONASS 系统需要</param>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetRinexFrequenceNumber(Gnsser.SatelliteType,Gnsser.FrequenceType)">
            <summary>
            获取 RINEX 频率编号。
            </summary>
            <param name="satType"></param>
            <param name="frequenceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceType(Gnsser.SatelliteType,System.Int32)">
            <summary>
             根据对应关系获取频率编号，RINEX转换为GNSSer编号。
            </summary>
            <param name="type"></param>
            <param name="rinexNum"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceType(Gnsser.RinexSatFrequency)">
            <summary>
             根据对应关系获取频率编号，RINEX转换为GNSSer编号。
            </summary>
            <param name="rinexSatFrequency"></param> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceType(System.Collections.Generic.Dictionary{Gnsser.FrequenceType,System.Collections.Generic.List{System.Int32}},System.Int32)">
            <summary>
            根据对应关系获取频率编号，RINEX转换为GNSSer编号。
            </summary>
            <param name="dic"></param>
            <param name="rinexNum"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetRinexFreqIndexDic(Gnsser.SatelliteType)">
            <summary>
            计算各频率对应的 RINEX 编号，有的是一对多的关系。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceBand(Gnsser.GnssType,System.Int32,System.Int32,Geo.Times.Time)">
            <summary>
            获取已知的频率带宽。
            </summary>
            <param name="satNumber">卫星编号， GLONASS 频分多址</param>
            <param name="type">类型</param>
            <param name="rinexNum">编号，1、2、3 分别代表各系统的频率如GPS的L1、L2、L5</param>
            <param name="time">时间，历元，GLONASS或频分多址需要</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsCodeConvert.GetFrequenceBand(Gnsser.GnssType,Gnsser.FrequenceType,System.Int32,Geo.Times.Time)">
            <summary>
            获取频率带宽
            </summary>
            <param name="type">系统类型</param>
            <param name="freqType">频率类型</param>
            <param name="satNumber">卫星编号，GLONASS 系统需要</param>
            <param name="time">time，GLONASS 系统需要</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssCodeType">
            <summary>
            GNSSer 内部码类型(CA, P, D, L),一个载波频率分为多个码传输数据，或有多种类型的数据。
            主要用于表征精度信息,与 RINEX 2.0 相容。
            </summary>
        </member>
        <member name="F:Gnsser.GnssCodeType.UnKnown">
            <summary>
            未指定，或未知。
            </summary>
        </member>
        <member name="F:Gnsser.GnssCodeType.CA">
            <summary>
            伪距码，粗捕获码，民用码。
            </summary>
        </member>
        <member name="F:Gnsser.GnssCodeType.P">
            <summary>
            伪距码，军用码，精码
            </summary>
        </member>
        <member name="F:Gnsser.GnssCodeType.D">
            <summary>
            多普勒频率观测值
            </summary>
        </member>
        <member name="F:Gnsser.GnssCodeType.L">
            <summary>
            载波相位观测值
            </summary>
        </member>
        <member name="T:Gnsser.ObservationType">
            <summary>
            RINEX 观测值类型。observation type C、 L、 D、 S
            t :observation type C = pseudorange, L = carrier phase, D = doppler, S = signal    strength)
            </summary>
        </member>
        <member name="F:Gnsser.ObservationType.C">
            <summary>
            = pseudorange
            </summary>
        </member>
        <member name="F:Gnsser.ObservationType.L">
            <summary>
            = carrier phase
            </summary>
        </member>
        <member name="F:Gnsser.ObservationType.D">
            <summary>
            doppler
            </summary>
        </member>
        <member name="F:Gnsser.ObservationType.S">
            <summary>
            signal strength
            </summary>
        </member>
        <member name="T:Gnsser.ObservationTypeHelper">
            <summary>
            帮助算法
            </summary>
        </member>
        <member name="M:Gnsser.ObservationTypeHelper.GetGnssCodeType(Gnsser.ObservationCode)">
            <summary>
            获取GNSS类型
            </summary>
            <param name="obsCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationTypeHelper.RinexCodeToObservationType(System.String)">
            <summary>
            RINEX 转换为观测码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObservationCode">
             The new signal structures for GPS and Galileo make it possible to generate obsCode and phase observations
            based on one or a combination of several channels: Two-channel signals are composed of I and Q components,
            three-channel signals of A, B, and C components. Moreover a wideband tracking of a combined
            E5a + E5b frequency tracking is possible. In order to keep the observation codes short but still allow for a
            detailed characterization of the actual signal generation the length of the codes is increased from dayServices (Version
            1 and 2) to three by adding a signal generation attribute:
            The observation obsCode tna consists of three parts:
            - t : observation type: C = pseudorange, L = carrier phase, D = doppler, S = signal strength)
            - n : band / frequency: 1, 2,…,8
            - a : attribute: tracking mode or channel, e.g., I, Q, etc
            Examples:
            - L1C: C/A obsCode-derived L1 carrier phase (GPS, GLONASS)
            Carrier phase on E2-L1-E1 derived from C channel (Galileo)
            - C2L: L2C pseudorange derived from the L channel (GPS)
            <summary>
            RINEX 2- 3.02 观测值的组合。
            </summary>
        </member>
        <member name="M:Gnsser.ObservationCode.#ctor(System.String)">
            <summary>
            构造函数。创建一个观测组合类型。
            </summary>
            <param name="code">观测值类型</param>  
        </member>
        <member name="M:Gnsser.ObservationCode.#ctor(Gnsser.ObservationType,System.Int32,System.String)">
            <summary>
            构造函数。创建一个观测组合类型。
            </summary>
            <param name="observationType">观测值类型</param>
            <param name="bandOrFrequency">波段或频率</param>
            <param name="attribute">属性</param>
        </member>
        <member name="P:Gnsser.ObservationCode.ObservationType">
            <summary>
            观测值类型。 C、 L、 D、 S
            </summary>
        </member>
        <member name="P:Gnsser.ObservationCode.BandOrFrequency">
            <summary>
            波段或频率
            </summary>
        </member>
        <member name="P:Gnsser.ObservationCode.Attribute">
            <summary>
            attribute，属性。
            </summary>
        </member>
        <member name="F:Gnsser.ObservationCode.DefaultAttributeOfP">
            <summary>
            P码的默认属性标识
            </summary>
        </member>
        <member name="M:Gnsser.ObservationCode.GetRinexCode(System.Double)">
            <summary>
            获取RINEX观测码
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.Equals(System.Object)">
            <summary>
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.GetCodesV3(System.String)">
            <summary>
            V2 转换为 V3 格式，列表。
            </summary>
            <param name="codeV2"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.ToString">
            <summary>
            keyPrev
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.Parse(System.String)">
            <summary>
            解析字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObservationCode.ChagngeCaToP(Gnsser.ObservationCode@)">
            <summary>
            CA 码修改为P码
            </summary>
            <param name="rinexCode"></param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.ObservationCode.Empty">
            <summary>
            空置
            </summary>
        </member>
        <member name="P:Gnsser.ObservationCode.L1C">
            <summary>
            L1C: C/A obsCode-derived L1 carrier phase (GPS, GLONASS)
            </summary>
        </member>
        <member name="P:Gnsser.ObservationCode.C2L">
            <summary>
             C2L: L2C pseudorange derived from the L channel (GPS)
            </summary>
        </member>
        <member name="T:Gnsser.RangeType">
            <summary>
            距离类型，包括载波和伪距类型
            </summary>
        </member>
        <member name="T:Gnsser.FreqCombinationType">
            <summary>
            频率组合类型
            </summary>
        </member>
        <member name="T:Gnsser.SatApproxDataType">
            <summary>
            近似值类型
            </summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.IonoFreeApproxPseudoRange">
            <summary>无电离层伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.IonoFreeApproxPhaseRange">
            <summary>无电离层载波相位距离估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPseudoRangeA">
            <summary>伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPhaseRangeA">
            <summary>载波相位距离估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPseudoRangeB">
            <summary>伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPhaseRangeB">
            <summary>载波相位距离估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPseudoRangeC">
            <summary>伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPhaseRangeC">
            <summary>载波相位距离估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPseudoRangeOfTriFreq">
            <summary>三频伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxDataType.ApproxPhaseRangeOfTriFreq">
            <summary>三频载波相位距离估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxOfTriFreqDataType.ApproxPseudoRangeOfTriFreq">
            <summary>三频伪距估值</summary>
        </member>
        <member name="F:Gnsser.SatApproxOfTriFreqDataType.ApproxPhaseRangeOfTriFreq">
            <summary>三频载波相位距离估值</summary>
        </member>
        <member name="T:Gnsser.SatObsDataType">
            <summary>
            观测方程左边的数据类型,包含组合类型，观测类型。
            </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.AlignedIonoFreePhaseRangeOfTriFreq">
            <summary>对齐的无电离层载波相位组合，由频率A、B、C组成</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.IonoFreeRange">
            <summary>无电离层伪距组合，由频率A、B组成 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.IonoFreePhaseRange">
            <summary>无电离层载波相位组合，由频率A、B组成</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.AlignedIonoFreePhaseRange">
            <summary>对齐的无电离层载波相位组合，由频率A、B组成</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.IonoFreeRangeOfTriFreq">
            <summary>无电离层伪距组合，由频率A、B、C组成 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PseudoRangeA">
            <summary> 频率A的伪距 </summary>      
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseA">
            <summary>  频率A的载波距离，频率观测值乘以波长 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseRangeA">
            <summary> 对齐的频率A的载波距离 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PseudoRangeB">
            <summary>频率B的伪距</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseB">
            <summary>频率B的载波距离，频率观测值乘以波长 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseRangeB">
            <summary> 对齐的频率C的载波距离</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PseudoRangeC">
            <summary> 频率C的伪距</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseC">
            <summary> 频率C的载波距离，频率观测值乘以波长</summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.PhaseRangeC">
            <summary>对齐的频率C的载波距离 </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.MwCombination">
            <summary>
            MW组合
            </summary>
        </member>
        <member name="F:Gnsser.SatObsDataType.LiCombination">
            <summary>
            MW组合
            </summary>
        </member>
        <member name="T:Gnsser.SatObsDataTypeHelper">
            <summary>
            观测类型帮助
            </summary>
        </member>
        <member name="M:Gnsser.SatObsDataTypeHelper.GetFrequenceTypeFromObsDataType(Gnsser.SatObsDataType)">
            <summary>
            从观测类型提取频率类型
            </summary>
            <param name="ObsDataType"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ParamNames">
            <summary>
             平差计算或数据交换过程中的各个变量的名称，原则：简化，短小，易理解。
             注意：重要变量尽量采用常量命名；变量名应易读，字符串应短小易理解；提供注释；
             不同类型变量采用下划线分隔；避免采用逗号、乘号(*)等符号;
             拼接参数必须在原参数后定义。
             Δ 容易被解析成 位 ，此处暂时保留。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.GnssSolverType">
            <summary>
            GnssSolverType
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.GESystTimeDistance">
            <summary>
            GPS和Galileo之间系统时间偏差的距离偏移量
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.GBSystTimeDistance">
            <summary>
            GPS和BD之间系统时间偏差的距离偏移量
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.PhaseALengthSuffix">
             <summary>
            _λ1N 相位1,波长乘以数量
             </summary>
        </member>
        <member name="F:Gnsser.ParamNames.PhaseBLengthSuffix">
            <summary>
            _λ2N 相位2，波长乘以数量
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.PhaseCLengthSuffix">
            <summary>
            _λ2N 相位2，波长乘以数量
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.WaveLengthSuffix">
            <summary>
            _λN 相位
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DoubleDifferAmbiguitySuffix">
            <summary>
            后缀分离符号加上双差模糊度后缀，"_▽ΔNλ”。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DoubleDifferL1AmbiguitySuffix">
            <summary>
            后缀分离符号加上双差模糊度后缀，"_▽ΔNλ1”。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DoubleDifferL2AmbiguitySuffix">
            <summary>
            后缀分离符号加上双差模糊度后缀，"_▽ΔNλ2”。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DifferAmbiguitySuffix">
            <summary>
            后缀分离符号加上单差模糊度后缀，"_ΔNλ”。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.AmbiguitySuffix">
            <summary>
            后缀分离符号加上模糊度后缀，"_Nλ”
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DifferRcvClkErrDistanceSuffix">
            <summary>
            接收机钟差差分（单次）的距离偏移量，"_▽ΔNλ”。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.DxyzClk">
            <summary>
            XYZ坐标偏差和接收机钟差偏差，适用于伪距单点定位。
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.Dxyz">
            <summary>
            XYZ坐标名称
            </summary>
        </member>
        <member name="M:Gnsser.ParamNames.GetDxyz(System.String,System.String,System.String)">
            <summary>
            XYZ获取，具有前后缀
            </summary>
            <param name="prefix"></param>
            <param name="postfix"></param>
            <param name="spliter"></param>
            <returns></returns>
        </member>
        <member name="F:Gnsser.ParamNames.DxyzClkAndV">
            <summary>
            坐标差时间差和速度差名称
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.ClousureError">
            <summary>
            闭合差名称
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.BaseLinePointer">
            <summary>
            基线指示字符  "->" 
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.StdDev">
            <summary>
            单位权方差因子，标准差
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.NarrowLaneBsdCycle">
            <summary>
            窄巷，周
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="F:Gnsser.ParamNames.TimePeriod">
            <summary>
            TimePeriod
            </summary>
        </member>
        <member name="M:Gnsser.ParamNames.IsDxyz(System.String)">
            <summary>
            是否包含Dx,Dy,Dz
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteCounter">
            <summary>
            卫星出现的比率或者次数。 主要用于卫星选择。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteCounter.#ctor">
            <summary>
             卫星出现次数，构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteCounter.Counter">
            <summary>
            统计器
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteCounter.MaxCount">
            <summary>
            获取最大出现次数
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteCounter.MaxPrns">
            <summary>
            获取出现次数最大的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SatelliteCounter.NotMaxPrns">
            <summary>
            获取非最大次数的卫星列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteCounter.Add(Gnsser.SatelliteNumber)">
            <summary>
            统计一个卫星编号。
            </summary>
            <param name="satelliteType"></param>
        </member>
        <member name="M:Gnsser.SatelliteCounter.Add(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            添加列表
            </summary>
            <param name="prns">列表</param>
        </member>
        <member name="M:Gnsser.SatelliteCounter.Add(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Int32})">
            <summary>
            直接添加列表
            </summary>
            <param name="satData">字典</param>
        </member>
        <member name="M:Gnsser.SatelliteCounter.Merge(System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Int32},System.Collections.Generic.Dictionary{Gnsser.SatelliteNumber,System.Int32})">
            <summary>
            合并卫星数量统计器。
            </summary>
            <param name="dicA">字典 A</param>
            <param name="dicB">字典 B</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteCounter.GetAppearCount(System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            统计出现的次数。从 1 开始。
            </summary>
            <param name="prns">卫星编号列表</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteNumber">
                 * 5.1 Satellite Numbers:
            
            Version 2 has been prepared to contain GLONASS or other satellite systems'
            observations. Therefore we have to be able to distinguish the satellites
            of the different systems:  We precede the 2-digit satellite number with coefficient
            system identifier.
            
                    snn                  s:    satellite system identifier
                                               G or blank : GPS
                                               R          : GLONASS
                                               S          : Geostationary signal payload
                                               E          : Galileo                        |
            
                                        nn:    - PRN (GPS, Galileo), slot number (GLONASS) |
                                               - PRN-100 (GEO)
            
                    Note: G is mandatory in mixed GPS/GLONASS/Galileo files                |
            
                                               (blank default modified in April 1997)
                 * 
            <summary>
            卫星编号。采用RINEX方式描述。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteNumber.#ctor(System.Int32,Gnsser.SatelliteType)">
            <summary>
            构造函数
            </summary>
            <param name="prn"></param>
            <param name="type">请显示指定，避免错误</param>
        </member>
        <member name="M:Gnsser.SatelliteNumber.#ctor(Gnsser.SatelliteType,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="prn"></param>
            <param name="type">请显示指定，避免错误</param>
        </member>
        <member name="F:Gnsser.SatelliteNumber.SatelliteType">
            <summary>
            卫星、卫星系统类型。
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteNumber.PRN">
            <summary>
            整数编号。
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteNumber.Default">
            <summary>
            默认编号通常为 U00.
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteNumber.ToString">
            <summary>
            形如 G01 字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.op_Equality(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            相等否
            </summary>
            <param name="lhs">左边</param>
            <param name="rhs">右边</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.op_Inequality(Gnsser.SatelliteNumber,Gnsser.SatelliteNumber)">
            <summary>
            not相等否
            </summary>
            <param name="lhs">左边</param>
            <param name="rhs">右边</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj">待比较目标</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.Equals(Gnsser.SatelliteNumber)">
            <summary>
            相等否
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.CompareTo(Gnsser.SatelliteNumber)">
            <summary>
            首先按照类型排序，其次按照编号排序。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.TryParsePrns(System.String,System.String[])">
            <summary>
            尝试解析卫星编号
            </summary>
            <param name="str"></param>
            <param name="spliter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.TryParse(System.String)">
            <summary>
            1-3个字符。如"G01"," 01","  1","01","1"等。
            如果失败，则返回 U00。
            /// </summary>
            <param name="snn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.TryParseFirst(System.String,System.String[])">
            <summary>
            按照分隔符切割，逐个解析，成功为止。
            </summary>
            <param name="str"></param>
            <param name="spliter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.Parse(System.String)">
            <summary>
            1-3个字符。如"G01"," 01","  1","01","1"等。
            如果失败，则抛出异常。如果返回 U00，则表示解析失败。
            </summary>
            <param name="snn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.ParsePRNs(System.String,System.Int32,System.Int32)">
            <summary>
            解析 PRN 列表字符串。
            默认长度为3，如G01G02G03.
            也可以指定长度为1，则形如1235，会被解析成G01G02……
            </summary>
            <param name="satLine"></param>
            <param name="satNum"></param>
            <param name="prnLen"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.ParsePRNs(System.String)">
            <summary>
            解析紧凑字符串
            </summary>
            <param name="satLine"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.ParsePRNsBySplliter(System.String,System.Char[])">
            <summary>
            解析字符串如，G01,G02
            </summary>
            <param name="satLine"></param>
            <param name="splliter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.Parse(System.String[])">
            <summary>
            解析数组
            </summary>
            <param name="prnList"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.IsPrn(System.String)">
            <summary>
            严格按照 三位数卫星编号判断。
            </summary>
            <param name="satelliteType">待解析字符串</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.AreEqual(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
             两个列表是否相等。
            </summary>
            <param name="prnsA">列表A</param>
            <param name="prnsB">列表B</param>
            <returns></returns>
        </member>
        <member name="P:Gnsser.SatelliteNumber.GpsPrns">
            <summary>
            GPS 卫星编号。 G01-G32
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteNumber.DefaultGpsPrns">
            <summary>
            返回默认32个GPS卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteNumber.DefaultBeidouPrns">
            <summary>
            返回默认35个北斗卫星编号序列
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteNumber.AllPrns">
            <summary>
            所有可能的卫星编号，四大系统
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteNumber.GetAllPrns">
            <summary>
            所有可能的卫星编号，四大系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.GetPrns(Gnsser.SatelliteType,System.Int32,System.Int32)">
            <summary>
            获取一个系统指定的连续的卫星序列，编号默认从1 开始到指定的数字。
            </summary>
            <param name="type"></param>
            <param name="count"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumber.GetSatTypes(System.Collections.Generic.IEnumerable{Gnsser.SatelliteNumber})">
            <summary>
            返回类型
            </summary>
            <param name="prns"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteNumberRatio">
            <summary>
            卫星出现的比率或者次数。 主要用于卫星选择。
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteNumberRatio.PRN">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatelliteNumberRatio.Ratio">
            <summary>
            出现的比率或者次数
            </summary>
        </member>
        <member name="T:Gnsser.SatelliteNumberUtils">
            <summary>
            卫星编号工具类
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.FindDifferentPrns(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber}@,System.Collections.Generic.List{Gnsser.SatelliteNumber}@)">
            <summary>
            如果有不同返回true， 相同则返回false。
            </summary>
            <param name="olds"></param>
            <param name="news"></param>
            <param name="addedPrns"></param>
            <param name="removedPrns"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.IsEqual(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            两个卫星列表是否是相同的大小和顺序
            </summary>
            <param name="prnsA">待比较的卫星编号列表A</param>
            <param name="prnsB">待比较的卫星编号列表B</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.GetDiffers(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            获取两个列表中不同的部分。
            </summary>
            <param name="listA">卫星列表 A </param>
            <param name="listB">卫星列表 B </param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.GetNews(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            获取新出现的新卫星编号。
            </summary>
            <param name="news">卫星列表 A </param>
            <param name="olds">卫星列表 B </param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.GetCommons(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.Collections.Generic.List{Gnsser.SatelliteNumber})">
            <summary>
            获取两个列表中相同的部分，都包含的卫星列表。
            </summary>
            <param name="listA">卫星列表 A </param>
            <param name="listB">卫星列表 B </param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.GetString(System.Collections.Generic.List{Gnsser.SatelliteNumber},System.String)">
            <summary>
            卫星编号转换成字符串
            </summary>
            <param name="listA"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteNumberUtils.ParseString(System.String,System.Char[])">
            <summary>
            解析字符串为卫星编号
            </summary>
            <param name="str"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteTypeHelper">
            <summary>
            帮助工具
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteTypeHelper.SatTypes">
            <summary>
            静态变量，只算一次，节省计算时间。
            </summary>
        </member>
        <member name="M:Gnsser.SatelliteTypeHelper.GetSatelliteTypes">
            <summary>
            获取所有名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatelliteTypeHelper.PareSatType(System.String)">
            <summary>
            解析卫星类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SatelliteType">
            <summary>
            采用Rinex表达方法的卫星类型，GPS、GLONASS、Galileo ……
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.U">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.G">
            <summary>
            G or blank : GPS
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.R">
            <summary>
             GLONASS          : GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.S">
            <summary>
            SBAS payload,          Geosync          : Geostationary signal payload
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.E">
            <summary>
             Galileo          : Galileo      
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.C">
            <summary>
            北斗
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.M">
            <summary>
            Mixed
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.J">
            <summary>
            QZSS 
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.D">
            <summary>
            UserDefined
            </summary>
        </member>
        <member name="F:Gnsser.SatelliteType.I">
            <summary>
            IRNSS 或NAVIC
            </summary>
        </member>
        <member name="T:Gnsser.IonoParam">
            <summary>
            电离层参数
            </summary>
        </member>
        <member name="P:Gnsser.IonoParam.HasValue">
            <summary>
            是否设置了电离层参数。
            </summary>
        </member>
        <member name="T:Gnsser.GnsserProject">
            <summary>
            工程配置文件
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.#ctor(Geo.IO.Config)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ProjectFilePath">
            <summary>
            工程文件路径.由工程名和工程目录自动生成。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ProjectName">
            <summary>
            项目名称
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.Workflow">
            <summary>
            一个项目对应一个工作流，一个工作流由多个操作流文件组成。当前项目的工作流，在同一行存储。
            不可以直接改变它！！
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.SetWorkflowFiles(System.String)">
            <summary>
            设置工作流文件。文件以分号分隔。如 PppParallelTest.gof;CreateProjectTest.gof
            </summary>
            <param name="str"></param>
        </member>
        <member name="P:Gnsser.GnsserProject.SatelliteTypes">
            <summary>
            卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.Session">
            <summary>
            有效时间，会话
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ProjectDirectory">
            <summary>
            项目目录.这是项目的根目录。一个工程中，只有该目录才是绝对路径！！！
            并且该目录一旦切换后，自动采用新路径。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ParamDirectory">
            <summary>
            参数文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ScriptDirectory">
            <summary>
            脚本文件，控制文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.ObservationDirectory">
            <summary>
            原始观测文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.CommonDirectory">
            <summary>
            公共文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.MiddleDirectory">
            <summary>
            中间文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.OutputDirectory">
            <summary>
            输出文件目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserProject.RevisedObsDirectory">
            <summary>
            矫正后（预处理后）文件目录
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.InitialDirectories">
            <summary>
            初始目录
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.CheckOrCreateProjectDirectories">
            <summary>
            检查并创建工程目录。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.GetProjectPath(System.String)">
            <summary>
            返回路径，完全路径。
            </summary>
            <param name="settingName">名称</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.SetProjectPath(System.String,System.String)">
            <summary>
            设置相对于项目文档的路径,相对路径。
            </summary>
            <param name="value"></param>
            <param name="settingName"></param>
        </member>
        <member name="M:Gnsser.GnsserProject.LoadConfig(System.String)">
            <summary>
            加载文件。保存到 GnsserConfig 属性中。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.SaveToFile">
            <summary>
            保存到文件中去
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.SaveToFile(System.String)">
            <summary>
            保存到指定文件中去
            </summary>
        </member>
        <member name="M:Gnsser.GnsserProject.DeleteOperatonFlow(Geo.OperationFlow,System.Boolean)">
            <summary>
            去除操作流
            </summary>
            <param name="operFlow"></param>
            <param name="removeFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.ImportGofFile(System.String)">
            <summary>
            从外部导入，需要复制参数文件。直接保存到工程文件和操作流文件。
            </summary>
            <param name="inportGofPath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.CopyParamFileToCurrentProject(System.String,Geo.OperationFlow)">
            <summary>
            检查参数文件，全部复制到 ParamDirectory 中
            </summary>
            <param name="oldOperFlowPath"></param>
            <param name="operFlow"></param>
        </member>
        <member name="M:Gnsser.GnsserProject.RenameOperationFlow(Geo.OperationFlow,System.String,System.Boolean)">
            <summary>
            修改操作流的名称，并重命名操作流文件。
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:Gnsser.GnsserProject.AddOperationFlow(Geo.OperationFlow)">
            <summary>
            添加到当前工作流,同时保存到文件
            </summary>
            <param name="operFlow"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.GetAbsGofFilePathes">
            <summary>
            获取操作文件。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.IsInProjectDirectory(System.String)">
            <summary>
            是否在脚本目录中
            </summary>
            <param name="absFlowPath"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.GetAbsScriptPath(System.String)">
            <summary>
            获取工作流的绝对路径
            </summary>
            <param name="pathInProject"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.GetAbsScriptPath(System.String[])">
            <summary>
            获取工作流的绝对路径
            </summary>
            <param name="pathInProject"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.GetAbsPath(System.String[])">
            <summary>
            获取绝对路径，如果已经是绝对路径则不做更改。
            </summary>
            <param name="scriptPathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserProject.GetAbsPath(System.String)">
            <summary>
            获取工作流的绝对路径
            </summary>
            <param name="pathInProject"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.CenterSiteBaseLineMangager">
            <summary>
            中心站基线管理器
            </summary>
        </member>
        <member name="M:Gnsser.CenterSiteBaseLineMangager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:Gnsser.ObsSiteFileManager">
            <summary>
            多个观测文件管理器。同步观测文件。
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.#ctor(System.Collections.Generic.IEnumerable{System.String},System.TimeSpan)">
             <summary>
            构造函数
             </summary>
             <param name="obsFilePaths"></param>
             <param name="MinEpochTimeSpan"></param>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.Add(Gnsser.ObsSiteInfo)">
            <summary>
            添加
            </summary>
            <param name="site"></param>
        </member>
        <member name="P:Gnsser.ObsSiteFileManager.MinEpochTimeSpan">
            <summary>
            最小的同步时段,少于则忽略
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteFileManager.SiteNames">
            <summary>
            所有测站的名称
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.#ctor(System.TimeSpan)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.Remove(Gnsser.ObsSiteInfo)">
            <summary>
            移除
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GetSitePathes">
            <summary>
            所有测站的路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GenerateAllTriangularNetName">
            <summary>
            创建所有三角形名称
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GenerateBaseLines(Gnsser.ObsSiteInfo)">
            <summary>
            构建当前与输入测站组合的所有基线
            </summary>
            <param name="newSite"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GenerateObsBaseLines(Gnsser.BaseLineSelectionType,System.String,System.String)">
            <summary>
            获取所有的基线. 这是一个组合问题。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GenerateCenterSiteBaseLineMangager">
            <summary>
            中心站的基线管理器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ObsSiteFileManager.GenerateAllCenteredObsBaseLines(Gnsser.CenterSiteBaseLineMangager)">
            <summary>
            获取所有的基线. 这是一个组合问题。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ObsSiteInfo">
            <summary>
            观测文件信息。一个类，对应一个文件。
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteInfo.#ctor(System.String,System.String)">
            <summary>
            默认构造函数。
            </summary>
            <param name="path"></param>
            <param name="TempSubDirectory"></param>
        </member>
        <member name="M:Gnsser.ObsSiteInfo.#ctor(Gnsser.Data.Rinex.RinexObsFileHeader,System.String)">
            <summary>
            默认构造函数。
            </summary>
            <param name="TempSubDirectory"></param>
            <param name="header"></param>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.TempSubDirectory">
            <summary>
            临时子目录路径
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.TimePeriod">
            <summary>
            时段信息
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.NetPeriod">
            <summary>
            时段网
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.OriginalPath">
            <summary>
            原始路径
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.TempFilePath">
            <summary>
            临时文件路径，当修改了源文件时，启用临时文件。
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.TempDirectory">
            <summary>
            临时目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.FilePath">
            <summary>
            文件路径。优先返回临时路径。
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.Directory">
            <summary>
            所在目录
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.EstimatedSite">
            <summary>
            平差结果
            </summary>
        </member>
        <member name="P:Gnsser.ObsSiteInfo.SiteObsInfo">
            <summary>
            测站观测信息。
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteInfo.CheckOrCopyToTempDirectory">
            <summary>
            检查是否存在临时文件，没有则复制一个
            </summary>
        </member>
        <member name="M:Gnsser.ObsSiteInfo.CopyToTempDirectory(System.Boolean)">
            <summary>
            复制到临时目录
            </summary>
            <param name="isOverrite"></param>
        </member>
        <member name="M:Gnsser.ObsSiteInfo.ToReadableText">
            <summary>
            转换为可读文本
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EstimatedSiteManager">
            <summary>
            测站平差管理器
            </summary>
        </member>
        <member name="M:Gnsser.EstimatedSiteManager.Parse(Geo.ObjectTableStorage)">
            <summary>
            解析
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EstimatedSite">
            <summary>
            平差后的测站坐标
            </summary>
        </member>
        <member name="T:Gnsser.SunMoonPosition">
            <summary>
            天文函数，待重构。
            </summary>
        </member>
        <member name="M:Gnsser.SunMoonPosition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.SunMoonPosition.GetPosition(Geo.Times.Time,Gnsser.Data.ErpItem)">
            <summary>
            Returns the position of Sun ECEF coordinates (meters) at the indicated time.
            </summary>
            <param name="t">the time to look up</param>
            <returns>the position of the Sun at time (as a Triple)</returns>
            @throw InvalidRequest If the request can not be completed for any
            reason, this is thrown. The text may have additional
            information as to why the request failed.
            @warning This method yields an approximate result, given that pole movement 
            is not taken into account, neither precession nor nutation.
        </member>
        <member name="M:Gnsser.SunMoonPosition.eci2ecef(Geo.Times.Time,Gnsser.Data.ErpItem,System.Double[]@,System.Double@)">
            <summary>
            eci to ecef transformation matrix
            compute eci to ecef transformation matrix
            </summary>
            <param name="tutc">time in UTC</param>
            <param name="erpv">erp value (xp, yp, ut1_utc, lod) (rad, rad, s, s/d)</param>
            <param name="U">eci to ecef transformation matrix (3*3)</param>
            <param name="gmst">greenwich mean sidereal time (rad)</param>
        </member>
        <member name="M:Gnsser.SunMoonPosition.sind(System.Double)">
            <summary>
            Sine of argument in degrees
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.cosd(System.Double)">
            <summary>
            Cosine of argument in degrees
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.modulo(System.Double,System.Double)">
            <summary>
            the modulo mod of a number
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.rotate(Geo.Coordinates.XYZ,System.Double,System.Int32)">
            <summary>
            Rotate a 3D vector an specified angel in an axis
            </summary>
            <param name="v"></param>
            <param name="angle">rad</param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.Rz(System.Double)">
            <summary>
            Coordinate rotation matrix
            </summary>
            <param name="t">旋转角度，单位是弧度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.Ry(System.Double)">
            <summary>
            Coordinate rotation matrix
            </summary>
            <param name="t">旋转角度，单位是弧度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.Rx(System.Double)">
            <summary>
            Coordinate rotation matrix
            </summary>
            <param name="t">旋转角度，单位是弧度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.matmul(System.Char[],System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Double,System.Double[]@)">
            <summary>
            multiply matrix
            </summary>
            <param name="tr"></param>
            <param name="n"></param>
            <param name="k"></param>
            <param name="m"></param>
            <param name="alpha"></param>
            <param name="A"></param>
            <param name="B"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.nut_iau1980(System.Double,System.Double[],System.Double@,System.Double@)">
            <summary>
            iau 1980 nutation
            </summary>
            <param name="t"></param>
            <param name="f"></param>
            <param name="dpsi"></param>
            <param name="deps"></param>
        </member>
        <member name="M:Gnsser.SunMoonPosition.ast_args(System.Double,System.Double[]@)">
            <summary>
            astronomical arguments : f={1, 1', F, D, OMG} （rad)
            天文 数据
            </summary>
            <param name="t"></param>
            <param name="f"></param>
        </member>
        <member name="F:Gnsser.SunMoonPosition.TWO_PI">
            GPS value of PI*2
            
        </member>
        <member name="F:Gnsser.SunMoonPosition.AU_CONST">
            Astronomical Unit value (AU), in meters
        </member>
        <member name="F:Gnsser.SunMoonPosition.MeanEarthMoonBary">
            Mean Earth-Moon barycenter (EMB) distance (AU)
        </member>
        <member name="F:Gnsser.SunMoonPosition.MU_SUN">
            Ratio of mass Sun to Earth
        </member>
        <member name="F:Gnsser.SunMoonPosition.MU_MOON">
            Ratio of mass Moon to Earth
        </member>
        <member name="F:Gnsser.SunMoonPosition.EarthGrav">
            Earth gravity acceleration on surface (m/s^2)
        </member>
        <member name="F:Gnsser.SunMoonPosition.DegToRad">
            Degrees to radians
        </member>
        <member name="F:Gnsser.SunMoonPosition.OMGE">
            <summary>
            地球自转常数 (rad/s)
            </summary>
        </member>
        <member name="F:Gnsser.SunMoonPosition.R2D">
            <summary>
            radians to degrees
            </summary>
        </member>
        <member name="F:Gnsser.SunMoonPosition.DAS2R">
            Arc fraction to radians
        </member>
        <member name="F:Gnsser.SunMoonPosition.DS2R">
            Fraction of time to radians
        </member>
        <member name="F:Gnsser.SunMoonPosition.B1950">
            Julian epoch of B1950
        </member>
        <member name="F:Gnsser.SunMoonPosition.ERADAU">
            Earth equatorial radius in AU ( 6378.137 km / 149597870 km)
        </member>
        <member name="M:Gnsser.SunMoonPosition.CIS2CTS(Geo.Coordinates.XYZ,Geo.Times.Time)">
            <summary>
            Function to change from CIS to CTS(ECEF) coordinate system
            (coordinates in meters)
            </summary>
            <param name="posCIS">Coordinates in CIS system (in meters).</param>
            <param name="t">Epoch</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunMoonPosition.UTC2SID(Geo.Times.Time)">
            <summary>
            Function to funcKeyToDouble from UTC to sidereal time
            UTC 到恒心时。
            </summary>
            <param name="t">Epoch</param>
            <returns> sidereal time in hours.</returns>
        </member>
        <member name="T:Gnsser.GnssConst">
            <summary>
            GNSS 常用常量。
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxPrnGPS">
            <summary>
            max satellite PRN number of GPS
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MinPrnGPS">
            <summary>
            min satellite PRN number of GPS
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.NumSatGPS">
            <summary>
            number of GPS satellite
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxPrnGLONASS">
            <summary>
            max satellite PRN number of GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MinPrnGLONASS">
            <summary>
            min satellite PRN number of GLONASS
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.NumSatGLONASS">
            <summary>
            number of GLONASS satellite
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxPrnGalileo">
            <summary>
            max satellite PRN number of Galileo
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MinPrnGalileo">
            <summary>
            min satellite PRN number of Galileo
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.NumSatGalileo">
            <summary>
            number of Galileo satellite
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxPrnCompass">
            <summary>
            max satellite PRN number of Beidou
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MinPrnCompass">
            <summary>
            min satellite PRN number of Beidou
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.NumSatCompass">
            <summary>
            number of Beidou satellite
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxSat">
            <summary>
            max satellite number(目前仅考虑四大系统，其实还有更多，如QZSS SBAS等增强系统
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.RotateVelocityOfEarth">
            <summary>
            地球自转常数 (rad/s)
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.TWO_PI">
            <summary>
            PI*2
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L1_FREQ">
            <summary>
            L1 carrier frequency in Hz.
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L1_WAVELENGTH">
            <summary>
             L1 carrier wavelength in meters.
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L2_FREQ">
            <summary>
            L2 carrier frequency in Hz.
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L2_WAVELENGTH">
            <summary>
             L2 carrier wavelength in meters.
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_BASE_FREQUENCY">
            <summary>
            GPS基础频率
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_FREQUENCY_L1">
            <summary>
            GPS L1的频率 154倍基础频率 = 1.57542e9;
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_FREQUENCY_L2">
            <summary>
            GPS L2的频率 120倍基础频率 = 1.2276e9;
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_FREQUENCY_L5">
            <summary>
            GPS L5的频率 
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_WAVE_LENGTH_L1">
            <summary>
            GPS L1 波长 0.19029367279836488047631742646405
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_WAVE_LENGTH_L2">
            <summary>
            GPS L2 波长 0.24421021342456826327794069729554
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_ANT_WAVE_LENGTH_L1">
            <summary>
            GPS L1 波长的倒数
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.EARTH_ROTATE_SPEED">
            <summary>
            地球自转速度（Rad/s）
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.EARTH_RADIUS_APPROX">
            <summary>
            地球半径估值（米）6371,000
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.LIGHT_SPEED">
            <summary>
            光速
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.NanoPerUnit">
            <summary>
            1米等于多少纳米
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MeterPerNano">
            <summary>
            真空中光在一个纳秒所经过的距离。
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.SquaredL1FreqOfGPS">
            <summary>
            GPS L1频率的平方
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.SquaredL2FreqOfGPS">
            <summary>
            GPS L2频率的平方
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.DcbMultiplierOfGPSL1">
            <summary>
            2.55 无电离层组合下，单频DCB改正，直接与DCB（m）值相乘即可
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.DcbMultiplierOfGPSL2">
            <summary>
             1.55 无电离层组合下，单频DCB改正，直接与DCB（m）值相乘即可
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L1C1_COM_FACTOR">
            <summary>
            GPS 双频 L1载波的C1电离层组合乘法因子
            2.545727780163160154572778016316;
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L1P1_FACTOR">
            <summary>
            GPS 双频 L1载波的C1电离层组合乘法因子
            2.545727780163160154572778016316;
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.GPS_L2P2_COM_FACTOR">
            <summary>
            GPS 双频 L1载波的C1电离层组合乘法因子
            -1.545727780163160154572778016316
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.BD_L1C1_FACTOR">
            <summary>
            北斗 双频 L1载波的C1电离层组合乘法因子
            -2.4871683136169249238472416253327
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.BD_L2P2_FACTOR">
            <summary>
            北斗 双频 L2载波的P2电离层组合乘法因子
            -1.4871683136169249238472416253327
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfCoord">
            <summary>
            (m) used in Q(dynamic model)
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfClockError">
            <summary>
            (m) used in Q(dynamic model) 30
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfCarrierPhase">
            <summary>
            (m) STD of carrier phase(R) 0.02
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfPsedoRange">
            <summary>
             (m) STD of pseudorange(R) 0,2
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfInitialCoord">
            <summary>
            (m) STD of initial parameters(P) 1.0
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfInitialAmbiguity">
            <summary>
            (m) STD of initial ambiguities(P) 1E10
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfInitialClockError">
            <summary>
            (m) STD of initial clock(P) 500
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.StdOfInitialTropo">
            <summary>
             (m) STD of initial tropo(P) 1
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.MaxClockError">
            <summary>
            钟差最大值
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.LightSpeedPerMillisecond">
            <summary>
            OneLightmillisecond
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.SC2RAD">
            <summary>
            semi-circle to radian (IS-GPS)
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_5">
            <summary>
            2^-5
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_6">
            <summary>
             2^-6
            </summary>  
        </member>
        <member name="F:Gnsser.GnssConst.P2_11">
            <summary>
             2^-11
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_15">
            <summary>
             2^-15
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_17">
            <summary>
            2^-17 
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_19">
            <summary>
            2^-19
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_20">
            <summary>
             2^-20
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_21">
            <summary>
             2^-21 
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_23">
            <summary>
             2^-23
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_24">
            <summary>
            2^-24
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_27">
            <summary>
            2^-27
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_29">
            <summary>
            2^-29
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_30">
            <summary>
            2^-30
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_31">
            <summary>
            2^-31
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_32">
            <summary>
            2^-32
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_33">
            <summary>
            2^-33
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_35">
            <summary>
            2^-35
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_38">
            <summary>
             2^-38
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_39">
            <summary>
            2^-39
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_40">
            <summary>
            2^-40
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_43">
            <summary>
            2^-43
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_48">
            <summary>
            2^-48
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_50">
            <summary>
            2^-50
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.P2_55">
            <summary>
            2^-55
            </summary>
        </member>
        <member name="F:Gnsser.GnssConst.CoeOfGPSIono">
             <summary>
            GPS电离层系数 f1^2 / f2^2
             </summary>
        </member>
        <member name="F:Gnsser.GnssConst.CoeOfGalileoIono">
             <summary>
            Galileo电离层系数  f1^2 / f2^2
             </summary>
        </member>
        <member name="F:Gnsser.GnssConst.CoeOfBDIono">
            <summary>
            BD电离层系数 f1^2 / f2^2
            </summary>
        </member>
        <member name="T:Gnsser.Times.GnssTime">
            <summary>
            周秒表示法。 GPS 时间类表示方法。
            </summary>
        </member>
        <member name="M:Gnsser.Times.GnssTime.#ctor(Geo.Times.Calendar,Gnsser.GnssSystem)">
            <summary>
            日历时间转换为GNSS周周秒时间
            </summary>
            <param name="calendar">日历</param>
            <param name="gnssOriginMjdDay">GNSS时间起算点</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Times.GnssTime.#ctor(System.Int32,System.Decimal,Gnsser.GnssSystem)">
            <summary>
            构造函数。周秒。
            </summary>
            <param name="week">周,可以为负数</param>
            <param name="secondsOfWeek">周内秒,自动判断大小，增减week,保证在 [0-604800) 区间</param>
        </member>
        <member name="P:Gnsser.Times.GnssTime.GnssWeek">
            <summary>
            GPS Week
            </summary>
        </member>
        <member name="P:Gnsser.Times.GnssTime.SecondsOfWeek">
            <summary>
            周内秒。
            </summary>
        </member>
        <member name="P:Gnsser.Times.GnssTime.GnssSystem">
            <summary>
            GNSS系统
            </summary>
        </member>
        <member name="P:Gnsser.Times.GnssTime.Calendar">
            <summary>
            返回年月日表示的时间。
            </summary>
        </member>
        <member name="M:Gnsser.Times.GnssTime.Equals(System.Object)">
            <summary>
            是否相等。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Times.GnssTime.GetHashCode">
            <summary>
            哈希数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Times.GnssTime.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Times.GnssTime.CompareTo(Gnsser.Times.GnssTime)">
            <summary>
            比较
            </summary>
            <param name="gnssTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Times.GnssTime.Equals(Gnsser.Times.GnssTime)">
            <summary>
             是否相等。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Times.GpsTkTimeUtil">
            <summary>
            GpsTk 时间算法。核心由 儒略日+日秒+毫秒 组成。
            采用浮点数计算。
            </summary>
        </member>
        <member name="M:Gnsser.Times.GpsTkTimeUtil.GpsTimeMinusSecond(Geo.Times.Time,System.Double)">
            <summary>
            Time - fraction
            </summary>
            <param name="left">Time</param>
            <param name="fraction"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Times.IGnssTime">
            <summary>
            GNSS Time 接口
            </summary>
        </member>
        <member name="P:Gnsser.Times.IGnssTime.Calendar">
            <summary>
            日历
            </summary>
        </member>
        <member name="P:Gnsser.Times.IGnssTime.GnssSystem">
            <summary>
            GNSS 系统
            </summary>
        </member>
        <member name="P:Gnsser.Times.IGnssTime.SecondsOfWeek">
            <summary>
            周内秒
            </summary>
        </member>
        <member name="P:Gnsser.Times.IGnssTime.GnssWeek">
            <summary>
            GNSS 周
            </summary>
        </member>
        <member name="T:Gnsser.ISiteInfo">
            <summary>
            GNSS 测站信息，包括接收机和天线信息。是比较固定的信息，短时间内不会改变。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.SiteId">
            <summary>
            自定义测站标识，为 SiteName + "_" + SiteNumber
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.SiteName">
            <summary>
            测站名称,MarkerName
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.MarkerNumber">
            <summary>
            测站编号
            </summary>
        </member>
        <member name="M:Gnsser.ISiteInfo.SetApproxXyz(Geo.Coordinates.XYZ)">
            <summary>
            采用手动设置初始坐标。此方法是为了避免和区分手动输入造成的错误。
            </summary>
            <param name="xyz"></param>
        </member>
        <member name="P:Gnsser.ISiteInfo.ApproxXyz">
            <summary>
            初始概略坐标,必须要有赋值！设置请用 SetApproxXyz 
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.EstimatedXyz">
            <summary>
            计算估值坐标,必须要有赋值！如果没有初始化则采用概略坐标 ApproxXyz。
            在计算中，估值坐标常常会被更新，以获得更好的精度。可以是本历元内迭代，也可以是时间序列传递。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.EstimatedXyzRms">
            <summary>
            坐标精度指示。用于决定初始坐标是否精确。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.ApproxGeoCoord">
            <summary>
            概略坐标
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.EstimatedGeoCoord">
            <summary>
            概略坐标
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.IsPrecisePosition">
            <summary>
            提供的坐标是否精确。一般在厘米级别以内认为精确。具体还要看实际应用。
            如果是精确坐标，则不用过多的循环迭代，不用此次更新，只需要求偏差就行了；
            否则需要多次迭代，并采用每次的平差值作为下一次的近似值计算。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.ReceiverNumber">
            <summary>
            接收机编号
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.ReceiverType">
            <summary>
            接收机类型
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.ReceiverVersion">
            <summary>
            接收机型号
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.AntennaNumber">
            <summary>
            天线编号
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.AntennaType">
            <summary>
            天线类型
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.Hen">
            <summary>
            天线坐标偏移 天线相位中心与天线参考点 ARP(Antenna Reference Point)
            采用 HEN 坐标描述，与 RINEX 头文件一致。
            计算时需要转换到 NEU。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.Antenna">
            <summary>
            天线对象。需要后继赋值才能使用。
            </summary>
        </member>
        <member name="P:Gnsser.ISiteInfo.AntDeltaXyz">
            <summary>
            天线 XYZ 偏差，对应 RINEXANTENNA_DELTA_XYZ
            </summary>
        </member>
        <member name="T:Gnsser.SatFileOptionManager">
            <summary>
            卫星系统相关文件管理器
            </summary>
        </member>
        <member name="M:Gnsser.SatFileOptionManager.#ctor(System.String)">
             <summary>
            构造函数
             </summary>
        </member>
        <member name="T:Gnsser.SatFileOption">
            <summary>
            卫星系统相关的文件选项
            </summary>
        </member>
        <member name="M:Gnsser.SatFileOption.#ctor(Gnsser.SatelliteType,System.String,System.String)">
            <summary>
            构造函数。输入名称。
            </summary>
            <param name="FilePath">单文件</param>
            <param name="name">名称</param>
            <param name="SatelliteType">系统名称</param>
        </member>
        <member name="M:Gnsser.SatFileOption.#ctor(Gnsser.SatelliteType,System.String[],System.String)">
            <summary>
            构造函数。输入名称。顺序与输出一致。
            </summary>
            <param name="FilePathes">集合文件</param>
            <param name="name">名称</param>
            <param name="SatelliteType">系统名称</param>
        </member>
        <member name="M:Gnsser.SatFileOption.#ctor(Gnsser.SatelliteType,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            构造函数。输入名称。顺序与输出一致。
            </summary>
            <param name="SatelliteType">类型</param>
            <param name="FilePathes">集合文件</param>
            <param name="name">系统名称</param>
        </member>
        <member name="P:Gnsser.SatFileOption.SatelliteType">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="T:Gnsser.IIonoParam">
            <summary>
            电离层参数
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.AlfaA0">
            <summary>
            AlfaA0
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.AlfaA1">
            <summary>
            AlfaA1
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.AlfaA2">
            <summary>
            AlfaA2
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.AlfaA3">
            <summary>
            AlfaA3 
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.BetaB0">
            <summary>
            BetaB0
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.BetaB1">
            <summary>
            BetaB1
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.BetaB2">
            <summary>
            BetaB2 
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.BetaB3">
            <summary>
            BetaB3
            </summary>
        </member>
        <member name="P:Gnsser.IIonoParam.HasValue">
            <summary>
            是否具有电离层参数
            </summary>
        </member>
        <member name="T:Gnsser.ProjectNameBuilder">
             <summary>
            提供一种统一的命名方法，用以区别其他计算项目
             </summary>
        </member>
        <member name="M:Gnsser.ProjectNameBuilder.#ctor(System.String,Geo.Times.Time)">
            <summary>
            构造函数
            </summary>
            <param name="siteName">测站名称</param>
            <param name="ReceivingTime">观测时间</param> 
        </member>
        <member name="M:Gnsser.ProjectNameBuilder.#ctor(System.String,Geo.Times.Time,System.DateTime)">
            <summary>
            构造函数
            </summary>
            <param name="siteName">测站名称</param>
            <param name="ReceivingTime">观测时间</param>
            <param name="SolvingTime">计算时间</param>
        </member>
        <member name="P:Gnsser.ProjectNameBuilder.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="P:Gnsser.ProjectNameBuilder.ReceivingTime">
            <summary>
            观测文件的时间
            </summary>
        </member>
        <member name="P:Gnsser.ProjectNameBuilder.SolvingTime">
            <summary>
            解算时间
            </summary>
        </member>
        <member name="T:Gnsser.Setting">
            <summary>
            项目设置。
            </summary>
        </member>
        <member name="F:Gnsser.Setting.RinexOFileFilter">
            <summary>
            RINEX 观测文件过滤
            </summary>
        </member>
        <member name="F:Gnsser.Setting.RinexClkFileFilter">
            <summary>
            RINEX 钟差文件过滤
            </summary>
        </member>
        <member name="F:Gnsser.Setting.RinexEphFileFilter">
            <summary>
            RINEX 星历文件过滤
            </summary>
        </member>
        <member name="F:Gnsser.Setting.RinexNFileFilter">
            <summary>
            RINEX 星历文件过滤
            </summary>
        </member>
        <member name="F:Gnsser.Setting.CoordFileFilter">
            <summary>
            通用坐标文件
            </summary>
        </member>
        <member name="F:Gnsser.Setting.CoordAndBaseLineFileFilter">
            <summary>
            坐标文件和基线文件
            </summary>
        </member>
        <member name="F:Gnsser.Setting.ValidSatToReceiverDistance">
            地球同步卫星高度约为 36000 km
             <summary>
             卫星到接收机的有效距离范围。1000米到 100,000,000
             </summary>
        </member>
        <member name="F:Gnsser.Setting.ValidReceverGeocentricAltitude">
            <summary>
            接收机有效高度（距离地心距离）。地表下200,000米到地表上1,000,000米。
            </summary>
        </member>
        <member name="F:Gnsser.Setting.IsUpdateEpochInfo">
            <summary>
            是否测试计算信号发射时间。
            </summary>
        </member>
        <member name="F:Gnsser.Setting.SampleStartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="F:Gnsser.Setting.SampleSession">
            <summary>
            示例的会话时段
            </summary>
        </member>
        <member name="P:Gnsser.Setting.GnsserConfig">
            <summary>
            配置文件
            </summary>
        </member>
        <member name="T:Gnsser.GnssUrl">
            <summary>
            GNSS数据在服务器上的地址
            </summary>
        </member>
        <member name="M:Gnsser.GnssUrl.#ctor(System.Int32,System.String)">
            <summary>
            初始化。
            </summary>
            <param name="year">Year 为四位数</param>
            <param name="urlRule">ftp://25.20.220.196/{YEAR}/{DAY_OF_YEAR_3}/{NAME}{DAY_OF_YEAR_3}0.{YEAR_2}d.Z</param>
        </member>
        <member name="M:Gnsser.GnssUrl.GetDayOfYearString(System.Int32)">
            <summary>
            获取3位数字的年积日
            </summary>
            <param name="dayOfYear"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AntennaHeader">
            <summary>
            天线文件头文件。
            Antenna File Header
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.SatelliteSystem">
            <summary>
            卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.Comments">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.PcvType">
            <summary>
            Phase Center Variation（PCV）天线相位中心变化类型。
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.ReferenceAntena">
            <summary>
            Reference antenna type(relative)
            </summary>
        </member>
        <member name="P:Gnsser.AntennaHeader.ReferenceAntenaSerial">
            <summary>
            Reference antenna serial(relative)
            </summary>
        </member>
        <member name="T:Gnsser.AntexLabel">
            <summary>
            This is a class to read and parse antenna satData in Antex file format
            rcvr_ant.tab: Offical IGS naming conventions for GNSS equipment
            antex13.txt: ANTEX format definition
            igs05_wwww.atx: Absolute IGS phase center corrections for satellite and receiver antennas. Field 'wwww'represents GPS week of last file change
            igs05.atx: Link to latest igs05_wwww.atx file
            igs01.atx: Relative IGS phase center corrections for satellite and receiver antennas
            </summary>
        </member>
        <member name="T:Gnsser.FrequencecyAntennaData">
            <summary>
            天线数据。按照频率存储。
            </summary>
        </member>
        <member name="M:Gnsser.FrequencecyAntennaData.#ctor">
            <summary>
            天线数据。按照频率存储。
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.PhaseCenterEccentricities">
            <summary>
            相位中心偏差 PCO
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.NonAzimuthData">
            <summary>
            不依赖方位角的数据，通常为卫星天线
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.AzimuthDependentData">
            <summary>
            依赖方位角的数据. Key 为方位角， Value 是该方位角对应的高度角的值列表。测站天线。
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.PhaseCenterEccentricitiesRms">
            <summary>
            相位中心偏差均方根
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.NonAzimuthDataRms">
            <summary>
            无方位角数据均方根
            </summary>
        </member>
        <member name="P:Gnsser.FrequencecyAntennaData.AzimuthDependentDataRms">
            <summary>
            依赖方位角的均方根
            </summary>
        </member>
        <member name="T:Gnsser.PcvType">
            <summary>
            Phase Center Variation（PCV）天线相位中心变化类型。
            PCV TYPE / REFANT 。
            主要具有绝对和相对两种。
            </summary>
        </member>
        <member name="F:Gnsser.PcvType.Unknown">
            <summary>
            Unknown PCV
            </summary>
        </member>
        <member name="F:Gnsser.PcvType.Absolute">
            <summary>
            Absolute PCV
            </summary>
        </member>
        <member name="F:Gnsser.PcvType.Relative">
            <summary>
             Relative PCV
            </summary>
        </member>
        <member name="T:Gnsser.RinexSatFrequency">
            <summary>
            天线中采用的频率表示方法。G01表示 GPS L1。
            </summary>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.#ctor(Gnsser.SatelliteNumber,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="prn"></param>
            <param name="rinexNum"></param>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.#ctor(Gnsser.SatelliteType,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="SatelliteType">卫星类型</param>
            <param name="CarrierNumber">载波序号</param>
        </member>
        <member name="P:Gnsser.RinexSatFrequency.SatelliteType">
            <summary>
            卫星类型
            </summary>
        </member>
        <member name="P:Gnsser.RinexSatFrequency.RinexCarrierNumber">
            <summary>
            载波序号
            </summary>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.GetFrequence(System.Int32,Geo.Times.Time)">
            <summary>
            对应的频率
            </summary>
            <param name="satNum">卫星编号，如果码分多址则不需要，频分多址则需要，如GLONASS</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.Parse(System.String)">
            <summary>
            解析字符串，如G01，R02。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.Equals(System.Object)">
            <summary>
            是否相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.GetHashCode">
            <summary>
            哈希
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.RinexSatFrequency.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SimpleClockInterpolator">
            <summary>
            钟差插值器。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            </summary>
        </member>
        <member name="M:Gnsser.SimpleClockInterpolator.#ctor(System.Collections.Generic.List{Gnsser.SimpleClockBias},System.Int32,System.Double)">
            <summary>
            以排好序的钟差列表初始化
            </summary>
            <param name="sortedRecords">排好序的钟差列表</param>
            <param name="order">拟合阶数</param>
            <param name="expand">推估时段（秒）</param>
        </member>
        <member name="F:Gnsser.SimpleClockInterpolator.maxDataTime">
            <summary>
            最大输入数据时间。
            </summary>
        </member>
        <member name="F:Gnsser.SimpleClockInterpolator.minDataTime">
            <summary>
            最小的输入数据时间。
            </summary>
        </member>
        <member name="P:Gnsser.SimpleClockInterpolator.MaxAvailableTime">
            <summary>
            支持的最大时间
            </summary>
        </member>
        <member name="P:Gnsser.SimpleClockInterpolator.MinAvailableTime">
            <summary>
            支持的最小时间
            </summary>
        </member>
        <member name="P:Gnsser.SimpleClockInterpolator.Expand">
            <summary>
            推估的秒
            </summary>
        </member>
        <member name="M:Gnsser.SimpleClockInterpolator.IsAvailable(Geo.Times.Time)">
            <summary>
            是否可以进行插值。
            </summary> 
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SimpleClockInterpolator.GetAtomicClock(Geo.Times.Time)">
            <summary>
            获取插值后的 AtomicClock。
            </summary>
            <param name="PRN"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SimpleClockInterpolator.GetAtomicClocks(Geo.Times.Time,Geo.Times.Time,System.Double)">
            <summary>
            获取插值后的 AtomicClock。
            </summary>
            <param name="from">起始时间</param>
            <param name="to">终止时间</param>
            <param name="interval">间隔（秒）</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.ClockInterpolator">
            <summary>
            钟差插值器。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            </summary>
        </member>
        <member name="M:Gnsser.ClockInterpolator.#ctor(System.Collections.Generic.List{Gnsser.Data.Rinex.AtomicClock},System.Int32,System.Double)">
            <summary>
            以排好序的钟差列表初始化
            </summary>
            <param name="sortedRecords">排好序的钟差列表</param>
            <param name="order">拟合阶数</param>
            <param name="expand">推估时段（秒）</param>
        </member>
        <member name="F:Gnsser.ClockInterpolator.maxDataTime">
            <summary>
            最大输入数据时间。
            </summary>
        </member>
        <member name="F:Gnsser.ClockInterpolator.minDataTime">
            <summary>
            最小的输入数据时间。
            </summary>
        </member>
        <member name="P:Gnsser.ClockInterpolator.MaxAvailableTime">
            <summary>
            支持的最大时间
            </summary>
        </member>
        <member name="P:Gnsser.ClockInterpolator.MinAvailableTime">
            <summary>
            支持的最小时间
            </summary>
        </member>
        <member name="P:Gnsser.ClockInterpolator.Expand">
            <summary>
            推估的秒
            </summary>
        </member>
        <member name="M:Gnsser.ClockInterpolator.IsAvailable(Geo.Times.Time)">
            <summary>
            是否可以进行插值。
            </summary> 
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockInterpolator.GetAtomicClock(Geo.Times.Time)">
            <summary>
            获取插值后的 AtomicClock。
            </summary>
            <param name="PRN"></param>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.ClockInterpolator.GetAtomicClocks(Geo.Times.Time,Geo.Times.Time,System.Double)">
            <summary>
            获取插值后的 AtomicClock。
            </summary>
            <param name="from">起始时间</param>
            <param name="to">终止时间</param>
            <param name="interval">间隔（秒）</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.BaselineReader">
             <summary>
            Baseline文件读取
             </summary>
        </member>
        <member name="M:Gnsser.BaselineReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.BaselineReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.BaselineReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.BaselineWriter">
             <summary>
            Baseline写入器
             </summary>
        </member>
        <member name="M:Gnsser.BaselineWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.BaselineWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.BaselineWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.EpochInfoReader">
             <summary>
            EpochInfo文件读取
             </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.EpochInfoReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.EpochInfoReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EpochInfoWriter">
             <summary>
            EpochInfo写入器
             </summary>
        </member>
        <member name="M:Gnsser.EpochInfoWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.EpochInfoWriter.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.EpochInfoWriter.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.ISiteObsInfo">
            <summary>
            测站观测信息
            </summary>
        </member>
        <member name="P:Gnsser.ISiteObsInfo.ObsInfo">
            <summary>
            观测信息
            </summary>
        </member>
        <member name="P:Gnsser.ISiteObsInfo.SiteInfo">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="T:Gnsser.IExtendSiteObsInfo">
            <summary>
            测站观测信息,组合了测站信息和观测信息，并提供了快捷访问的属性，主要用于RINEX观测数据。
            </summary>
        </member>
        <member name="P:Gnsser.IExtendSiteObsInfo.NavFilePath">
            <summary>
            导航文件路径，如果有的话。
            </summary>
        </member>
        <member name="P:Gnsser.IExtendSiteObsInfo.SiteName">
            <summary>
            测站名称
            </summary>
        </member>
        <member name="M:Gnsser.IExtendSiteObsInfo.Remove(Gnsser.SatelliteType)">
            <summary>
            移除卫星系统及其所有的观测码。
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:Gnsser.OceanLoading">
            <summary>
            海洋潮汐。
            This class computes the effect of ocean tides at a given position and epoch.
            This model neglects minor tides and nodal modulations, which may
            lead to errors up to 5 mm (RMS) at high latitutes. For more details,
            please see: http://tai.bipm.org/iers/convupdt/convupdt_c7.html
            </summary>
        </member>
        <member name="M:Gnsser.OceanLoading.#ctor(System.String)">
            Common constructor
            
             @param filename  Name of BLQ file containing ocean tide
                              harmonics satData.
            
             @warning If filename is not given, this class will look for
             a file named "oceanloading.blq" in the current absDirectory.
        </member>
        <member name="P:Gnsser.OceanLoading.BLQDataReader">
            <summary>
            object to read BLQ ocean tides harmonics satData file
            </summary>
        </member>
        <member name="M:Gnsser.OceanLoading.GetOceanLoading(System.String,Geo.Times.Time)">
            Returns the effect of ocean tides loading (meters) at the given
              station and epoch, in the Up-East-North (UEN) reference frame.
            
             @param name  Station name (case is NOT relevant).
             @param time  Epoch to look up
            
             @return a Triple with the ocean tidas loading effect, in meters
             and in the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for any
             reason, this is thrown. The text may have additional information
             about the reason the request failed.
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.OceanLoading.getArg(Geo.Times.Time)" -->
        <!-- Badly formed XML comment ignored for member "T:Gnsser.BLQDataReader" -->
        <member name="M:Gnsser.BLQDataReader.#ctor(System.String)">
            Common constructor. It will always open file for read and will
              load ocean tide harmonics satData in one pass.
            
             @param fn   BLQ satData file to read
            
        </member>
        <member name="M:Gnsser.BLQDataReader.SetData(System.String@,Gnsser.TideData@)">
            Method to store ocean tide harmonics satData in this class'
              satData map
            
             @param stationName String holding station name.
             @param satData        tideData structure holding the harmonics satData
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.BLQDataReader.GetTideHarmonics(System.String)" -->
        <member name="T:Gnsser.SiteInfoReader">
             <summary>
            SiteInfo文件读取
             </summary>
        </member>
        <member name="M:Gnsser.SiteInfoReader.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.SiteInfoReader.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.SiteInfoReader.#ctor(System.String,Geo.IO.Gmetadata)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="M:Gnsser.SiteInfoReader.Parse(System.String[])">
            <summary>
            字符串列表解析为属性
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SiteInfoWriter">
             <summary>
            SiteInfo写入器
             </summary>
        </member>
        <member name="M:Gnsser.SiteInfoWriter.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Gnsser.SiteInfoWriter.#ctor(System.String,System.Text.Encoding,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="metaFilePath"></param>
        </member>
        <member name="M:Gnsser.SiteInfoWriter.#ctor(System.String,Geo.IO.Gmetadata,System.Text.Encoding)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="Gmetadata"></param>
        </member>
        <member name="T:Gnsser.TropAugService">
            <summary>
            对流层服务
            </summary>
        </member>
        <member name="M:Gnsser.TropAugService.#ctor(System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.TropAugService.Name">
            <summary>
            路径
            </summary>
        </member>
        <member name="T:Gnsser.TropAugmentInfoReader">
            <summary>
            对流层服务
            </summary>
        </member>
        <member name="M:Gnsser.TropAugmentInfoReader.#ctor(System.String)">
            <summary>
            对流层服务
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Gnsser.TropAugmentInfoReader.read">
            <summary>
            读取
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TropAugmentValue">
            <summary>
            增强值
            </summary>
        </member>
        <member name="F:Gnsser.TropAugmentValue.time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:Gnsser.TropAugmentValue.zwd">
            <summary>
            对流层天顶湿延迟
            </summary>
        </member>
        <member name="T:Gnsser.MoonPosition">
            This class computes the approximate position of the Moon at 
              the given epoch in the ECEF system. It is limited between 
              March 1st, 1900 and February 28th, 2100.
            
             The class is based in the Meeus algorithms published in Meeus,
             l'Astronomie, June 1984, p348. This is a C++ implementation version 
             of the FORTRAN version originally written by P.TProduct. Wallace, Starlink
             Project. The FORTRAN version of Starlink project was available under 
             the GPL license.
            
             Errors in position (RMS) are:
            
             \ltime Longitude: 3.7 arcsec.
             \ltime Latitude: 2.3 arcsec.
             \ltime Distance: 11 km.
            
             More information may be found in http://starlink.jach.hawaii.edu/
        </member>
        <member name="F:Gnsser.MoonPosition.ELP0">
            Moon's mean longitude
        </member>
        <member name="F:Gnsser.MoonPosition.ELP1">
            Moon's mean longitude
        </member>
        <member name="F:Gnsser.MoonPosition.ELP2">
            Moon's mean longitude
        </member>
        <member name="F:Gnsser.MoonPosition.ELP3">
            Moon's mean longitude
        </member>
        <member name="F:Gnsser.MoonPosition.EM0">
            Sun's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EM1">
            Sun's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EM2">
            Sun's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EM3">
            Sun's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EMP0">
            Moon's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EMP1">
            Moon's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EMP2">
            Moon's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.EMP3">
            Moon's mean anomaly
        </member>
        <member name="F:Gnsser.MoonPosition.D0">
            Moon's mean elongation
        </member>
        <member name="F:Gnsser.MoonPosition.D1">
            Moon's mean elongation
        </member>
        <member name="F:Gnsser.MoonPosition.D2">
            Moon's mean elongation
        </member>
        <member name="F:Gnsser.MoonPosition.D3">
            Moon's mean elongation
        </member>
        <member name="F:Gnsser.MoonPosition.F0">
            Mean distance of the Moon from its ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.F1">
            Mean distance of the Moon from its ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.F2">
            Mean distance of the Moon from its ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.F3">
            Mean distance of the Moon from its ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.OM0">
            Longitude of the Moon's ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.OM1">
            Longitude of the Moon's ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.OM2">
            Longitude of the Moon's ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.OM3">
            Longitude of the Moon's ascending node
        </member>
        <member name="F:Gnsser.MoonPosition.E1">
            Coefficients for (dimensionless) E factor
        </member>
        <member name="F:Gnsser.MoonPosition.E2">
            Coefficients for (dimensionless) E factor
        </member>
        <member name="F:Gnsser.MoonPosition.PAC">
            Coefficients for periodic variations, etc
        </member>
        <member name="F:Gnsser.MoonPosition.PA0">
            Coefficients for periodic variations, etc
        </member>
        <member name="F:Gnsser.MoonPosition.PA1">
            Coefficients for periodic variations, etc
        </member>
        <member name="M:Gnsser.MoonPosition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.MoonPosition.GetPosition(Geo.Times.Time)">
            <summary>
            Returns the position of Moon ECEF coordinates (meters) at the indicated time.
            </summary>
            <param name="t">the time to look up</param>
            <returns>the position of the Sun at time (as a Triple)</returns>
            @throw InvalidRequest If the request can not be completed for any
            reason, this is thrown. The text may have additional
            information as to why the request failed.
            @warning This method yields an approximate result, given that pole movement 
            is not taken into account, neither precession nor nutation.
        </member>
        <member name="M:Gnsser.MoonPosition.getPositionCIS(Geo.Times.Time)">
            <summary>
            Function to compute Moon position in CIS system (coordinates in meters)
            </summary>
            <param name="t">Epoch</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MoonPosition.getInitialTime">
            <summary>
            Determine the earliest time for which this object can successfully determine the position for the Moon.
            </summary>
            <returns>The initial time</returns>
        </member>
        <member name="M:Gnsser.MoonPosition.getFinalTime">
            <summary>
            etermine the latest time for which this object can  successfully determine the position for the Moon.
            </summary>
            <returns>The final time</returns>
        </member>
        <member name="T:Gnsser.PoleTides">
            This class computes the effect of pole tides, or more properly
              called "rotational deformations due to polar motion", at a given
              position and epoch.
            
              The model used is the one proposed by the "International Earth
              Rotation and Reference Systems Service" (IERS) in its upcomming
              "IERS Conventions" document (Chapter 7), available at:
            
              http://tai.bipm.org/iers/convupdt/convupdt.html
            
              The pole movement parameters x, y for a given epoch may be
              found at:
            
              ftp://hpiers.obspm.fr/iers/eop/eop.others
            
              Maximum displacements because of this effect are:
            
              \ltime Vertical:    2.5 cm
              \ltime Horizontal:  0.7 cm
            
              For additional information you may consult: Wahr, J.M., 1985,
              "Deformation Induced by Polar Motion", Journal of Geophysical
              Research, Vol. 90, No B11, info. 9363-9368.
            
              \warning Please take into account that pole tide equations in
              IERS document use co-latitude instead of latitude.
        </member>
        <member name="M:Gnsser.PoleTides.#ctor(System.Double,System.Double)">
            Common constructor
            
             @param x     Pole displacement x, in arcseconds
             @param y     Pole displacement y, in arcseconds
        </member>
        <member name="P:Gnsser.PoleTides.XDisplacement">
            <summary>
             Pole displacement x, in arcseconds
            </summary>
        </member>
        <member name="P:Gnsser.PoleTides.YDisplacement">
            <summary>
            Pole displacement y, in arcseconds
            </summary>
        </member>
        <member name="M:Gnsser.PoleTides.GetPoleTide(Geo.Times.Time,Geo.Coordinates.XYZ)">
            Returns the effect of pole tides (meters) at the given
              position and epoch, in the Up-East-North (UEN) reference frame.
            
             @param[in]  t Epoch to look up
             @param[in]  info Position of interest
            
             @return a Triple with the pole tide effect, in meters and in
                the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for any
                reason, this is thrown. The text may have additional
                information about the reason the request failed.
            
             @warning In order to use this method, you must have previously
                set the current pole displacement parameters.
            
        </member>
        <member name="M:Gnsser.PoleTides.getPoleTide(Geo.Times.Time,Geo.Coordinates.XYZ,System.Double,System.Double)">
            Returns the effect of pole tides (meters) on the given
              position, in the Up-East-North (UEN) reference frame.
            
             @param[in] info Position of interest
             @param[in] x Pole displacement x, in arcseconds
             @param[in] y Pole displacement y, in arcseconds
            
             @return a Triple with the pole tide effect, in meters and in
                the UEN reference frame.
            
             @throw InvalidRequest If the request can not be completed for
                any reason, this is thrown. The text may have additional
                information about the reason the request failed.
        </member>
        <member name="M:Gnsser.PoleTides.SetXY(System.Double,System.Double)">
            Method to set the pole displacement parameters
            
             @param x     Pole displacement x, in arcseconds
             @param y     Pole displacement y, in arcseconds
            
             @return This same object
        </member>
        <member name="T:Gnsser.SolidTides">
            This class computes the effect of solid Earth tides at a given
             position and epoch.
            
             The model used is the simple quadrupole response model described
             by J.G. Williams (1970).
            
             Given the limitations of the algorithms used to compute the Sun 
             and Moon positions, this class is limited to the period between 
             March 1st, 1900 and February 28th, 2100.
            
            <summary>
            固体潮
            </summary>
        </member>
        <member name="M:Gnsser.SolidTides.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.SolidTides.GetSolidTide(Geo.Times.Time,Geo.Coordinates.XYZ)">
            <summary>
            Returns the effect of solid Earth tides (meters) at the given
            position and epoch, in the Up-East-North (UEN) reference frame.
            此处采用NEU表示，其中的各个分量相对应。
            </summary>
            <param name="gpsTime">Epoch to look up</param>
            <param name="position">Position of interest</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SunPosition">
            This class computes the approximate position of the Sun at the 
             given epoch in the ECEF system. It yields best results between 
             March 1st 1900 and February 28th 2100.
            
             This is a C++ implementation version based on the FORTRAN version 
             originally written by P.TProduct. Wallace, Starlink Project. The FORTRAN
             version of Starlink project was available under the GPL license.
            
             Errors in position in the period 1950-2050 are:
            
             \ltime Maximum: 13*10^-5 AU (19200 km).
             \ltime RMS: 5*10^-5 AU (7600 km).
            
             More information may be found in http://starlink.jach.hawaii.edu/
        </member>
        <member name="F:Gnsser.SunPosition.TWO_PI">
            GPS value of PI*2
        </member>
        <member name="M:Gnsser.SunPosition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gnsser.SunPosition.GetPosition(Geo.Times.Time)">
            <summary>
            Returns the position of Sun ECEF coordinates (meters) at the indicated time.
            </summary>
            <param name="t">the time to look up</param>
            <returns>the position of the Sun at time (as a Triple)</returns>
            @throw InvalidRequest If the request can not be completed for any
            reason, this is thrown. The text may have additional
            information as to why the request failed.
            @warning This method yields an approximate result, given that pole movement 
            is not taken into account, neither precession nor nutation.
        </member>
        <member name="M:Gnsser.SunPosition.getPositionCIS(Geo.Times.Time)">
            <summary>
            Function to compute Sun position in CIS system (coordinates in meters)
            </summary>
            <param name="t">Epoch</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SunPosition.getInitialTime">
            <summary>
            Determine the earliest time for which this object can successfully determine the position for the Sun.
            </summary>
            <returns>The initial time</returns>
        </member>
        <member name="M:Gnsser.SunPosition.getFinalTime">
            <summary>
            etermine the latest time for which this object can  successfully determine the position for the Sun.
            </summary>
            <returns>The final time</returns>
        </member>
        <member name="T:Gnsser.GnsserConfig">
            <summary>
            Gnsser 设置文件
            </summary>
        </member>
        <member name="M:Gnsser.GnsserConfig.#ctor(Geo.IO.Config)">
            <summary>
            构造函数
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsSkipIonoContent">
            <summary>
            是否忽略电离层文件内容
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.CurrentProject">
            <summary>
            当前工程
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.CurrentProjectPath">
            <summary>
            当前项目路径。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserConfig.OpenAndSetCurrentProject(System.String)">
            <summary>
            根据提供的路径，设置当前工程,并保存到历史记录中。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Gnsser.GnsserConfig.SetAsCurrentProjectAndSaveToFile(Gnsser.GnsserProject)">
            <summary>
            设置为当前工程，根据工程路径，保存工程文件设置，同时保存到历史记录中。
            </summary> 
            <param name="project"></param>
        </member>
        <member name="M:Gnsser.GnsserConfig.UpdateProjectHistoryPath(System.String)">
            <summary>
            更新工程历史记录。最后的始终在第一位。
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Gnsser.GnsserConfig.HistoryProjectPathes">
            <summary>
            历史工程
            </summary>
        </member>
        <member name="M:Gnsser.GnsserConfig.SaveCurrentProject">
            <summary>
            保存到文件。
            </summary>
        </member>
        <member name="M:Gnsser.GnsserConfig.LoadGnsserProject">
            <summary>
            GNSS 工程加载
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.LeapSecond">
            <summary>
            当前时刻 UTC 闰秒次数或秒数。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SatelliteTypes">
            <summary>
            卫星系统
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.ObsPath">
            <summary>
            观测文件，必须的，当前只支持一个文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.NavPath">
            <summary>
            星历文件，非必须的。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.ClkPath">
            <summary>
            星历文件，非必须的。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GnsserFcbFilePath">
            <summary>
            GnsserFcbFilePath
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsDebug">
            <summary>
            程序是否处于调试状态,如果是则直接抛出异常，否则继续执行程序
            </summary>
        </member>
        <member name="F:Gnsser.GnsserConfig.ExeFolder">
            <summary>
            Exe 根目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsOutputResult">
            <summary>
            计算结果是否输出
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsOutputAdjust">
            <summary>
            是否输出平差结果
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsShowResultOnTime">
            <summary>
            计算结果是否实时输出在屏幕
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgnoreCourceError">
            <summary>
            是否忽略或过滤粗差
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.RtkrcvConfig">
            <summary>
            Rtkrcv 配置
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.RtklibPostExe">
            <summary>
            Rtkpost exe文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.RtkrcvExe">
            <summary>
            RtkRvc 执行文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.RtklibPostConfig">
            <summary>
            rtkpost 配置文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.TeqcPath">
            <summary>
            Teqc 执行文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GzipExe">
            <summary>
            Gzip 执行文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.TarExe">
            <summary>
            压缩文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.WgetpExe">
            <summary>
            网络下载
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.Crx2rnx">
            <summary>
            解压缩文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.EnableAutoFindingFile">
            <summary>
            是否启用自动匹配文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.OutputDirectory">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.BaseDataPath">
            <summary>
            基础数据路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.TempDirectory">
            <summary>
            临时目录路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.StationInfoPath">
            <summary>
            测站信息路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.RetryHoursWhenFailedForIgsDownload">
            <summary>
            是否采用唯一数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsUniqueSource">
            <summary>
            是否采用唯一数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IndicatedSourceCode">
            <summary>
            指定的数据源代码
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.Sp3EphMaxBreakingCount">
            <summary>
            精密星历允许的断裂次数
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.PositionReportModel">
            <summary>
            定位产品模板
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductLocalDirectory">
            <summary>
            本地IGS产品路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductLocalDirectoriesString">
            <summary>
            本地IGS产品路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductLocalDirectories">
            <summary>
            本地IGS产品路径集合
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IonoFilePath">
            <summary>
            电离层文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.Nga9DayGPSpredsDirectory">
            <summary>
            NGA 9DayGPSpreds 预报星历目录
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.NavEphemerisUrlModel">
            <summary>
            IgsProductUrlModel  ={UrlDirectory}/{Week}/{SourceName}{Week}{DayOfWeek}.{ProductType}.Z
            导航星历下载路径模板。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductUrlModels">
            <summary>
            以分号分割的IGS数据源模板
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductUrlDirectories">
            <summary>
            以分号分割的IGS数据源模板
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgsProductSource">
            <summary>
            GPS 星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GpsEphemerisSource">
            <summary>
            GPS 星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.BeidouEphemerisSource">
            <summary>
            北斗星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GalieoEphemerisSource">
            <summary>
            伽利略星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GlonassEphemerisSource">
            <summary>
            GLONASS 星历数据源
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.BasePrnFileName">
            <summary>
            基准卫星文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SatElevationPath">
            <summary>
            卫星示例高度角文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsDownloadingSurplurseIgsProducts">
            <summary>
            是否下载多余的IGS产品
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IsUseClk30s">
            <summary>
            是否采用30秒采样率的钟差
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOptFile">
            <summary>
            例子Opt文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SiteFilePath">
            <summary>
            测站文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleSinexFile">
            <summary>
            SINEX  例子路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOFile">
            <summary>
            示例O文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOFileV3A">
            <summary>
            O文件 Rinex V 3.0
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleClkFileV3">
            <summary>
             Clock 文件 Rinex V 3.0
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOFileV3B">
            <summary>
             O文件 B Rinex V 3.0
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleNFileV3">
            <summary>
             N 文件 Rinex V 3.0
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOFileA">
            <summary>
             O文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOTableFile">
            <summary>
             O文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleOFileB">
            <summary>
             O文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleNFile">
            <summary>
             N 文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleSP3File">
            <summary>
             Sp3 文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleErpFile">
            <summary>
             ERP 文件 Rinex 
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SampleClkFile">
            <summary>
             clk 文件 Rinex
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.VMF1Directory">
            <summary>
            VMF1 文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GPT2Directory">
            <summary>
            GPT2File 文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GPT21DegreeDirectory">
            <summary>
            GPT2File 文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.DcbDirectory">
            <summary>
            DCB 文件目录。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GlonassSlotFreqFile">
            <summary>
            GLONASS 频率文件路径。默认。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.AntennaFile">
            <summary>
            天线文件路径。默认。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.AntennaFileIgs14">
            <summary>
            天线文件路径 Igs14。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.AntennaFileIgs08">
            <summary>
            天线文件路径Igs08。
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SatSateFile">
            <summary>
            卫星状态文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SatExcludeFile">
            <summary>
            排除卫星的文件记录地址
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.OceanTideFile">
            <summary>
            海洋潮汐文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.SiteCoordFile">
            <summary>
            测站坐标文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GnsserEpochIonoPath">
            <summary>
            GNSSer 历元电离层文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.PppResultFile">
            <summary>
            PPP定位结果路径，累计保存
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.TempPppResultPath">
            <summary>
            PPP定位结果路径，累计保存
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.ControlIp">
            <summary>
            ServerIp
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.ControlPort">
            <summary>
            ServerPort
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.FtpServerUrl">
            <summary>
            FtpServerUrl
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.ComputeNodeFilePath">
            <summary>
            计算节点路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.TaskFilePath">
            <summary>
            工作文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.GofTaskFilePath">
            <summary>
            工作文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.BlockCommonSite">
            <summary>
            分区公共文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.BlockSite">
            <summary>
            分区文件
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.DopFilePath">
            <summary>
            DOP 文件路径
            </summary>
        </member>
        <member name="P:Gnsser.GnsserConfig.IgnWideLaneFile">
            <summary>
            IGN 宽巷文件
            </summary>
        </member>
        <member name="M:Gnsser.GnsserConfig.GetIgsProductSourceOption(Gnsser.SessionInfo)">
             <summary>
            获取IGS产品数据源选项。
             </summary>
             <param name="sessionInfo"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserConfig.GetIgsProductSourceOption(Geo.Times.BufferedTimePeriod,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            获取IGS星历数据源选项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.GnsserConfig.GetSysBasedIgsProductSourceDic">
            <summary>
            从设置文件中读取星历数据源的配置
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.AbstractGnssStreamBackGroundRunner`3">
            <summary>
            定位后台运行器
            </summary>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="optPath"></param> 
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.#ctor(Gnsser.GnssProcessOption,System.String,System.String)">
            <summary>
            构造函数，观测文件在配置对象中
            </summary>
            <param name="Option"></param> 
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.#ctor(Gnsser.GnssProcessOption,System.String[],System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="oFilePathes"></param>
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.IsOutputResult">
            <summary>
            是否输出结果
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.EpochParamAnalyzer">
            <summary>
            历元参数分析器
            </summary>
        </member>
        <member name="E:Gnsser.AbstractGnssStreamBackGroundRunner`3.Processed">
            <summary>
            数据处理了一个，在Solver的PostRun之后，Complete事件之前发生。
            </summary>
        </member>
        <member name="F:Gnsser.AbstractGnssStreamBackGroundRunner`3.isCancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.IsCancel">
            <summary>
            是否取消
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.PostionReportBuilder">
            <summary>
            报表生成器
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.EphFilePath">
            <summary>
            导航文件路径
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.ClkFilePath">
            <summary>
            钟差文件路径
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.OFilePathes">
            <summary>
            观测文件路径
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.Option">
            <summary>
            定位选项
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.RunningSolvers">
            <summary>
            正在运行的计算器,除了第一个外，计算完毕一个，应该移除一个，以解除内存消耗。 
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.FisrtSolver">
            <summary>
            保留第一个，用于在线查看分析
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.ParallelConfig">
            <summary>
            并行计算选项
            </summary>
        </member>
        <member name="P:Gnsser.AbstractGnssStreamBackGroundRunner`3.TotalRunnerCount">
            <summary>
            所有运行器数量，单站定位为文件数，双差应该减1
            </summary>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Init">
            <summary>
            初始化，需要手动调用。
            </summary>
        </member>
        <member name="E:Gnsser.AbstractGnssStreamBackGroundRunner`3.SolverCreated">
            <summary>
            计算器创建事件
            </summary>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Run">
            <summary>
            异步运行
            </summary>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Solver_ResultProduced(`2,Gnsser.ObsFileProcessStreamer{`1,`2})">
            <summary>
            产生了一个结果
            </summary>
            <param name="result"></param>
            <param name="streamer"></param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.BuildSolverAndRun(System.String[])">
            <summary>
            计算，错误返回false。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Run(`0)">
            <summary>
            异步运行指定文件
            </summary>
            <param name="Solver"></param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.BuildSolver(System.String[])">
            <summary>
            构建并初始化GNSS数据流计算器。
            </summary>
            <param name="inputPathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.OnSolverCreated(`0)">
            <summary>
            创建后
            </summary>
            <param name="Solver"></param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Solver_Completed(System.Object,System.EventArgs)">
            <summary>
            计算完成
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.OnProcessed(`0)">
            <summary>
            处理了一个。
            </summary>
            <param name="solver"></param>
        </member>
        <member name="M:Gnsser.AbstractGnssStreamBackGroundRunner`3.Complete">
            <summary>
            结束
            </summary>
        </member>
        <member name="T:Gnsser.MultiSiteBackGroundRunner">
            <summary>
            GNSS网解后台运行器
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteBackGroundRunner.#ctor(Gnsser.GnssProcessOption,System.String[],System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="oFilePathes"></param>
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="P:Gnsser.MultiSiteBackGroundRunner.TotalRunnerCount">
            <summary>
            计算器总共的数量
            </summary>
        </member>
        <member name="M:Gnsser.MultiSiteBackGroundRunner.BuildSolverAndRun(System.String[])">
            <summary>
            计算，错误返回false。
            </summary>
            <param name="pathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.MultiSiteBackGroundRunner.BuildSolver(System.String[])">
            <summary>
            构建并初始化GNSS数据流计算器。
            </summary>
            <param name="pathes"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.Services.IgsSiteCoordService">
            <summary>
            IGS 测站坐标服务，解析自默认坐标文件
            </summary>
        </member>
        <member name="P:Gnsser.Services.IgsSiteCoordService.Instance">
            <summary>
            IGS 测站坐标服务，解析自默认坐标文件
            </summary>
        </member>
        <member name="P:Gnsser.Services.IgsSiteCoordService.TimePeriod">
            <summary>
            服务时段
            </summary>
        </member>
        <member name="P:Gnsser.Services.IgsSiteCoordService.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Gnsser.Services.IgsSiteCoordService.SiteNames">
            <summary>
            测站信息
            </summary>
        </member>
        <member name="M:Gnsser.Services.IgsSiteCoordService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取坐标
            </summary>
            <param name="name"></param>
            <param name="epoch"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Services.IgsSiteCoordService.Get(System.String)">
            <summary>
            获取坐标
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Services.IgsSiteCoordService.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.TwoSiteBackGroundRunner">
            <summary>
            双差定位后台运行器
            </summary>
        </member>
        <member name="M:Gnsser.TwoSiteBackGroundRunner.#ctor(Gnsser.GnssProcessOption,System.String[],System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="oFilePathes"></param>
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.TwoSiteBackGroundRunner.#ctor(Gnsser.GnssProcessOption,System.String[],System.Collections.Generic.List{Gnsser.GnssBaseLineName},System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="baseLines">已经选择好的基线</param>
            <param name="oFilePathes">已经选择好的基线</param>
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="P:Gnsser.TwoSiteBackGroundRunner.BaseLineNames">
            <summary>
            待计算的基线
            </summary>
        </member>
        <member name="P:Gnsser.TwoSiteBackGroundRunner.TotalRunnerCount">
            <summary>
            计算器总共的数量
            </summary>
        </member>
        <member name="M:Gnsser.TwoSiteBackGroundRunner.BuildSolverAndRun(System.String[])">
            <summary>
            计算，错误返回false。
            </summary>
            <param name="fileNames"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.TwoSiteBackGroundRunner.BuildSolver(System.String[])">
            <summary>
            构建并初始化GNSS数据流计算器。
            </summary>
            <param name="baselines"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SessionInfo">
            <summary>
            会话信息
            </summary>
        </member>
        <member name="M:Gnsser.SessionInfo.#ctor(Geo.Times.Time,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认构造函数
            </summary>
            <param name="SatelliteType">系统类型</param>
            <param name="timePeriod">时段信息</param>
        </member>
        <member name="M:Gnsser.SessionInfo.#ctor(Geo.Times.TimePeriod,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认构造函数
            </summary>
            <param name="SatelliteType">系统类型</param>
            <param name="timePeriod">时段信息</param>
        </member>
        <member name="M:Gnsser.SessionInfo.#ctor(Geo.Times.BufferedTimePeriod,System.Collections.Generic.List{Gnsser.SatelliteType})">
            <summary>
            默认构造函数
            </summary>
            <param name="SatelliteType">系统类型</param>
            <param name="timePeriod">时段信息</param>
        </member>
        <member name="P:Gnsser.SessionInfo.TimePeriod">
            <summary>
            数据源时段信息
            </summary>
        </member>
        <member name="P:Gnsser.SessionInfo.SatelliteTypes">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="M:Gnsser.SessionInfo.Contains(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否包含指定系统和时间。
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GnssDataType">
            <summary>
            GNSS 数据源类型，注意：这只是一个字符串标识，你可以采用任何字符串而非此变量。
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.RinexNav">
            <summary>
            Rinex 到导航文件
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.Observation">
            <summary>
            观测数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.IgsAutoClock">
            <summary>
            钟差数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.IgsAutoEphemeris">
            <summary>
            Ephemeris 星历
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.IndicatedEphemeris">
            <summary>
            Ephemeris 星历
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.OceanLoading">
            <summary>
            海洋潮汐数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.Antenna">
            <summary>
            天线数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.ExcludeSat">
            <summary>
            排除卫星数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.GpsSatState">
            <summary>
            GPS卫星状态数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.DCB">
            <summary>
            DCB硬件延迟数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.Sp3Directory">
            <summary>
            精密星历 SP3 目录。
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.IgsAutoErp">
            <summary>
            地球自转信息数据源
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.VMF1">
            <summary>
            VFM1对流层模型
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.GPT2">
            <summary>
            GPT2对流层模型
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.GPT21Degree">
            <summary>
            GPT2对流层模型 1度分辨率
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.UniverseObject">
            <summary>
            UniverseObject
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.SatState">
            <summary>
            SatState卫星状态
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.SatInfo">
            <summary>
            SatInfo
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.SiteCoord">
            <summary>
            SiteCoord
            </summary>
        </member>
        <member name="F:Gnsser.GnssDataType.StationInfo">
            <summary>
            StationInfo
            </summary>
        </member>
        <member name="T:Gnsser.Ephemeris">
            <summary>
            卫星位置和钟差信息。用户最后需要得到的产品。
            </summary>
        </member>
        <member name="M:Gnsser.Ephemeris.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Gnsser.Ephemeris.#ctor(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            构造函数
            </summary>
            <param name="prn"></param>
            <param name="time"></param>
        </member>
        <member name="P:Gnsser.Ephemeris.XYZ">
            <summary>
            单位米。
            </summary>
        </member>
        <member name="P:Gnsser.Ephemeris.XyzDot">
            <summary>
            (decim/sec)   可能为 null,卫星速度
            </summary>
        </member>
        <member name="P:Gnsser.Ephemeris.Rms">
            <summary>
            精度信息，不指定则为null。 SP3文件中卫星坐标的精度估值sdev,单位是米
            单位米。文件中文毫米，读取时单位转换成了米。
            </summary>
        </member>
        <member name="P:Gnsser.Ephemeris.XyzDotRms">
            <summary>
            SP3文件中卫星速度的精度估值sdev,单位是米
            单位米。文件中文毫米，读取时单位转换成了米。
            </summary>
        </member>
        <member name="P:Gnsser.Ephemeris.RelativeCorrection">
            <summary>
            由于卫星相对运动，钟差的相对论改正，单位为秒。相对论时间？？？
            </summary>
        </member>
        <member name="P:Gnsser.Ephemeris.GeoCoord">
            <summary>
            卫星大地坐标。以XYZ为尊，自动设置本坐标。
            </summary>
        </member>
        <member name="M:Gnsser.Ephemeris.CompareTo(Gnsser.IEphemeris)">
            <summary>
            用于比较排序。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Ephemeris.op_Addition(Gnsser.Ephemeris,Gnsser.Ephemeris)">
            <summary>
            星历相加
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Ephemeris.op_Subtraction(Gnsser.Ephemeris,Gnsser.Ephemeris)">
            <summary>
            星历相减
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Ephemeris.ToString">
            <summary>
            显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Ephemeris.GetTabTitles">
            <summary>
            已制表位分割的标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.Ephemeris.GetTabValues">
            <summary>
            表行内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.EphemerisParam">
            <summary>
            一个GPS卫星导航信息记录,
            包含卫星编号，时刻，轨道根数等。具有摄动改正参数。
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Toc">
            <summary>
            RTCM 3 参数， //2016.01.20, double, add, 
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.DeltaN">
            <summary>
            平均角速度n的改正值。 mean motion difference from computed value (r/s)
            </summary> 
        </member>
        <member name="P:Gnsser.EphemerisParam.EyeDot">
            <summary>
            轨道倾角i的变化率， rate of change of inclination              (r/s)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.OmegaDot">
             <summary>
            升交点赤经Omega的变化率， rate of change of right ascension          (r/s)
             </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Cuc">
            <summary>
            升交距角 u = w + f 的余弦的调和改正振幅。 cosine harmonic correction to arg. of lat. (r)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Cus">
            <summary>
             升交距角 u = w + f 的正弦的调和改正振幅。 csine harmonic correction to arg. of lat.   (r)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Crc">
            <summary>
            卫星到地心距离r的余弦调和改正项。cosine harmonic correction to radius       (m)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Crs">
            <summary>
            卫星到地心距离r的正弦调和改正项。sine harmonic correction to radius         (m)单位m
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Cic">
            <summary>
             轨道倾角i的余弦调和改正项。cosine harmonic correction to inclination  (r)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Cis">
            <summary>
             轨道倾角i的正弦调和改正项。sine harmonic correction to inclination    (r)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.IODE">
            <summary>
            Issue of Data，Ephemeris/数据、星历发布时间。
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.CodesL2">
            <summary>
            L2上的码codes on l2 channel (binary, 01-info, 10-coeff/matrix)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.GPSWeeks">
            <summary>
            GPS周，与Toe一同表示时间 gps week # (to go with toe)               (wk)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.BeiDouWeeks">
            <summary>
            BeiDou周  
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.GalileoWeeks">
            <summary>
            Galileo周  
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Tgd1OfBeidDou">
            <summary>
            BDS卫星B1I星上设备时延差
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.Tgd2OfBeidDou">
            <summary>
            BDS卫星B2I星上设备时延差
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.SatH1">
            <summary>
            BDS卫星健康状况
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.L2PDataFlag">
            <summary>
            P码的数据标记
            l2 info satData flag (binary, 0-norm, 1-set off)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.SVAccuracy">
            <summary>
            卫星精度（m）URA index (converted)                      (m)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.SVHealth">
            <summary>
            卫星健康状态 sv health    (6 bits, 0-ok, 1-not)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.TGD">
            <summary>
             est. group delay   (tsv-tgd)               (s)
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.IODC">
            <summary>
            钟的数据龄期issue of satData svClock
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.FitInterval">
            <summary>
            bit1,Resolution:
            RTCM 3 参数， //2016.01.20, double, add, 
            </summary>
        </member>
        <member name="P:Gnsser.EphemerisParam.TTM">
            <summary>
            电文发送时刻（单位为GPS周内的秒，通过交接字（HOW）中的Z计算得出）
             transmission time of message  
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisParam.GetClockOffset(Geo.Times.Time)">
            <summary>
            获取卫星钟差。
            </summary>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.GetClockOffset(Gnsser.EphemerisParam,Geo.Times.Time)">
            <summary>
            获取卫星钟差
            </summary>
            <param name="record">星历参数</param>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.GetEphemerisInfo(Geo.Times.Time,System.Boolean)">
            <summary> 
            计算星历信息。
            compute pos of broadcast orbit (BC) for matrix single time
            sense of the corrector (with relativity) is:   t=tsv-dt-dtr
            BC is in GPS system time (use svClock corr, time in sec.of.week)
            </summary>
            <param name="gpsTime"></param>
            <param name="myModes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.SatSvClock_NonRelative(System.Double)">
            <summary>
            二阶多项式归算钟差。经过改正后，各卫星间的同步误差可保持在20ns以内，这个影响可在相对定位中通过求差中消除。 
            compute satellite svClock correction (non-relativity term)
            sense of the corrector is:   t=tsv-dt
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.SatSvClock_Relative(System.Double,System.Double)">
            <summary>
            compute satellite svClock correction (relativity term)
            sense of the corrector is:   t=tsv-dt-dtr
            </summary>
            <param name="t"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.GetSatXyz(Geo.Times.Time)">
            <summary>
            根据轨道根数计算卫星位置。
            compute ECBF XYZ at time t from broadcast elements
                          units: fraction, meters, radians
            note: t corrected for SV svClock error, also passed in svClock
            note: also passing relativitistic correction
            </summary>
            <param name="gpsTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisParam.EccentricAnomaly(System.Double)">
            <summary>
            compute eccentric anomaly at time TProduct from broadcast elements
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IEphemeris">
            <summary>
            星历接口。主要包含卫星的位置、钟差，及其变化量。
            </summary>
        </member>
        <member name="P:Gnsser.IEphemeris.RelativeCorrection">
            <summary>
            钟差的相对论改正，单位为秒。通过卫星相对速度计算而来。
            </summary>
        </member>
        <member name="T:Gnsser.IPosition">
            <summary>
            位置状态接口
            </summary>
        </member>
        <member name="P:Gnsser.IPosition.XYZ">
            <summary>
            空间直角坐标
            </summary>
        </member>
        <member name="P:Gnsser.IPosition.XyzDot">
            <summary>
            速度，以空间直角坐标表示。
            </summary>
        </member>
        <member name="P:Gnsser.IPosition.GeoCoord">
            <summary>
            大地坐标,以XYZ为基础，不用设置。只用读取。
            </summary>
        </member>
        <member name="T:Gnsser.IEphemerisServiceFactory">
            <summary>
            星历数据工厂接口
            </summary>
        </member>
        <member name="M:Gnsser.IEphemerisServiceFactory.CreateFromFile(System.String)">
            <summary>
            从文件获取。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IFileEphemerisService">
            <summary>
             星历以文件形式存储。 一个类的实例代表一个文件。通常只能计算文件有效范围内的新历信息。
            </summary>
        </member>
        <member name="T:Gnsser.INetEphemerisService">
            <summary>
            以网络服务形式表达的星历信息。
            </summary>
        </member>
        <member name="T:Gnsser.IDatabaseEphemerisService">
            <summary>
            以数据库存储的星历信息。
            </summary>
        </member>
        <member name="T:Gnsser.IgsProductLocalPathBuilder">
            <summary>
             IGS产品本地路径生成器。并不检查存在性。
             若无系统则，采用系统为 U（Unkown）
            </summary>
        </member>
        <member name="M:Gnsser.IgsProductLocalPathBuilder.#ctor">
            <summary>
            默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.IgsProductLocalPathBuilder.#ctor(System.String[],System.Collections.Generic.List{System.String},Gnsser.IgsProductType,System.Boolean)">
            <summary>
            常用构造函数
            </summary>
            <param name="productDirectory">星历目录</param>
            <param name="sourceNames">星历文件数据源字典</param>
            <param name="type">类型</param>
            <param name="IsWeekly">是否为周解</param>
        </member>
        <member name="M:Gnsser.IgsProductLocalPathBuilder.#ctor(System.String[],System.Collections.Generic.Dictionary{Gnsser.SatelliteType,System.Collections.Generic.List{System.String}},Gnsser.IgsProductType,System.Boolean)">
            <summary>
            常用构造函数
            </summary>
            <param name="productDirectory">星历目录</param>
            <param name="sourceNameDic">星历文件数据源字典</param>
            <param name="type">类型</param>
            <param name="IsWeekly">是否为周解</param>
        </member>
        <member name="P:Gnsser.IgsProductLocalPathBuilder.IsWeekly">
            <summary>
            是否是周为周期
            </summary>
        </member>
        <member name="P:Gnsser.IgsProductLocalPathBuilder.SourceNameDic">
            <summary>
            多系统数据源字典
            </summary>
        </member>
        <member name="P:Gnsser.IgsProductLocalPathBuilder.ProductDirectories">
            <summary>
            星历目录
            </summary>
        </member>
        <member name="P:Gnsser.IgsProductLocalPathBuilder.IgsProductSourceType">
            <summary>
            IGS 产品数据源类型
            </summary>
        </member>
        <member name="M:Gnsser.IgsProductLocalPathBuilder.Get(Geo.Times.Time)">
            <summary>
            负责生成  路径，并不检查路径的存在性。
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.IgsProductLocalPathBuilder.Get(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            负责生成  路径，并不检查路径的存在性。
            </summary>
            <param name="satelliteType">系统类型</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.FileEphemerisService">
            <summary>
            星历以文件形式存储。
            一个类的实例代表一个文件。
            导航导航文件，又包括GPS，GLONASS，北斗，伽利略等，文件又包含精密星历 Sp3 等。
            导航文件应该分类，如GPS发布轨道根数，2小时一次，而GLONASS有的星历太短，还需要反推轨道根数？
            </summary>
        </member>
        <member name="M:Gnsser.FileEphemerisService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Gnsser.FileEphemerisService.ServiceType">
            <summary>
            星历服务类型
            </summary>
        </member>
        <member name="P:Gnsser.FileEphemerisService.SatCount">
            <summary>
            卫星数量。这个只能说明整个文件数据源包含的卫星数量。不代表单个历元。
            </summary>
        </member>
        <member name="P:Gnsser.FileEphemerisService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.FileEphemerisService.Prns">
            <summary>
            卫星编号列表。
            </summary>
        </member>
        <member name="P:Gnsser.FileEphemerisService.SatelliteTypes">
            <summary>
            卫星类型列表
            </summary>
        </member>
        <member name="M:Gnsser.FileEphemerisService.GetPrns(Gnsser.SatelliteType)">
            <summary>
            指定类型的卫星编号
            </summary>
            <param name="type">卫星类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.Gets">
            <summary>
            获取所有数据源中存储的信息。这个比较占用内存，慎用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.Get(System.String,Geo.Times.Time)">
            <summary>
            获取指定时刻卫星信息
            </summary>
            <param name="prnName">卫星编号</param>
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否健康
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.CompareTo(Gnsser.Service.IEphemerisService)">
            <summary>
            比较大小。用于排序。如果为负数 则表示本对象较小。
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.Gets(Gnsser.SatelliteNumber)">
            <summary>
            获取数据源中存储的离散的星历信息，这些信息是原始存储的。
            </summary>
            <param name="prn"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time,System.Double)">
            <summary>
            获取星历列表，这些信息是可能是拟合的结果。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="from">起始时间</param>
            <param name="to">终止时间</param>
            <param name="interval">间隔（秒）</param>
        </member>
        <member name="M:Gnsser.FileEphemerisService.ToString">
            <summary>
            打印输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.IsAvailable(Gnsser.SatelliteType,Geo.Times.Time)">
            <summary>
            从时段和系统类型判断是否支持
            </summary>
            <param name="satType"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.FileEphemerisService.IsAvailable(System.Collections.Generic.List{Gnsser.SatelliteType},Geo.Times.Time)">
            <summary>
            从时段和系统类型判断是否支持
            </summary>
            <param name="satType"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.SequentialFileEphemerisService">
            <summary>
            依据输入的路径，提供一段连续的星历数据文件服务。
            文件集合数据源。支持单系统类型取决于数据内容。
            假想的使用条件为多个连续的SP3文件。
            根据传入的路径，按照时间和系统类型进行排序。如果是相邻数据源，则直接拼接，以获得连续的服务。
            如果有重复的传输，则取第一个（实际上，还需要判断有效时间等）。
            传入的文件按照系统进行分类，如果传入的数据混乱，则可能造成不可用。
            </summary>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.#ctor(Gnsser.IEphemerisServiceFactory,System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="factory">工厂</param>
            <param name="pathes">文件路径</param>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.#ctor(System.Collections.Generic.IEnumerable{Gnsser.Service.IEphemerisService})">
            <summary>
            单个服务集合注册成多文件服务
            </summary>
            <param name="sources"></param>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService.dic">
            <summary>
            星历数据源字典。
            </summary>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService._sources">
            <summary>
            暂时保留，以列表形式存储。
            </summary>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService.CoordinateSystem">
            <summary>
            该星历采用的坐标系统,如 IGS08， ITR97
            </summary>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService.MaxGap">
            <summary>
            数据源最大的间隔，超过这个间隔则不可以提供服务。
            </summary>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService.Prns">
            <summary>
            所有的卫星列表
            </summary>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.GetTimePeriods(Gnsser.SatelliteType)">
            <summary>
            有效时间段。用于多文件。性能已优化。
            </summary>
        </member>
        <member name="P:Gnsser.SequentialFileEphemerisService.TimePeriod">
            <summary>
            总的有效时间段，多个时段可能不是连续的，详细的可以使用 GetTimePeriods(SatelliteType satelliteType) 方法。
            该属性将被多次访问，所以预先赋值。性能已优化。
            </summary>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.GetGpsTimePeriod">
            <summary>
            懒加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.Gets(Gnsser.SatelliteNumber,Geo.Times.Time,Geo.Times.Time)">
            <summary>
            原始输出所有的数据。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="from">起始时间</param>
            <param name="to">截止时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.Gets">
            <summary>
            获取所有星历信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.Get(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            拟合输出。
            当前策略，在众多数据源中，选择包含有效时间段内的进行计算并返回。
            待改进：如果有精密星历。。。。。
            </summary>
            <param name="prn">卫星编号</param>
            <param name="gpsTime">时刻</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.IsAvailable(Gnsser.SatelliteNumber,Geo.Times.Time)">
            <summary>
            是否健康可用
            </summary>
            <param name="prn"></param>
            <param name="satTime"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.IsAvailable(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            是否可用.只是一个初步的判断，并没有去获取星历。
            </summary>
            <param name="time">时间</param>
            <param name="satelliteType">卫星类型</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SequentialFileEphemerisService.GetNearstService(Geo.Times.Time,Gnsser.SatelliteType)">
            <summary>
            指定时间前后最接近的服务。
            </summary>
            <param name="time">指定时间</param>
            <param name="satelliteType">指定的系统</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IMultiFileEphemerisService">
            <summary>
            文件集合数据源。争取能够合并多个星历数据源，从而提供连续的星历服务。
            </summary>
        </member>
        <member name="T:Gnsser.EphemerisInterpolator1">
            <summary>
            星历插值器。目前采用切比雪夫和拉格朗日差值。
            传入  EphemerisInfo 列表 也可是 Sp3Record 列表，可以从数据库或者直接从文件获取。
            每次只能处理一个卫星，即PRN，否则容易引起混乱。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.#ctor(System.Collections.Generic.List{Gnsser.Ephemeris})">
            <summary>
            初始化时，输入要插值的星历信息列表。
            列表至少包含 2 个星历。
            </summary>
            <param name="oldInfos"></param>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.GetEphemerisInfo(Geo.Times.Time)">
            <summary>
            获取插值后的 EphemerisInfo。
            注意：不对钟差相对论误差进行改正，此处时间是卫星钟时间，没有相对信息。2014.09.08
            失败，如超过时间，则返回null
            由于一般没有卫星速度的数据，必须通过插值坐标计算速度。2015.03.
            如果有速度信息，以下的方法就不合适了。
            </summary> 
            <param name="gpsTime">时间</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.GetNearstIndexes(System.Collections.Generic.List{Gnsser.Ephemeris},System.Double,System.Int32)">
            <summary>
            获取指定数组中与 X 最相近的数组编号。 
            </summary>
            <param name="XArray">递增或递减数组</param>
            <param name="xValue"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.GetNearstIndexes(System.Collections.Generic.List{Gnsser.Ephemeris},Geo.Times.Time,System.Int32)">
            <summary>
            获取指定数组中与 X 最相近的数组编号。 
            </summary>
            <param name="XArray">递增或递减数组</param>
            <param name="xValue"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.Lagrange(System.Double[],System.Double[],System.Double,System.Double@,System.Double@)">
            <summary>
            拉格朗日插值 崔阳
            </summary>
            <param name="xs"></param>
            <param name="ys"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dydx"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisInterpolator1.SatPo(Geo.Times.Time,Geo.Coordinates.XYZ)">
            <summary>
            差值计算
            </summary>
            <param name="rTime"></param>
            <param name="staXyz"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolator1.XYZ(System.Double,System.Double[],System.Double[],System.Int32,System.Double,System.Double@,System.Double[]@,System.Double@,System.Double@)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolator1.LG(System.Int32,System.Double,System.Double[],System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisInterpolator1.prodd(System.Int32,System.Double[],System.Double)" -->
        <member name="T:Gnsser.EphemerisUtil">
            <summary>
            轨道参数计算器。
            </summary>
        </member>
        <member name="M:Gnsser.EphemerisUtil.IsEphemerisParam(Gnsser.SatelliteType)">
            <summary>
            判断是否参数表示的星历
            </summary>
            <param name="satType"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.GetSatsInVisible(Geo.Coordinates.XYZ,System.Collections.Generic.IEnumerable{Gnsser.Ephemeris},System.Double)">
            <summary>
            根据卫星位置，计算可视卫星
            </summary>
            <param name="stationPos"></param>
            <param name="Ephemeries"></param>
            <param name="cutOffAngle">高度截止角</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.GetSatsInVisible(Geo.Coordinates.GeoCoord,System.Collections.Generic.IEnumerable{Gnsser.Ephemeris},System.Double)">
            <summary>
            根据卫星位置，计算可视卫星
            </summary>
            <param name="geoCoord"></param>
            <param name="Ephemeries"></param>
            <param name="cutOffAngle">高度截止角</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.GetSatsInVisible(Geo.Coordinates.XYZ,Geo.Coordinates.GeoCoord,System.Collections.Generic.IEnumerable{Gnsser.Ephemeris},System.Double)">
            <summary>
            根据卫星位置，计算可视卫星
            </summary>
            <param name="xyz"></param>
            <param name="geoCoord"></param>
            <param name="Ephemeries"></param>
            <param name="cutOffAngle">高度截止角</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.GetRms(Gnsser.Service.EphemerisServiceType)">
            <summary>
            根据星历服务类型给定一个初步的精度信息。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.CorrectEarthSagnac(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            卫星坐标的地球自转改正
            </summary>
            <param name="satPos">卫星位置</param>
            <param name="receiverPos">接收机位置</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.CorrectEarthSagnac(Geo.Coordinates.XYZ,System.Double)">
            <summary>
            卫星坐标的地球自转改正
            </summary>
            <param name="satPos">卫星位置</param>
            <param name="elapsedTime">信号传输时间</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gnsser.EphemerisUtil.CorrectEarthSagnac_Fast(Geo.Coordinates.XYZ,System.Double)" -->
        <member name="M:Gnsser.EphemerisUtil.GetRelativeCorrection(Geo.Coordinates.XYZ,Geo.Coordinates.XYZ)">
            <summary>
            相对论改正。
            </summary>
            <param name="SatXyz">卫星位置</param>
            <param name="SatSpeed">卫星速度</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.EphemerisUtil.KeplerEqForEccAnomaly(System.Double,System.Double)">
            <summary>
            定点迭代法
            开普勒方程 for 偏心改正。
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">M 平近点角</param>
            <param name="e">椭圆轨道的偏心率</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.GpstkOrbitUtil">
            <summary>
            轨道计算方法。
            参考自Gpstk的算法.
            </summary>
        </member>
        <member name="T:Gnsser.OrbitParam">
            <summary>
            6 轨道参数。
            </summary>
        </member>
        <member name="M:Gnsser.OrbitParam.#ctor">
            <summary>
            轨道 6 根数默认构造函数。
            </summary>
        </member>
        <member name="M:Gnsser.OrbitParam.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            轨道 6 根数构造函数。
            </summary>
            <param name="Inclination">斜率</param>
            <param name="LongOfAscension">升角点赤经</param>
            <param name="SemiMajor">长轴半径</param>
            <param name="Eccentricity">偏心率</param>
            <param name="PerigeeAngle">近升角距</param>
            <param name="EpochOfPerigee">近地点时刻</param> 
        </member>
        <member name="P:Gnsser.OrbitParam.Eccentricity">
            <summary>
            偏心率 e
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.SemiMajor">
            <summary>
            轨道椭圆长半径 a
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.Inclination">
            <summary>
            轨道倾角 time、eye
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.LongOfAscension">
            <summary>
             升角点赤经  big Omega 卫星由南到北经过赤道的交点的经度。
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.ArgumentOfPerigee">
            <summary>
            近升角距 small omega ，近地点和升角点的角度,轨道椭圆定向
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.EpochOfPerigee">
            <summary>
            卫星过近地点时刻 tao 卫星在椭圆上位置: 过近地点时刻τ
            Perigee: 1.近地点; 2.绕地运动的天体轨道上离地心最近点。
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.MeanAnomaly">
            <summary>
            平近点角M，M是一个假设量，
            如果卫星在轨道上运动的平均速度为n，则平近点角定义为：  M＝n（t-τ）
            </summary>
        </member>
        <member name="P:Gnsser.OrbitParam.EccentricAnomaly">
            <summary>
            偏近点角 E
            </summary>
        </member>
        <member name="M:Gnsser.OrbitParam.SimpleLoopAndSetEccentricAnomaly(System.Double,System.Double)">
            <summary>
            开普勒方程计算。
            采用简单迭代法求偏近点角 E
            </summary>
        </member>
        <member name="M:Gnsser.OrbitParam.DifferentialLoopAndSetEccentricAnomaly(System.Double,System.Double)">
            <summary>
            开普勒方程计算。
            微分迭代法,牛顿法，收敛更快。
            </summary>
            <param name="Eccentricity">偏心率e</param>
            <param name="MeanAnomaly">平</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OrbitParamCaculator">
            <summary>
            轨道参数计算器。
            </summary>
        </member>
        <member name="M:Gnsser.OrbitParamCaculator.KeplerEqForEccAnomaly(System.Double,System.Double)">
            <summary>
            牛顿法
            开普勒方程 for 偏心改正。
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">M 平近点角</param>
            <param name="e">椭圆轨道的偏心率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitParamCaculator.Frac(System.Double)">
            <summary>
            求小数部分，始终为正。
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitParamCaculator.Modulo(System.Double,System.Double)">
            <summary>
            x mod y
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitParamCaculator.KeplerEqForEccAnomalyFixtPoint(System.Double,System.Double)">
            <summary>
            定点迭代法
            开普勒方程 for 偏心改正。
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">M 平近点角</param>
            <param name="e">椭圆轨道的偏心率</param>
            <returns></returns>
        </member>
        <member name="T:Gnsser.OrbitUtil">
            <summary>
            卫星轨道计算方法。
            是本程序的主要的轨道计算方法。
            </summary>
        </member>
        <member name="M:Gnsser.OrbitUtil.GetSatXyz(Gnsser.EphemerisParam,System.Double,Gnsser.SatelliteType,System.Boolean)">
            <summary>
            根据轨道根数计算卫星位置。
            核心计算程序。
            </summary>
            <param name="secOfWeek">GPS周秒</param>
            <param name="isGeosynchronous">是否是地球同步轨道卫星</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.KeplerEqForEccAnomalyOld(System.Double,System.Double)">
            <summary>
            牛顿法
            开普勒方程 由平近点角 M 和 离心率 e 计算 偏近点角E
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">rad</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.KeplerEqForEccAnomaly(System.Double,System.Double)">
            <summary>
            牛顿法
            开普勒方程 for 偏心改正。
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">M 平近点角</param>
            <param name="e">椭圆轨道的偏心率</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.Frac(System.Double)">
            <summary>
            求小数部分，始终为正。
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.Modulo(System.Double,System.Double)">
            <summary>
            x mod y
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.KeplerEqForEccAnomaly1(System.Double,System.Double)">
            <summary>
            定点迭代法
            开普勒方程 由平近点角 M 和 离心率 e 计算 偏近点角E
            solve for eccentric anomaly given mean anomaly and orbital eccentricity
            use simple fixed point iteration of kepler's equation
            </summary>
            <param name="em">rad</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.OrbitUtil.GetSatPos(Gnsser.EphemerisParam,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            计算位置。
            </summary>
            <param name="record"></param>
            <param name="gpstime">周秒</param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="Z"></param>
        </member>
        <member name="T:Gnsser.RtkLibOrbitUtil">
            <summary>
            Rtklib 的轨道计算方法。
            </summary>
        </member>
        <member name="T:Gnsser.SimpleClockBias">
            <summary>
            最轻量级得到钟差表达
            </summary>
        </member>
        <member name="M:Gnsser.SimpleClockBias.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SimpleClockBias.ClockBias">
            <summary>
            卫星钟差,在当前参考时刻的钟差。
            SV clock bias       (fraction)
            </summary>
        </member>
        <member name="P:Gnsser.SimpleClockBias.Time">
            <summary>
            历元???应该是卫星钟的参考时间//czs,2014.10.18
            </summary>
        </member>
        <member name="T:Gnsser.SatClockBias">
            <summary>
            钟差基础类。
            </summary>
        </member>
        <member name="M:Gnsser.SatClockBias.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBias.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBias.Source">
            <summary>
            数据源标识，如igs,igr,com等，即使同一时刻同一颗卫星，不同的数据源也是不同的。
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBias.ClockDrift">
            <summary>
            卫星钟的漂移
            SV clock drift      (sec/sec)
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBias.DriftRate">
            <summary>
            卫星钟漂移速度，频漂速度
            SV clock drift rate (sec/sec2)
            </summary>
        </member>
        <member name="P:Gnsser.SatClockBias.ClockBiasRms">
            <summary>
            SP3文件中卫星钟差的精度估值sdev,单位是皮秒
            单位皮秒。文件中文是psec。
            psec, picosecond, 皮秒， 1皮秒=10-12秒， 1纳秒=10-9秒， 1微秒=10-6秒， 1毫秒=10-3秒
            </summary>
        </member>
        <member name="M:Gnsser.SatClockBias.GetOffset(System.Double)">
            <summary>
            获取偏移时刻的钟差
            </summary>
            <param name="timeDiffer">与参考时间之差</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.GetClockOffset(Gnsser.SatClockBias,System.Double)">
            <summary>
            获取钟差
            </summary>
            <param name="bias">钟差参数</param>
            <param name="timeDiffer">与参考时间之差</param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.CompareTo(Gnsser.SatClockBias)">
            <summary>
            比较，此处只对比时间
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.Equals(System.Object)">
            <summary>
            相对
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.GetHashCode">
            <summary>
            哈希表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.ToString">
            <summary>
            字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.GetTabTitles">
            <summary>
            已制表位分割的标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.SatClockBias.GetTabValues">
            <summary>
            表行内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.IWithTime">
            <summary>
            具有卫星编号的接口
            </summary>
        </member>
        <member name="P:Gnsser.IWithTime.Time">
            <summary>
            历元时间
            </summary>
        </member>
        <member name="T:Gnsser.IWithPrn">
            <summary>
            具有卫星编号的接口
            </summary>
        </member>
        <member name="P:Gnsser.IWithPrn.Prn">
            <summary>
            卫星编号
            </summary>
        </member>
        <member name="T:Gnsser.ISatTime">
            <summary>
            具有卫星编号和历元的接口
            </summary>
        </member>
        <member name="T:Gnsser.ISatTimeSourced">
            <summary>
            具有卫星编号和历元的接口
            </summary>
        </member>
        <member name="P:Gnsser.ISatTimeSourced.Source">
            <summary>
            数据源标识，如igs,igr,com等，即使同一时刻同一颗卫星，不同的数据源也是不同的。
            </summary>
        </member>
        <member name="T:Gnsser.IClockBias">
            <summary>
            卫星钟差接口
            </summary>
        </member>
        <member name="P:Gnsser.IClockBias.ClockDrift">
            <summary>
            偏移速度
            </summary>
        </member>
        <member name="P:Gnsser.IClockBias.DriftRate">
            <summary>
            速率
            </summary>
        </member>
        <member name="T:Gnsser.ISimpleClockBias">
            <summary>
            最轻量级得到钟差表达
            </summary>
        </member>
        <member name="P:Gnsser.ISimpleClockBias.ClockBias">
            <summary>
            钟差偏差
            </summary>
        </member>
        <member name="T:Gnsser.ReportElMarker">
            <summary>
            报表的EL标签
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.Title">
            <summary>
            题目
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.ConfigInfo">
            <summary>
            设置信息
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.CalculationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.FirstTable">
            <summary>
            第一个表
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.SecondTable">
            <summary>
            第二个表
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.SecondTableTitle">
            <summary>
            第二个表
            </summary>
        </member>
        <member name="F:Gnsser.ReportElMarker.Content">
            <summary>
            内容区域
            </summary>
        </member>
        <member name="T:Gnsser.HtmlReportBuilder">
            <summary>
            GNSS HTML 报表生成器
            </summary>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.#ctor(Gnsser.GnssProcessOption,Gnsser.DataSourceContext)">
            <summary>
            报表生成器
            </summary>
            <param name="Option"></param>
            <param name="context"></param>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.Title">
            <summary>
            报表标题
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.OutputPath">
            <summary>
            输出路径
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.ResultBuilder">
            <summary>
            结果生成器
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.Results">
            <summary>
            所有的结果，并不是一个文件的结果。
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.ModelPath">
            <summary>
            模型路径
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.Option">
            <summary>
            计算选项
            </summary>
        </member>
        <member name="P:Gnsser.HtmlReportBuilder.Context">
            <summary>
            数据上下文
            </summary>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildAccuceEvalTableOfSingleSite(System.Text.StringBuilder,System.Collections.Generic.List{Gnsser.Service.SimpleGnssResult})">
            <summary>
            单站结果
            </summary>
            <param name="mainSb"></param>
            <param name="Results"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildGeneraInfoTableOfSingleSite(System.Text.StringBuilder,Gnsser.Service.SingleSiteGnssResult)">
            <summary>
            单站结果
            </summary>
            <param name="mainSb"></param>
            <param name="firstObject"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildGeneraInfoTableOfBaseLine(System.Text.StringBuilder,Gnsser.IWithEstimatedBaseline)">
            <summary>
            双站单基线结果
            </summary>
            <param name="mainSb"></param>
            <param name="firstObject"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildGeneraInfoTableOfMultiSites(System.Text.StringBuilder,Gnsser.Service.SimpleGnssResult)">
            <summary>
            多站结果
            </summary>
            <param name="mainSb"></param>
            <param name="firstObject"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildTableRow(System.String)">
            <summary>
            row
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildTableHeaderCell(System.String)">
             <summary>
            th
             </summary>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildTableCell(System.Object)">
            <summary>
            cell
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlTdStart">
            <summary>
            td
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlTdEnd">
            <summary>
            td
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlTrStart">
            <summary>
            tr
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlTrEnd">
            <summary>
            tr
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlThEnd">
            <summary>
            th
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.HtmlThStart">
            <summary>
            th
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuidHtmlStart(System.String)">
            <summary>
            构建html起始标签
            </summary>
            <param name="markerName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuidHtmlEnd(System.String)">
            <summary>
            构建html结束标签
            </summary>
            <param name="markerName"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.SetValue(System.String,System.String)">
            <summary>
            设置
            </summary>
            <param name="key"></param>
            <param name="val"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.Add(Gnsser.Service.SimpleGnssResult)">
            <summary>
            统计一个结果
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.Build">
            <summary>
            生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildAndWriteToFile">
            <summary>
            构建且写入
            </summary>
        </member>
        <member name="M:Gnsser.HtmlReportBuilder.BuildWriteAndOpen(System.Boolean)">
            <summary>
            构建并打开
            </summary>
        </member>
        <member name="T:Gnsser.SimplePositionResult">
            <summary>
            简单的定位结果，用于获取结果
            </summary>
        </member>
        <member name="T:Gnsser.PointPositionBackGroundRunner">
            <summary>
            定位后台运行器
            </summary>
        </member>
        <member name="M:Gnsser.PointPositionBackGroundRunner.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="optPath"></param> 
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.PointPositionBackGroundRunner.#ctor(Gnsser.GnssProcessOption,System.String,System.String)">
            <summary>
            构造函数，观测文件在配置对象中
            </summary>
            <param name="Option"></param> 
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.PointPositionBackGroundRunner.#ctor(Gnsser.GnssProcessOption,System.String[],System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Option"></param>
            <param name="oFilePathes"></param>
            <param name="nFilePath">星历路径，如果不设置，则自动匹配</param>
            <param name="clkPath">路径，如果不设置，则自动匹配</param>
        </member>
        <member name="M:Gnsser.PointPositionBackGroundRunner.BuildSolver(System.String[])">
            <summary>
            构建并初始化GNSS数据流计算器。
            </summary>
            <param name="inputPathes"></param>
            <returns></returns>
        </member>
        <member name="M:Gnsser.PointPositionBackGroundRunner.OnProcessed(Gnsser.SingleSiteGnssSolveStreamer)">
            <summary>
            处理了一个。
            </summary>
            <param name="solver"></param>
        </member>
        <member name="T:Gnsser.AndroidGnssTimeCaculator">
            单位默认为秒，若非，则以单位尾注，如Nanos，以GPS时间作为转换基准。
        </member>
        <member name="F:Gnsser.AndroidGnssTimeCaculator.mPeriod">
            周期，单位秒
        </member>
        <member name="F:Gnsser.AndroidGnssTimeCaculator.mOffsetToGpsT">
            卫星系统起始时间与UTC偏差，单位秒，采用加号改正系统时间
        </member>
        <member name="F:Gnsser.AndroidGnssTimeCaculator.localGpsTimeNaro">
            接收机开始测量的本地时间，归算到GPST, 单位纳秒
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.#ctor(System.Int64,Gnsser.LongFraction)">
            GNSS时间计算构造函数，
            @param TimeNanos 当前系统时间，计时器，守时器，通常从开机0开始
            @param mFullBiasNanos 当前时间与GPS起始时间之差
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.#ctor(Gnsser.LongFraction)">
            GNSS时间计算构造函数
            @param localGpsTimeNaro 接收机开始测量的本地时间，归算到GPST, 单位纳秒
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.setSatelliteType(Gnsser.SatelliteType)">
            设置卫星系统类型，决定时间起始，周期和偏移量。
            @param mSatType
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.getMeasurementGpsTimeNanos(System.Double)">
            计算具体卫星的测量时间。measurement time = TimeNanos + TimeOffsetNanos
            @param timeOffsetNanos 当前卫星的测量时刻相相对于历元时刻的偏差
            @return
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.getTimeDiffer(System.Double,System.Double)">
            计算时间差
            @param timeOffsetNanos 当前卫星的测量时刻相相对于历元时刻的偏差
            @param receivedSvTimeNanos 测量时刻卫星的时间，为改卫星系统时间，接下来需要转换为GPS时间
            @return
        </member>
        <member name="M:Gnsser.AndroidGnssTimeCaculator.getLocalGpsTimeNaro">
            <summary>
            本地接收机GPS时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gnsser.LongFraction">
            2017/7/31,czs, create in hongqing, new class.
        </member>
        <member name="T:Gnsser.AnGnssUtil">
            2017/7/27,czs, create in hongqing, new class.
        </member>
        <member name="M:Gnsser.AnGnssUtil.getConstellationName(System.Int32)">
            通过系统ID转换成易读的文字。
             @param constellationId
             @return
        </member>
        <member name="T:Geo.IWithGnsserConfig">
            <summary>
             是否具有全局配置参数 GnsserConfig
            </summary>
        </member>
        <member name="P:Geo.IWithGnsserConfig.GnsserConfig">
            <summary>
            配置属性
            </summary>
        </member>
        <member name="T:Geo.OperationEventHandler">
            <summary>
            操作处理委托
            </summary>
            <param name="oper"></param>
        </member>
        <member name="T:Geo.OperationProcessEngine">
            <summary>
            数据遍历处理器
            </summary>  
        </member>
        <member name="M:Geo.OperationProcessEngine.#ctor(Geo.OperationManager,System.String)">
            <summary>
            数据处理链条
            </summary>
            <param name="OperationManager"></param>
            <param name="gofPath"></param>
        </member>
        <member name="M:Geo.OperationProcessEngine.#ctor(Geo.OperationManager,System.Collections.Generic.List{Geo.OperationInfo})">
            <summary>
            构造函数
            </summary>
            <param name="OperationManager"></param>
            <param name="OperationInfos"></param>
        </member>
        <member name="M:Geo.OperationProcessEngine.#ctor(Geo.OperationManager,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="OperationManager"></param>
        </member>
        <member name="P:Geo.OperationProcessEngine.ProcessCount">
            <summary>
            处理器数量
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.IsParallel">
            <summary>
            是否并行计算
            </summary>
        </member>
        <member name="E:Geo.OperationProcessEngine.OperationProcessing">
            <summary>
            操作即将执行
            </summary>
        </member>
        <member name="E:Geo.OperationProcessEngine.OperationCompleted">
            <summary>
            操作已经执行完毕
            </summary>
        </member>
        <member name="E:Geo.OperationProcessEngine.OperationStatedMessageProduced">
            <summary>
            处理细节信息
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.GnsserConfig">
            <summary>
            一些全局设置
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.BaseDirecory">
            <summary>
            根目录。
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.CurrentOperation">
            <summary>
            当前操作
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.CancelProcessing">
            <summary>
            取消执行！
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.IsRunning">
            <summary>
            当前是否正在运行
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.OperationManager">
            <summary>
            操作信息读取器
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.OperationInfos">
            <summary>
            操作信息读取器
            </summary>
        </member>
        <member name="M:Geo.OperationProcessEngine.Process">
            <summary>
            数据处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geo.OperationProcessEngine.SerialProcess">
            <summary>
            串行计算
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geo.OperationProcessEngine.DoOperation(Geo.OperationInfo)">
            <summary>
            执行操作
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Geo.OperationProcessEngine.DoOperation(Geo.IOperation)">
            <summary>
            执行一个操作。
            </summary>
            <param name="oper"></param>
        </member>
        <member name="M:Geo.OperationProcessEngine.InitAndAccept">
            <summary>
            初始化并进行参数检核。
            </summary>
        </member>
        <member name="M:Geo.OperationProcessEngine.ParallelProcess">
            <summary>
            并行计算，按照各个操作的依赖关系执行。
            </summary>
        </member>
        <member name="P:Geo.OperationProcessEngine.ParallelOptions">
            <summary>
             并行配置
            </summary>
        </member>
        <member name="M:Geo.OperationProcessEngine.SetGofes(System.String[])">
            <summary>
            设置数据流，清空以往。
            </summary>
            <param name="gofPathes"></param>
        </member>
        <member name="M:Geo.OperationProcessEngine.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Geo.OperationProcessEngine.AddGofes(System.String[])">
            <summary>
            添加操作文件到当前任务.如果当前有任务正在执行，则添加到其后。
            </summary>
            <param name="gofPathes"></param>
        </member>
        <member name="T:Geo.DependentTreeBuilder">
            <summary>
            依赖树生成器
            </summary>
        </member>
        <member name="M:Geo.DependentTreeBuilder.#ctor(System.Collections.Generic.List{Geo.OperationInfo})">
            <summary>
            构造函数。
            </summary>
            <param name="OperationInfos"></param>
        </member>
        <member name="P:Geo.DependentTreeBuilder.OperationInfos">
            <summary>
            原始操作列表。默认名称不能一样！！！
            </summary>
        </member>
        <member name="M:Geo.DependentTreeBuilder.GetNextOperationInfos(System.Collections.Generic.List{Geo.OperationInfo},System.Collections.Generic.List{Geo.OperationInfo})">
            <summary>
            提取下层中依赖已经全部在上层的操作信息。
            </summary>
            <param name="upppers"></param>
            <param name="lowers"></param>
            <returns></returns>
        </member>
    </members>
</doc>
